-- ASDL's 7 builtin types are:
-- identifier, int, string, bytes, object, singleton, constant

module Fortran {

mod
    = Module(identifier name, program_unit* contains)
    | Program(identifier name, stmt* body, program_unit* contains)

program_unit
    = Subroutine(identifier name, arg* args, stmt* body,
            program_unit* contains)
    | Function(identifier name, arg* args, stmt* body, expr returns,
            program_unit* contains)
        attributes (int lineno, int col_offset)

stmt
    = Declaration(decl* vars)
    | Assignment(identifier target, expr value)
    | SubroutineCall(identifier name, expr* args)
    | If(expr test, stmt* body, stmt* orelse)
    | Stop(int? code)
    | ErrorStop()
    | DoLoop(do_loop_head? head, stmt* body)
    | Select(expr test, case_stmt* body, case_default? default)
    | Use(use_symbol module, use_symbol* symbols)
    | Cycle()
    | Exit()
    | WhileLoop(expr test, stmt* body)
    | Print(string? fmt, expr* values)
        attributes (int lineno, int col_offset)

expr
    = BinOp(expr left, operator op, expr right)
    | UnaryOp(unaryop op, expr operand)
    | Compare(expr left, cmpop op, expr right)
    | FuncCallOrArray(identifier func, expr* args, keyword* keywords)
    | Array(identifier name, array_index* args)
    | Num(object n)
    | Str(string s)
    | Name(identifier id)
    | Constant(constant value)
        attributes (int lineno, int col_offset)

operator = Add | Sub | Mul | Div | Pow

unaryop = Invert | Not | UAdd | USub

cmpop = Eq | NotEq | Lt | LtE | Gt | GtE

decl = (identifier sym, string sym_type)

arg = (identifier arg)
        attributes (int lineno, int col_offset)

keyword = (identifier? arg, expr value)

array_index = ArrayIndex(expr? left, expr? right, expr? step)

do_loop_head = (identifier var, expr start, expr end, expr? increment)
        attributes (int lineno, int col_offset)

case_stmt = (expr test, stmt* body)
        attributes (int lineno, int col_offset)

case_default = (stmt* body)
        attributes (int lineno, int col_offset)

use_symbol = (identifier sym, identifier? rename)

}
