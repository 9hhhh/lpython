; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { [3 x double], i32, [1 x %dimension_descriptor] }
%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { [4 x double], i32, [1 x %dimension_descriptor] }
%array.1 = type { [4 x double], i32, [2 x %dimension_descriptor] }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@12 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@13 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@14 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@15 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main() {
.entry:
  %a = alloca %array, align 8
  %0 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %a, i32 0, i32 2
  %2 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %1, i32 0, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 2
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 3
  store i32 1, i32* %3, align 4
  store i32 1, i32* %4, align 4
  store i32 3, i32* %5, align 4
  %7 = load i32, i32* %5, align 4
  %8 = load i32, i32* %4, align 4
  %9 = sub i32 %7, %8
  %10 = add i32 %9, 1
  store i32 %10, i32* %6, align 4
  %b = alloca %array.0, align 8
  %11 = getelementptr %array.0, %array.0* %b, i32 0, i32 1
  store i32 0, i32* %11, align 4
  %12 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %13 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %12, i32 0, i32 0
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 0
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 1
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 2
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 3
  store i32 1, i32* %14, align 4
  store i32 1, i32* %15, align 4
  store i32 4, i32* %16, align 4
  %18 = load i32, i32* %16, align 4
  %19 = load i32, i32* %15, align 4
  %20 = sub i32 %18, %19
  %21 = add i32 %20, 1
  store i32 %21, i32* %17, align 4
  %c = alloca %array.1, align 8
  %22 = getelementptr %array.1, %array.1* %c, i32 0, i32 1
  store i32 0, i32* %22, align 4
  %23 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %24 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %23, i32 0, i32 0
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 1
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 2
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 3
  store i32 1, i32* %25, align 4
  store i32 1, i32* %26, align 4
  store i32 2, i32* %27, align 4
  %29 = load i32, i32* %27, align 4
  %30 = load i32, i32* %26, align 4
  %31 = sub i32 %29, %30
  %32 = add i32 %31, 1
  store i32 %32, i32* %28, align 4
  %33 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %23, i32 0, i32 1
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 0
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 1
  %36 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 2
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 3
  store i32 1, i32* %34, align 4
  store i32 1, i32* %35, align 4
  store i32 2, i32* %36, align 4
  %38 = load i32, i32* %36, align 4
  %39 = load i32, i32* %35, align 4
  %40 = sub i32 %38, %39
  %41 = add i32 %40, 1
  store i32 %41, i32* %37, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %42 = load i32, i32* %i, align 4
  %43 = add i32 %42, 1
  %44 = icmp sle i32 %43, 3
  br i1 %44, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %45 = load i32, i32* %i, align 4
  %46 = add i32 %45, 1
  store i32 %46, i32* %i, align 4
  %47 = getelementptr %array, %array* %a, i32 0, i32 2
  %48 = load i32, i32* %i, align 4
  %49 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %47, i32 0, i32 0
  %50 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = sub i32 %48, %51
  %53 = mul i32 1, %52
  %54 = add i32 0, %53
  %55 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 3
  %56 = load i32, i32* %55, align 4
  %57 = mul i32 1, %56
  %58 = getelementptr %array, %array* %a, i32 0, i32 0
  %59 = getelementptr [3 x double], [3 x double]* %58, i32 0, i32 0
  %60 = getelementptr inbounds double, double* %59, i32 %54
  %61 = load i32, i32* %i, align 4
  %62 = add i32 %61, 10
  %63 = sitofp i32 %62 to double
  store double %63, double* %60, align 8
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %64 = getelementptr %array, %array* %a, i32 0, i32 2
  %65 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %64, i32 0, i32 0
  %66 = getelementptr %dimension_descriptor, %dimension_descriptor* %65, i32 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = sub i32 1, %67
  %69 = mul i32 1, %68
  %70 = add i32 0, %69
  %71 = getelementptr %dimension_descriptor, %dimension_descriptor* %65, i32 0, i32 3
  %72 = load i32, i32* %71, align 4
  %73 = mul i32 1, %72
  %74 = getelementptr %array, %array* %a, i32 0, i32 0
  %75 = getelementptr [3 x double], [3 x double]* %74, i32 0, i32 0
  %76 = getelementptr inbounds double, double* %75, i32 %70
  %77 = load double, double* %76, align 8
  %78 = fcmp une double %77, 1.100000e+01
  br i1 %78, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %iftmp = phi i32 [ 1, %then ], [ 2, %else ]
  %79 = getelementptr %array, %array* %a, i32 0, i32 2
  %80 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %79, i32 0, i32 0
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %80, i32 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = sub i32 2, %82
  %84 = mul i32 1, %83
  %85 = add i32 0, %84
  %86 = getelementptr %dimension_descriptor, %dimension_descriptor* %80, i32 0, i32 3
  %87 = load i32, i32* %86, align 4
  %88 = mul i32 1, %87
  %89 = getelementptr %array, %array* %a, i32 0, i32 0
  %90 = getelementptr [3 x double], [3 x double]* %89, i32 0, i32 0
  %91 = getelementptr inbounds double, double* %90, i32 %85
  %92 = load double, double* %91, align 8
  %93 = fcmp une double %92, 1.200000e+01
  br i1 %93, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %iftmp4 = phi i32 [ 1, %then1 ], [ 2, %else2 ]
  %94 = getelementptr %array, %array* %a, i32 0, i32 2
  %95 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %94, i32 0, i32 0
  %96 = getelementptr %dimension_descriptor, %dimension_descriptor* %95, i32 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = sub i32 3, %97
  %99 = mul i32 1, %98
  %100 = add i32 0, %99
  %101 = getelementptr %dimension_descriptor, %dimension_descriptor* %95, i32 0, i32 3
  %102 = load i32, i32* %101, align 4
  %103 = mul i32 1, %102
  %104 = getelementptr %array, %array* %a, i32 0, i32 0
  %105 = getelementptr [3 x double], [3 x double]* %104, i32 0, i32 0
  %106 = getelementptr inbounds double, double* %105, i32 %100
  %107 = load double, double* %106, align 8
  %108 = fcmp une double %107, 1.300000e+01
  br i1 %108, label %then5, label %else6

then5:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont7

else6:                                            ; preds = %ifcont3
  br label %ifcont7

ifcont7:                                          ; preds = %else6, %then5
  %iftmp8 = phi i32 [ 1, %then5 ], [ 2, %else6 ]
  store i32 10, i32* %i, align 4
  br label %loop.head9

loop.head9:                                       ; preds = %loop.body10, %ifcont7
  %109 = load i32, i32* %i, align 4
  %110 = add i32 %109, 1
  %111 = icmp sle i32 %110, 14
  br i1 %111, label %loop.body10, label %loop.end11

loop.body10:                                      ; preds = %loop.head9
  %112 = load i32, i32* %i, align 4
  %113 = add i32 %112, 1
  store i32 %113, i32* %i, align 4
  %114 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %115 = load i32, i32* %i, align 4
  %116 = sub i32 %115, 10
  %117 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %114, i32 0, i32 0
  %118 = getelementptr %dimension_descriptor, %dimension_descriptor* %117, i32 0, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = sub i32 %116, %119
  %121 = mul i32 1, %120
  %122 = add i32 0, %121
  %123 = getelementptr %dimension_descriptor, %dimension_descriptor* %117, i32 0, i32 3
  %124 = load i32, i32* %123, align 4
  %125 = mul i32 1, %124
  %126 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %127 = getelementptr [4 x double], [4 x double]* %126, i32 0, i32 0
  %128 = getelementptr inbounds double, double* %127, i32 %122
  %129 = load i32, i32* %i, align 4
  %130 = sitofp i32 %129 to double
  store double %130, double* %128, align 8
  br label %loop.head9

loop.end11:                                       ; preds = %loop.head9
  %131 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %132 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %131, i32 0, i32 0
  %133 = getelementptr %dimension_descriptor, %dimension_descriptor* %132, i32 0, i32 1
  %134 = load i32, i32* %133, align 4
  %135 = sub i32 1, %134
  %136 = mul i32 1, %135
  %137 = add i32 0, %136
  %138 = getelementptr %dimension_descriptor, %dimension_descriptor* %132, i32 0, i32 3
  %139 = load i32, i32* %138, align 4
  %140 = mul i32 1, %139
  %141 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %142 = getelementptr [4 x double], [4 x double]* %141, i32 0, i32 0
  %143 = getelementptr inbounds double, double* %142, i32 %137
  %144 = load double, double* %143, align 8
  %145 = fcmp une double %144, 1.100000e+01
  br i1 %145, label %then12, label %else13

then12:                                           ; preds = %loop.end11
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont14

else13:                                           ; preds = %loop.end11
  br label %ifcont14

ifcont14:                                         ; preds = %else13, %then12
  %iftmp15 = phi i32 [ 1, %then12 ], [ 2, %else13 ]
  %146 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %147 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %146, i32 0, i32 0
  %148 = getelementptr %dimension_descriptor, %dimension_descriptor* %147, i32 0, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = sub i32 2, %149
  %151 = mul i32 1, %150
  %152 = add i32 0, %151
  %153 = getelementptr %dimension_descriptor, %dimension_descriptor* %147, i32 0, i32 3
  %154 = load i32, i32* %153, align 4
  %155 = mul i32 1, %154
  %156 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %157 = getelementptr [4 x double], [4 x double]* %156, i32 0, i32 0
  %158 = getelementptr inbounds double, double* %157, i32 %152
  %159 = load double, double* %158, align 8
  %160 = fcmp une double %159, 1.200000e+01
  br i1 %160, label %then16, label %else17

then16:                                           ; preds = %ifcont14
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont14
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %iftmp19 = phi i32 [ 1, %then16 ], [ 2, %else17 ]
  %161 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %162 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %161, i32 0, i32 0
  %163 = getelementptr %dimension_descriptor, %dimension_descriptor* %162, i32 0, i32 1
  %164 = load i32, i32* %163, align 4
  %165 = sub i32 3, %164
  %166 = mul i32 1, %165
  %167 = add i32 0, %166
  %168 = getelementptr %dimension_descriptor, %dimension_descriptor* %162, i32 0, i32 3
  %169 = load i32, i32* %168, align 4
  %170 = mul i32 1, %169
  %171 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %172 = getelementptr [4 x double], [4 x double]* %171, i32 0, i32 0
  %173 = getelementptr inbounds double, double* %172, i32 %167
  %174 = load double, double* %173, align 8
  %175 = fcmp une double %174, 1.300000e+01
  br i1 %175, label %then20, label %else21

then20:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont22

else21:                                           ; preds = %ifcont18
  br label %ifcont22

ifcont22:                                         ; preds = %else21, %then20
  %iftmp23 = phi i32 [ 1, %then20 ], [ 2, %else21 ]
  %176 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %177 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %176, i32 0, i32 0
  %178 = getelementptr %dimension_descriptor, %dimension_descriptor* %177, i32 0, i32 1
  %179 = load i32, i32* %178, align 4
  %180 = sub i32 4, %179
  %181 = mul i32 1, %180
  %182 = add i32 0, %181
  %183 = getelementptr %dimension_descriptor, %dimension_descriptor* %177, i32 0, i32 3
  %184 = load i32, i32* %183, align 4
  %185 = mul i32 1, %184
  %186 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %187 = getelementptr [4 x double], [4 x double]* %186, i32 0, i32 0
  %188 = getelementptr inbounds double, double* %187, i32 %182
  %189 = load double, double* %188, align 8
  %190 = fcmp une double %189, 1.400000e+01
  br i1 %190, label %then24, label %else25

then24:                                           ; preds = %ifcont22
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont26

else25:                                           ; preds = %ifcont22
  br label %ifcont26

ifcont26:                                         ; preds = %else25, %then24
  %iftmp27 = phi i32 [ 1, %then24 ], [ 2, %else25 ]
  store i32 0, i32* %i, align 4
  br label %loop.head28

loop.head28:                                      ; preds = %loop.body29, %ifcont26
  %191 = load i32, i32* %i, align 4
  %192 = add i32 %191, 1
  %193 = icmp sle i32 %192, 3
  br i1 %193, label %loop.body29, label %loop.end30

loop.body29:                                      ; preds = %loop.head28
  %194 = load i32, i32* %i, align 4
  %195 = add i32 %194, 1
  store i32 %195, i32* %i, align 4
  %196 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %197 = load i32, i32* %i, align 4
  %198 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %196, i32 0, i32 0
  %199 = getelementptr %dimension_descriptor, %dimension_descriptor* %198, i32 0, i32 1
  %200 = load i32, i32* %199, align 4
  %201 = sub i32 %197, %200
  %202 = mul i32 1, %201
  %203 = add i32 0, %202
  %204 = getelementptr %dimension_descriptor, %dimension_descriptor* %198, i32 0, i32 3
  %205 = load i32, i32* %204, align 4
  %206 = mul i32 1, %205
  %207 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %208 = getelementptr [4 x double], [4 x double]* %207, i32 0, i32 0
  %209 = getelementptr inbounds double, double* %208, i32 %203
  %210 = getelementptr %array, %array* %a, i32 0, i32 2
  %211 = load i32, i32* %i, align 4
  %212 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %210, i32 0, i32 0
  %213 = getelementptr %dimension_descriptor, %dimension_descriptor* %212, i32 0, i32 1
  %214 = load i32, i32* %213, align 4
  %215 = sub i32 %211, %214
  %216 = mul i32 1, %215
  %217 = add i32 0, %216
  %218 = getelementptr %dimension_descriptor, %dimension_descriptor* %212, i32 0, i32 3
  %219 = load i32, i32* %218, align 4
  %220 = mul i32 1, %219
  %221 = getelementptr %array, %array* %a, i32 0, i32 0
  %222 = getelementptr [3 x double], [3 x double]* %221, i32 0, i32 0
  %223 = getelementptr inbounds double, double* %222, i32 %217
  %224 = load double, double* %223, align 8
  %225 = fsub double %224, 1.000000e+01
  store double %225, double* %209, align 8
  br label %loop.head28

loop.end30:                                       ; preds = %loop.head28
  %226 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %227 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %226, i32 0, i32 0
  %228 = getelementptr %dimension_descriptor, %dimension_descriptor* %227, i32 0, i32 1
  %229 = load i32, i32* %228, align 4
  %230 = sub i32 1, %229
  %231 = mul i32 1, %230
  %232 = add i32 0, %231
  %233 = getelementptr %dimension_descriptor, %dimension_descriptor* %227, i32 0, i32 3
  %234 = load i32, i32* %233, align 4
  %235 = mul i32 1, %234
  %236 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %237 = getelementptr [4 x double], [4 x double]* %236, i32 0, i32 0
  %238 = getelementptr inbounds double, double* %237, i32 %232
  %239 = load double, double* %238, align 8
  %240 = fcmp une double %239, 1.000000e+00
  br i1 %240, label %then31, label %else32

then31:                                           ; preds = %loop.end30
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %loop.end30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %iftmp34 = phi i32 [ 1, %then31 ], [ 2, %else32 ]
  %241 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %242 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %241, i32 0, i32 0
  %243 = getelementptr %dimension_descriptor, %dimension_descriptor* %242, i32 0, i32 1
  %244 = load i32, i32* %243, align 4
  %245 = sub i32 2, %244
  %246 = mul i32 1, %245
  %247 = add i32 0, %246
  %248 = getelementptr %dimension_descriptor, %dimension_descriptor* %242, i32 0, i32 3
  %249 = load i32, i32* %248, align 4
  %250 = mul i32 1, %249
  %251 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %252 = getelementptr [4 x double], [4 x double]* %251, i32 0, i32 0
  %253 = getelementptr inbounds double, double* %252, i32 %247
  %254 = load double, double* %253, align 8
  %255 = fcmp une double %254, 2.000000e+00
  br i1 %255, label %then35, label %else36

then35:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont37

else36:                                           ; preds = %ifcont33
  br label %ifcont37

ifcont37:                                         ; preds = %else36, %then35
  %iftmp38 = phi i32 [ 1, %then35 ], [ 2, %else36 ]
  %256 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %257 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %256, i32 0, i32 0
  %258 = getelementptr %dimension_descriptor, %dimension_descriptor* %257, i32 0, i32 1
  %259 = load i32, i32* %258, align 4
  %260 = sub i32 3, %259
  %261 = mul i32 1, %260
  %262 = add i32 0, %261
  %263 = getelementptr %dimension_descriptor, %dimension_descriptor* %257, i32 0, i32 3
  %264 = load i32, i32* %263, align 4
  %265 = mul i32 1, %264
  %266 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %267 = getelementptr [4 x double], [4 x double]* %266, i32 0, i32 0
  %268 = getelementptr inbounds double, double* %267, i32 %262
  %269 = load double, double* %268, align 8
  %270 = fcmp une double %269, 3.000000e+00
  br i1 %270, label %then39, label %else40

then39:                                           ; preds = %ifcont37
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont41

else40:                                           ; preds = %ifcont37
  br label %ifcont41

ifcont41:                                         ; preds = %else40, %then39
  %iftmp42 = phi i32 [ 1, %then39 ], [ 2, %else40 ]
  %271 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %272 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %271, i32 0, i32 0
  %273 = getelementptr %dimension_descriptor, %dimension_descriptor* %272, i32 0, i32 1
  %274 = load i32, i32* %273, align 4
  %275 = sub i32 4, %274
  %276 = mul i32 1, %275
  %277 = add i32 0, %276
  %278 = getelementptr %dimension_descriptor, %dimension_descriptor* %272, i32 0, i32 3
  %279 = load i32, i32* %278, align 4
  %280 = mul i32 1, %279
  %281 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %282 = getelementptr [4 x double], [4 x double]* %281, i32 0, i32 0
  %283 = getelementptr inbounds double, double* %282, i32 %277
  %284 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %285 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %284, i32 0, i32 0
  %286 = getelementptr %dimension_descriptor, %dimension_descriptor* %285, i32 0, i32 1
  %287 = load i32, i32* %286, align 4
  %288 = sub i32 1, %287
  %289 = mul i32 1, %288
  %290 = add i32 0, %289
  %291 = getelementptr %dimension_descriptor, %dimension_descriptor* %285, i32 0, i32 3
  %292 = load i32, i32* %291, align 4
  %293 = mul i32 1, %292
  %294 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %295 = getelementptr [4 x double], [4 x double]* %294, i32 0, i32 0
  %296 = getelementptr inbounds double, double* %295, i32 %290
  %297 = load double, double* %296, align 8
  %298 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %299 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %298, i32 0, i32 0
  %300 = getelementptr %dimension_descriptor, %dimension_descriptor* %299, i32 0, i32 1
  %301 = load i32, i32* %300, align 4
  %302 = sub i32 2, %301
  %303 = mul i32 1, %302
  %304 = add i32 0, %303
  %305 = getelementptr %dimension_descriptor, %dimension_descriptor* %299, i32 0, i32 3
  %306 = load i32, i32* %305, align 4
  %307 = mul i32 1, %306
  %308 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %309 = getelementptr [4 x double], [4 x double]* %308, i32 0, i32 0
  %310 = getelementptr inbounds double, double* %309, i32 %304
  %311 = load double, double* %310, align 8
  %312 = fadd double %297, %311
  %313 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %314 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %313, i32 0, i32 0
  %315 = getelementptr %dimension_descriptor, %dimension_descriptor* %314, i32 0, i32 1
  %316 = load i32, i32* %315, align 4
  %317 = sub i32 3, %316
  %318 = mul i32 1, %317
  %319 = add i32 0, %318
  %320 = getelementptr %dimension_descriptor, %dimension_descriptor* %314, i32 0, i32 3
  %321 = load i32, i32* %320, align 4
  %322 = mul i32 1, %321
  %323 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %324 = getelementptr [4 x double], [4 x double]* %323, i32 0, i32 0
  %325 = getelementptr inbounds double, double* %324, i32 %319
  %326 = load double, double* %325, align 8
  %327 = fadd double %312, %326
  %328 = getelementptr %array, %array* %a, i32 0, i32 2
  %329 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %328, i32 0, i32 0
  %330 = getelementptr %dimension_descriptor, %dimension_descriptor* %329, i32 0, i32 1
  %331 = load i32, i32* %330, align 4
  %332 = sub i32 1, %331
  %333 = mul i32 1, %332
  %334 = add i32 0, %333
  %335 = getelementptr %dimension_descriptor, %dimension_descriptor* %329, i32 0, i32 3
  %336 = load i32, i32* %335, align 4
  %337 = mul i32 1, %336
  %338 = getelementptr %array, %array* %a, i32 0, i32 0
  %339 = getelementptr [3 x double], [3 x double]* %338, i32 0, i32 0
  %340 = getelementptr inbounds double, double* %339, i32 %334
  %341 = load double, double* %340, align 8
  %342 = fadd double %327, %341
  store double %342, double* %283, align 8
  %343 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %344 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %343, i32 0, i32 0
  %345 = getelementptr %dimension_descriptor, %dimension_descriptor* %344, i32 0, i32 1
  %346 = load i32, i32* %345, align 4
  %347 = sub i32 4, %346
  %348 = mul i32 1, %347
  %349 = add i32 0, %348
  %350 = getelementptr %dimension_descriptor, %dimension_descriptor* %344, i32 0, i32 3
  %351 = load i32, i32* %350, align 4
  %352 = mul i32 1, %351
  %353 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %354 = getelementptr [4 x double], [4 x double]* %353, i32 0, i32 0
  %355 = getelementptr inbounds double, double* %354, i32 %349
  %356 = load double, double* %355, align 8
  %357 = fcmp une double %356, 1.700000e+01
  br i1 %357, label %then43, label %else44

then43:                                           ; preds = %ifcont41
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont45

else44:                                           ; preds = %ifcont41
  br label %ifcont45

ifcont45:                                         ; preds = %else44, %then43
  %iftmp46 = phi i32 [ 1, %then43 ], [ 2, %else44 ]
  %358 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %359 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %358, i32 0, i32 0
  %360 = getelementptr %dimension_descriptor, %dimension_descriptor* %359, i32 0, i32 1
  %361 = load i32, i32* %360, align 4
  %362 = sub i32 4, %361
  %363 = mul i32 1, %362
  %364 = add i32 0, %363
  %365 = getelementptr %dimension_descriptor, %dimension_descriptor* %359, i32 0, i32 3
  %366 = load i32, i32* %365, align 4
  %367 = mul i32 1, %366
  %368 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %369 = getelementptr [4 x double], [4 x double]* %368, i32 0, i32 0
  %370 = getelementptr inbounds double, double* %369, i32 %364
  %371 = getelementptr %array, %array* %a, i32 0, i32 2
  %372 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %371, i32 0, i32 0
  %373 = getelementptr %dimension_descriptor, %dimension_descriptor* %372, i32 0, i32 1
  %374 = load i32, i32* %373, align 4
  %375 = sub i32 1, %374
  %376 = mul i32 1, %375
  %377 = add i32 0, %376
  %378 = getelementptr %dimension_descriptor, %dimension_descriptor* %372, i32 0, i32 3
  %379 = load i32, i32* %378, align 4
  %380 = mul i32 1, %379
  %381 = getelementptr %array, %array* %a, i32 0, i32 0
  %382 = getelementptr [3 x double], [3 x double]* %381, i32 0, i32 0
  %383 = getelementptr inbounds double, double* %382, i32 %377
  %384 = load double, double* %383, align 8
  store double %384, double* %370, align 8
  %385 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %386 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %385, i32 0, i32 0
  %387 = getelementptr %dimension_descriptor, %dimension_descriptor* %386, i32 0, i32 1
  %388 = load i32, i32* %387, align 4
  %389 = sub i32 4, %388
  %390 = mul i32 1, %389
  %391 = add i32 0, %390
  %392 = getelementptr %dimension_descriptor, %dimension_descriptor* %386, i32 0, i32 3
  %393 = load i32, i32* %392, align 4
  %394 = mul i32 1, %393
  %395 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %396 = getelementptr [4 x double], [4 x double]* %395, i32 0, i32 0
  %397 = getelementptr inbounds double, double* %396, i32 %391
  %398 = load double, double* %397, align 8
  %399 = fcmp une double %398, 1.100000e+01
  br i1 %399, label %then47, label %else48

then47:                                           ; preds = %ifcont45
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont49

else48:                                           ; preds = %ifcont45
  br label %ifcont49

ifcont49:                                         ; preds = %else48, %then47
  %iftmp50 = phi i32 [ 1, %then47 ], [ 2, %else48 ]
  store i32 0, i32* %i, align 4
  br label %loop.head51

loop.head51:                                      ; preds = %loop.end55, %ifcont49
  %400 = load i32, i32* %i, align 4
  %401 = add i32 %400, 1
  %402 = icmp sle i32 %401, 2
  br i1 %402, label %loop.body52, label %loop.end56

loop.body52:                                      ; preds = %loop.head51
  %403 = load i32, i32* %i, align 4
  %404 = add i32 %403, 1
  store i32 %404, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head53

loop.head53:                                      ; preds = %loop.body54, %loop.body52
  %405 = load i32, i32* %j, align 4
  %406 = add i32 %405, 1
  %407 = icmp sle i32 %406, 2
  br i1 %407, label %loop.body54, label %loop.end55

loop.body54:                                      ; preds = %loop.head53
  %408 = load i32, i32* %j, align 4
  %409 = add i32 %408, 1
  store i32 %409, i32* %j, align 4
  %410 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %411 = load i32, i32* %i, align 4
  %412 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %410, i32 0, i32 0
  %413 = getelementptr %dimension_descriptor, %dimension_descriptor* %412, i32 0, i32 1
  %414 = load i32, i32* %413, align 4
  %415 = sub i32 %411, %414
  %416 = mul i32 1, %415
  %417 = add i32 0, %416
  %418 = getelementptr %dimension_descriptor, %dimension_descriptor* %412, i32 0, i32 3
  %419 = load i32, i32* %418, align 4
  %420 = mul i32 1, %419
  %421 = load i32, i32* %j, align 4
  %422 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %410, i32 0, i32 1
  %423 = getelementptr %dimension_descriptor, %dimension_descriptor* %422, i32 0, i32 1
  %424 = load i32, i32* %423, align 4
  %425 = sub i32 %421, %424
  %426 = mul i32 %420, %425
  %427 = add i32 %417, %426
  %428 = getelementptr %dimension_descriptor, %dimension_descriptor* %422, i32 0, i32 3
  %429 = load i32, i32* %428, align 4
  %430 = mul i32 %420, %429
  %431 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %432 = getelementptr [4 x double], [4 x double]* %431, i32 0, i32 0
  %433 = getelementptr inbounds double, double* %432, i32 %427
  %434 = load i32, i32* %i, align 4
  %435 = load i32, i32* %j, align 4
  %436 = add i32 %434, %435
  %437 = add i32 %436, 10
  %438 = sitofp i32 %437 to double
  store double %438, double* %433, align 8
  br label %loop.head53

loop.end55:                                       ; preds = %loop.head53
  br label %loop.head51

loop.end56:                                       ; preds = %loop.head51
  %439 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %440 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %439, i32 0, i32 0
  %441 = getelementptr %dimension_descriptor, %dimension_descriptor* %440, i32 0, i32 1
  %442 = load i32, i32* %441, align 4
  %443 = sub i32 1, %442
  %444 = mul i32 1, %443
  %445 = add i32 0, %444
  %446 = getelementptr %dimension_descriptor, %dimension_descriptor* %440, i32 0, i32 3
  %447 = load i32, i32* %446, align 4
  %448 = mul i32 1, %447
  %449 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %439, i32 0, i32 1
  %450 = getelementptr %dimension_descriptor, %dimension_descriptor* %449, i32 0, i32 1
  %451 = load i32, i32* %450, align 4
  %452 = sub i32 1, %451
  %453 = mul i32 %448, %452
  %454 = add i32 %445, %453
  %455 = getelementptr %dimension_descriptor, %dimension_descriptor* %449, i32 0, i32 3
  %456 = load i32, i32* %455, align 4
  %457 = mul i32 %448, %456
  %458 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %459 = getelementptr [4 x double], [4 x double]* %458, i32 0, i32 0
  %460 = getelementptr inbounds double, double* %459, i32 %454
  %461 = load double, double* %460, align 8
  %462 = fcmp une double %461, 1.200000e+01
  br i1 %462, label %then57, label %else58

then57:                                           ; preds = %loop.end56
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @12, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont59

else58:                                           ; preds = %loop.end56
  br label %ifcont59

ifcont59:                                         ; preds = %else58, %then57
  %iftmp60 = phi i32 [ 1, %then57 ], [ 2, %else58 ]
  %463 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %464 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %463, i32 0, i32 0
  %465 = getelementptr %dimension_descriptor, %dimension_descriptor* %464, i32 0, i32 1
  %466 = load i32, i32* %465, align 4
  %467 = sub i32 1, %466
  %468 = mul i32 1, %467
  %469 = add i32 0, %468
  %470 = getelementptr %dimension_descriptor, %dimension_descriptor* %464, i32 0, i32 3
  %471 = load i32, i32* %470, align 4
  %472 = mul i32 1, %471
  %473 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %463, i32 0, i32 1
  %474 = getelementptr %dimension_descriptor, %dimension_descriptor* %473, i32 0, i32 1
  %475 = load i32, i32* %474, align 4
  %476 = sub i32 2, %475
  %477 = mul i32 %472, %476
  %478 = add i32 %469, %477
  %479 = getelementptr %dimension_descriptor, %dimension_descriptor* %473, i32 0, i32 3
  %480 = load i32, i32* %479, align 4
  %481 = mul i32 %472, %480
  %482 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %483 = getelementptr [4 x double], [4 x double]* %482, i32 0, i32 0
  %484 = getelementptr inbounds double, double* %483, i32 %478
  %485 = load double, double* %484, align 8
  %486 = fcmp une double %485, 1.300000e+01
  br i1 %486, label %then61, label %else62

then61:                                           ; preds = %ifcont59
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @13, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont63

else62:                                           ; preds = %ifcont59
  br label %ifcont63

ifcont63:                                         ; preds = %else62, %then61
  %iftmp64 = phi i32 [ 1, %then61 ], [ 2, %else62 ]
  %487 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %488 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %487, i32 0, i32 0
  %489 = getelementptr %dimension_descriptor, %dimension_descriptor* %488, i32 0, i32 1
  %490 = load i32, i32* %489, align 4
  %491 = sub i32 2, %490
  %492 = mul i32 1, %491
  %493 = add i32 0, %492
  %494 = getelementptr %dimension_descriptor, %dimension_descriptor* %488, i32 0, i32 3
  %495 = load i32, i32* %494, align 4
  %496 = mul i32 1, %495
  %497 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %487, i32 0, i32 1
  %498 = getelementptr %dimension_descriptor, %dimension_descriptor* %497, i32 0, i32 1
  %499 = load i32, i32* %498, align 4
  %500 = sub i32 1, %499
  %501 = mul i32 %496, %500
  %502 = add i32 %493, %501
  %503 = getelementptr %dimension_descriptor, %dimension_descriptor* %497, i32 0, i32 3
  %504 = load i32, i32* %503, align 4
  %505 = mul i32 %496, %504
  %506 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %507 = getelementptr [4 x double], [4 x double]* %506, i32 0, i32 0
  %508 = getelementptr inbounds double, double* %507, i32 %502
  %509 = load double, double* %508, align 8
  %510 = fcmp une double %509, 1.300000e+01
  br i1 %510, label %then65, label %else66

then65:                                           ; preds = %ifcont63
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @14, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont67

else66:                                           ; preds = %ifcont63
  br label %ifcont67

ifcont67:                                         ; preds = %else66, %then65
  %iftmp68 = phi i32 [ 1, %then65 ], [ 2, %else66 ]
  %511 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %512 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %511, i32 0, i32 0
  %513 = getelementptr %dimension_descriptor, %dimension_descriptor* %512, i32 0, i32 1
  %514 = load i32, i32* %513, align 4
  %515 = sub i32 2, %514
  %516 = mul i32 1, %515
  %517 = add i32 0, %516
  %518 = getelementptr %dimension_descriptor, %dimension_descriptor* %512, i32 0, i32 3
  %519 = load i32, i32* %518, align 4
  %520 = mul i32 1, %519
  %521 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %511, i32 0, i32 1
  %522 = getelementptr %dimension_descriptor, %dimension_descriptor* %521, i32 0, i32 1
  %523 = load i32, i32* %522, align 4
  %524 = sub i32 2, %523
  %525 = mul i32 %520, %524
  %526 = add i32 %517, %525
  %527 = getelementptr %dimension_descriptor, %dimension_descriptor* %521, i32 0, i32 3
  %528 = load i32, i32* %527, align 4
  %529 = mul i32 %520, %528
  %530 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %531 = getelementptr [4 x double], [4 x double]* %530, i32 0, i32 0
  %532 = getelementptr inbounds double, double* %531, i32 %526
  %533 = load double, double* %532, align 8
  %534 = fcmp une double %533, 1.400000e+01
  br i1 %534, label %then69, label %else70

then69:                                           ; preds = %ifcont67
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @15, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont71

else70:                                           ; preds = %ifcont67
  br label %ifcont71

ifcont71:                                         ; preds = %else70, %then69
  %iftmp72 = phi i32 [ 1, %then69 ], [ 2, %else70 ]
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)

