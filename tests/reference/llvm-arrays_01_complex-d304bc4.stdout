; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { [3 x %complex_4], i32, [1 x %dimension_descriptor] }
%complex_4 = type { float, float }
%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { [4 x %complex_4], i32, [1 x %dimension_descriptor] }
%array.1 = type { [4 x %complex_4], i32, [2 x %dimension_descriptor] }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@12 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@13 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@14 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@15 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main() {
.entry:
  %a = alloca %array, align 8
  %0 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %a, i32 0, i32 2
  %2 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %1, i32 0, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 2
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 3
  store i32 1, i32* %3, align 4
  store i32 1, i32* %4, align 4
  store i32 3, i32* %5, align 4
  %7 = load i32, i32* %5, align 4
  %8 = load i32, i32* %4, align 4
  %9 = sub i32 %7, %8
  %10 = add i32 %9, 1
  store i32 %10, i32* %6, align 4
  %b = alloca %array.0, align 8
  %11 = getelementptr %array.0, %array.0* %b, i32 0, i32 1
  store i32 0, i32* %11, align 4
  %12 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %13 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %12, i32 0, i32 0
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 0
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 1
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 2
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 3
  store i32 1, i32* %14, align 4
  store i32 1, i32* %15, align 4
  store i32 4, i32* %16, align 4
  %18 = load i32, i32* %16, align 4
  %19 = load i32, i32* %15, align 4
  %20 = sub i32 %18, %19
  %21 = add i32 %20, 1
  store i32 %21, i32* %17, align 4
  %c = alloca %array.1, align 8
  %22 = getelementptr %array.1, %array.1* %c, i32 0, i32 1
  store i32 0, i32* %22, align 4
  %23 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %24 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %23, i32 0, i32 0
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 1
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 2
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 3
  store i32 1, i32* %25, align 4
  store i32 1, i32* %26, align 4
  store i32 2, i32* %27, align 4
  %29 = load i32, i32* %27, align 4
  %30 = load i32, i32* %26, align 4
  %31 = sub i32 %29, %30
  %32 = add i32 %31, 1
  store i32 %32, i32* %28, align 4
  %33 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %23, i32 0, i32 1
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 0
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 1
  %36 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 2
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 3
  store i32 1, i32* %34, align 4
  store i32 1, i32* %35, align 4
  store i32 2, i32* %36, align 4
  %38 = load i32, i32* %36, align 4
  %39 = load i32, i32* %35, align 4
  %40 = sub i32 %38, %39
  %41 = add i32 %40, 1
  store i32 %41, i32* %37, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %42 = load i32, i32* %i, align 4
  %43 = add i32 %42, 1
  %44 = icmp sle i32 %43, 3
  br i1 %44, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %45 = load i32, i32* %i, align 4
  %46 = add i32 %45, 1
  store i32 %46, i32* %i, align 4
  %47 = getelementptr %array, %array* %a, i32 0, i32 2
  %48 = load i32, i32* %i, align 4
  %49 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %47, i32 0, i32 0
  %50 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = sub i32 %48, %51
  %53 = mul i32 1, %52
  %54 = add i32 0, %53
  %55 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 3
  %56 = load i32, i32* %55, align 4
  %57 = mul i32 1, %56
  %58 = getelementptr %array, %array* %a, i32 0, i32 0
  %59 = getelementptr [3 x %complex_4], [3 x %complex_4]* %58, i32 0, i32 0
  %60 = getelementptr inbounds %complex_4, %complex_4* %59, i32 %54
  %61 = load i32, i32* %i, align 4
  %62 = add i32 %61, 10
  %63 = sitofp i32 %62 to float
  %64 = alloca %complex_4, align 8
  %65 = getelementptr %complex_4, %complex_4* %64, i32 0, i32 0
  %66 = getelementptr %complex_4, %complex_4* %64, i32 0, i32 1
  store float %63, float* %65, align 4
  store float 0.000000e+00, float* %66, align 4
  %67 = load %complex_4, %complex_4* %64, align 4
  store %complex_4 %67, %complex_4* %60, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %68 = getelementptr %array, %array* %a, i32 0, i32 2
  %69 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %68, i32 0, i32 0
  %70 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = sub i32 1, %71
  %73 = mul i32 1, %72
  %74 = add i32 0, %73
  %75 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 3
  %76 = load i32, i32* %75, align 4
  %77 = mul i32 1, %76
  %78 = getelementptr %array, %array* %a, i32 0, i32 0
  %79 = getelementptr [3 x %complex_4], [3 x %complex_4]* %78, i32 0, i32 0
  %80 = getelementptr inbounds %complex_4, %complex_4* %79, i32 %74
  %81 = load %complex_4, %complex_4* %80, align 4
  %82 = alloca %complex_4, align 8
  %83 = getelementptr %complex_4, %complex_4* %82, i32 0, i32 0
  %84 = getelementptr %complex_4, %complex_4* %82, i32 0, i32 1
  store float 1.100000e+01, float* %83, align 4
  store float 0.000000e+00, float* %84, align 4
  %85 = load %complex_4, %complex_4* %82, align 4
  %86 = alloca %complex_4, align 8
  store %complex_4 %81, %complex_4* %86, align 4
  %87 = getelementptr %complex_4, %complex_4* %86, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = alloca %complex_4, align 8
  store %complex_4 %85, %complex_4* %89, align 4
  %90 = getelementptr %complex_4, %complex_4* %89, i32 0, i32 0
  %91 = load float, float* %90, align 4
  %92 = alloca %complex_4, align 8
  store %complex_4 %81, %complex_4* %92, align 4
  %93 = getelementptr %complex_4, %complex_4* %92, i32 0, i32 1
  %94 = load float, float* %93, align 4
  %95 = alloca %complex_4, align 8
  store %complex_4 %85, %complex_4* %95, align 4
  %96 = getelementptr %complex_4, %complex_4* %95, i32 0, i32 1
  %97 = load float, float* %96, align 4
  %98 = fcmp une float %88, %91
  %99 = fcmp une float %94, %97
  %100 = and i1 %98, %99
  br i1 %100, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %iftmp = phi i32 [ 1, %then ], [ 2, %else ]
  %101 = getelementptr %array, %array* %a, i32 0, i32 2
  %102 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %101, i32 0, i32 0
  %103 = getelementptr %dimension_descriptor, %dimension_descriptor* %102, i32 0, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = sub i32 2, %104
  %106 = mul i32 1, %105
  %107 = add i32 0, %106
  %108 = getelementptr %dimension_descriptor, %dimension_descriptor* %102, i32 0, i32 3
  %109 = load i32, i32* %108, align 4
  %110 = mul i32 1, %109
  %111 = getelementptr %array, %array* %a, i32 0, i32 0
  %112 = getelementptr [3 x %complex_4], [3 x %complex_4]* %111, i32 0, i32 0
  %113 = getelementptr inbounds %complex_4, %complex_4* %112, i32 %107
  %114 = load %complex_4, %complex_4* %113, align 4
  %115 = alloca %complex_4, align 8
  %116 = getelementptr %complex_4, %complex_4* %115, i32 0, i32 0
  %117 = getelementptr %complex_4, %complex_4* %115, i32 0, i32 1
  store float 1.200000e+01, float* %116, align 4
  store float 0.000000e+00, float* %117, align 4
  %118 = load %complex_4, %complex_4* %115, align 4
  %119 = alloca %complex_4, align 8
  store %complex_4 %114, %complex_4* %119, align 4
  %120 = getelementptr %complex_4, %complex_4* %119, i32 0, i32 0
  %121 = load float, float* %120, align 4
  %122 = alloca %complex_4, align 8
  store %complex_4 %118, %complex_4* %122, align 4
  %123 = getelementptr %complex_4, %complex_4* %122, i32 0, i32 0
  %124 = load float, float* %123, align 4
  %125 = alloca %complex_4, align 8
  store %complex_4 %114, %complex_4* %125, align 4
  %126 = getelementptr %complex_4, %complex_4* %125, i32 0, i32 1
  %127 = load float, float* %126, align 4
  %128 = alloca %complex_4, align 8
  store %complex_4 %118, %complex_4* %128, align 4
  %129 = getelementptr %complex_4, %complex_4* %128, i32 0, i32 1
  %130 = load float, float* %129, align 4
  %131 = fcmp une float %121, %124
  %132 = fcmp une float %127, %130
  %133 = and i1 %131, %132
  br i1 %133, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %iftmp4 = phi i32 [ 1, %then1 ], [ 2, %else2 ]
  %134 = getelementptr %array, %array* %a, i32 0, i32 2
  %135 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %134, i32 0, i32 0
  %136 = getelementptr %dimension_descriptor, %dimension_descriptor* %135, i32 0, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = sub i32 3, %137
  %139 = mul i32 1, %138
  %140 = add i32 0, %139
  %141 = getelementptr %dimension_descriptor, %dimension_descriptor* %135, i32 0, i32 3
  %142 = load i32, i32* %141, align 4
  %143 = mul i32 1, %142
  %144 = getelementptr %array, %array* %a, i32 0, i32 0
  %145 = getelementptr [3 x %complex_4], [3 x %complex_4]* %144, i32 0, i32 0
  %146 = getelementptr inbounds %complex_4, %complex_4* %145, i32 %140
  %147 = load %complex_4, %complex_4* %146, align 4
  %148 = alloca %complex_4, align 8
  %149 = getelementptr %complex_4, %complex_4* %148, i32 0, i32 0
  %150 = getelementptr %complex_4, %complex_4* %148, i32 0, i32 1
  store float 1.300000e+01, float* %149, align 4
  store float 0.000000e+00, float* %150, align 4
  %151 = load %complex_4, %complex_4* %148, align 4
  %152 = alloca %complex_4, align 8
  store %complex_4 %147, %complex_4* %152, align 4
  %153 = getelementptr %complex_4, %complex_4* %152, i32 0, i32 0
  %154 = load float, float* %153, align 4
  %155 = alloca %complex_4, align 8
  store %complex_4 %151, %complex_4* %155, align 4
  %156 = getelementptr %complex_4, %complex_4* %155, i32 0, i32 0
  %157 = load float, float* %156, align 4
  %158 = alloca %complex_4, align 8
  store %complex_4 %147, %complex_4* %158, align 4
  %159 = getelementptr %complex_4, %complex_4* %158, i32 0, i32 1
  %160 = load float, float* %159, align 4
  %161 = alloca %complex_4, align 8
  store %complex_4 %151, %complex_4* %161, align 4
  %162 = getelementptr %complex_4, %complex_4* %161, i32 0, i32 1
  %163 = load float, float* %162, align 4
  %164 = fcmp une float %154, %157
  %165 = fcmp une float %160, %163
  %166 = and i1 %164, %165
  br i1 %166, label %then5, label %else6

then5:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont7

else6:                                            ; preds = %ifcont3
  br label %ifcont7

ifcont7:                                          ; preds = %else6, %then5
  %iftmp8 = phi i32 [ 1, %then5 ], [ 2, %else6 ]
  store i32 10, i32* %i, align 4
  br label %loop.head9

loop.head9:                                       ; preds = %loop.body10, %ifcont7
  %167 = load i32, i32* %i, align 4
  %168 = add i32 %167, 1
  %169 = icmp sle i32 %168, 14
  br i1 %169, label %loop.body10, label %loop.end11

loop.body10:                                      ; preds = %loop.head9
  %170 = load i32, i32* %i, align 4
  %171 = add i32 %170, 1
  store i32 %171, i32* %i, align 4
  %172 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %173 = load i32, i32* %i, align 4
  %174 = sub i32 %173, 10
  %175 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %172, i32 0, i32 0
  %176 = getelementptr %dimension_descriptor, %dimension_descriptor* %175, i32 0, i32 1
  %177 = load i32, i32* %176, align 4
  %178 = sub i32 %174, %177
  %179 = mul i32 1, %178
  %180 = add i32 0, %179
  %181 = getelementptr %dimension_descriptor, %dimension_descriptor* %175, i32 0, i32 3
  %182 = load i32, i32* %181, align 4
  %183 = mul i32 1, %182
  %184 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %185 = getelementptr [4 x %complex_4], [4 x %complex_4]* %184, i32 0, i32 0
  %186 = getelementptr inbounds %complex_4, %complex_4* %185, i32 %180
  %187 = load i32, i32* %i, align 4
  %188 = sitofp i32 %187 to float
  %189 = alloca %complex_4, align 8
  %190 = getelementptr %complex_4, %complex_4* %189, i32 0, i32 0
  %191 = getelementptr %complex_4, %complex_4* %189, i32 0, i32 1
  store float %188, float* %190, align 4
  store float 0.000000e+00, float* %191, align 4
  %192 = load %complex_4, %complex_4* %189, align 4
  store %complex_4 %192, %complex_4* %186, align 4
  br label %loop.head9

loop.end11:                                       ; preds = %loop.head9
  %193 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %194 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %193, i32 0, i32 0
  %195 = getelementptr %dimension_descriptor, %dimension_descriptor* %194, i32 0, i32 1
  %196 = load i32, i32* %195, align 4
  %197 = sub i32 1, %196
  %198 = mul i32 1, %197
  %199 = add i32 0, %198
  %200 = getelementptr %dimension_descriptor, %dimension_descriptor* %194, i32 0, i32 3
  %201 = load i32, i32* %200, align 4
  %202 = mul i32 1, %201
  %203 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %204 = getelementptr [4 x %complex_4], [4 x %complex_4]* %203, i32 0, i32 0
  %205 = getelementptr inbounds %complex_4, %complex_4* %204, i32 %199
  %206 = load %complex_4, %complex_4* %205, align 4
  %207 = alloca %complex_4, align 8
  %208 = getelementptr %complex_4, %complex_4* %207, i32 0, i32 0
  %209 = getelementptr %complex_4, %complex_4* %207, i32 0, i32 1
  store float 1.100000e+01, float* %208, align 4
  store float 0.000000e+00, float* %209, align 4
  %210 = load %complex_4, %complex_4* %207, align 4
  %211 = alloca %complex_4, align 8
  store %complex_4 %206, %complex_4* %211, align 4
  %212 = getelementptr %complex_4, %complex_4* %211, i32 0, i32 0
  %213 = load float, float* %212, align 4
  %214 = alloca %complex_4, align 8
  store %complex_4 %210, %complex_4* %214, align 4
  %215 = getelementptr %complex_4, %complex_4* %214, i32 0, i32 0
  %216 = load float, float* %215, align 4
  %217 = alloca %complex_4, align 8
  store %complex_4 %206, %complex_4* %217, align 4
  %218 = getelementptr %complex_4, %complex_4* %217, i32 0, i32 1
  %219 = load float, float* %218, align 4
  %220 = alloca %complex_4, align 8
  store %complex_4 %210, %complex_4* %220, align 4
  %221 = getelementptr %complex_4, %complex_4* %220, i32 0, i32 1
  %222 = load float, float* %221, align 4
  %223 = fcmp une float %213, %216
  %224 = fcmp une float %219, %222
  %225 = and i1 %223, %224
  br i1 %225, label %then12, label %else13

then12:                                           ; preds = %loop.end11
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont14

else13:                                           ; preds = %loop.end11
  br label %ifcont14

ifcont14:                                         ; preds = %else13, %then12
  %iftmp15 = phi i32 [ 1, %then12 ], [ 2, %else13 ]
  %226 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %227 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %226, i32 0, i32 0
  %228 = getelementptr %dimension_descriptor, %dimension_descriptor* %227, i32 0, i32 1
  %229 = load i32, i32* %228, align 4
  %230 = sub i32 2, %229
  %231 = mul i32 1, %230
  %232 = add i32 0, %231
  %233 = getelementptr %dimension_descriptor, %dimension_descriptor* %227, i32 0, i32 3
  %234 = load i32, i32* %233, align 4
  %235 = mul i32 1, %234
  %236 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %237 = getelementptr [4 x %complex_4], [4 x %complex_4]* %236, i32 0, i32 0
  %238 = getelementptr inbounds %complex_4, %complex_4* %237, i32 %232
  %239 = load %complex_4, %complex_4* %238, align 4
  %240 = alloca %complex_4, align 8
  %241 = getelementptr %complex_4, %complex_4* %240, i32 0, i32 0
  %242 = getelementptr %complex_4, %complex_4* %240, i32 0, i32 1
  store float 1.200000e+01, float* %241, align 4
  store float 0.000000e+00, float* %242, align 4
  %243 = load %complex_4, %complex_4* %240, align 4
  %244 = alloca %complex_4, align 8
  store %complex_4 %239, %complex_4* %244, align 4
  %245 = getelementptr %complex_4, %complex_4* %244, i32 0, i32 0
  %246 = load float, float* %245, align 4
  %247 = alloca %complex_4, align 8
  store %complex_4 %243, %complex_4* %247, align 4
  %248 = getelementptr %complex_4, %complex_4* %247, i32 0, i32 0
  %249 = load float, float* %248, align 4
  %250 = alloca %complex_4, align 8
  store %complex_4 %239, %complex_4* %250, align 4
  %251 = getelementptr %complex_4, %complex_4* %250, i32 0, i32 1
  %252 = load float, float* %251, align 4
  %253 = alloca %complex_4, align 8
  store %complex_4 %243, %complex_4* %253, align 4
  %254 = getelementptr %complex_4, %complex_4* %253, i32 0, i32 1
  %255 = load float, float* %254, align 4
  %256 = fcmp une float %246, %249
  %257 = fcmp une float %252, %255
  %258 = and i1 %256, %257
  br i1 %258, label %then16, label %else17

then16:                                           ; preds = %ifcont14
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont14
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %iftmp19 = phi i32 [ 1, %then16 ], [ 2, %else17 ]
  %259 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %260 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %259, i32 0, i32 0
  %261 = getelementptr %dimension_descriptor, %dimension_descriptor* %260, i32 0, i32 1
  %262 = load i32, i32* %261, align 4
  %263 = sub i32 3, %262
  %264 = mul i32 1, %263
  %265 = add i32 0, %264
  %266 = getelementptr %dimension_descriptor, %dimension_descriptor* %260, i32 0, i32 3
  %267 = load i32, i32* %266, align 4
  %268 = mul i32 1, %267
  %269 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %270 = getelementptr [4 x %complex_4], [4 x %complex_4]* %269, i32 0, i32 0
  %271 = getelementptr inbounds %complex_4, %complex_4* %270, i32 %265
  %272 = load %complex_4, %complex_4* %271, align 4
  %273 = alloca %complex_4, align 8
  %274 = getelementptr %complex_4, %complex_4* %273, i32 0, i32 0
  %275 = getelementptr %complex_4, %complex_4* %273, i32 0, i32 1
  store float 1.300000e+01, float* %274, align 4
  store float 0.000000e+00, float* %275, align 4
  %276 = load %complex_4, %complex_4* %273, align 4
  %277 = alloca %complex_4, align 8
  store %complex_4 %272, %complex_4* %277, align 4
  %278 = getelementptr %complex_4, %complex_4* %277, i32 0, i32 0
  %279 = load float, float* %278, align 4
  %280 = alloca %complex_4, align 8
  store %complex_4 %276, %complex_4* %280, align 4
  %281 = getelementptr %complex_4, %complex_4* %280, i32 0, i32 0
  %282 = load float, float* %281, align 4
  %283 = alloca %complex_4, align 8
  store %complex_4 %272, %complex_4* %283, align 4
  %284 = getelementptr %complex_4, %complex_4* %283, i32 0, i32 1
  %285 = load float, float* %284, align 4
  %286 = alloca %complex_4, align 8
  store %complex_4 %276, %complex_4* %286, align 4
  %287 = getelementptr %complex_4, %complex_4* %286, i32 0, i32 1
  %288 = load float, float* %287, align 4
  %289 = fcmp une float %279, %282
  %290 = fcmp une float %285, %288
  %291 = and i1 %289, %290
  br i1 %291, label %then20, label %else21

then20:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont22

else21:                                           ; preds = %ifcont18
  br label %ifcont22

ifcont22:                                         ; preds = %else21, %then20
  %iftmp23 = phi i32 [ 1, %then20 ], [ 2, %else21 ]
  %292 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %293 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %292, i32 0, i32 0
  %294 = getelementptr %dimension_descriptor, %dimension_descriptor* %293, i32 0, i32 1
  %295 = load i32, i32* %294, align 4
  %296 = sub i32 4, %295
  %297 = mul i32 1, %296
  %298 = add i32 0, %297
  %299 = getelementptr %dimension_descriptor, %dimension_descriptor* %293, i32 0, i32 3
  %300 = load i32, i32* %299, align 4
  %301 = mul i32 1, %300
  %302 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %303 = getelementptr [4 x %complex_4], [4 x %complex_4]* %302, i32 0, i32 0
  %304 = getelementptr inbounds %complex_4, %complex_4* %303, i32 %298
  %305 = load %complex_4, %complex_4* %304, align 4
  %306 = alloca %complex_4, align 8
  %307 = getelementptr %complex_4, %complex_4* %306, i32 0, i32 0
  %308 = getelementptr %complex_4, %complex_4* %306, i32 0, i32 1
  store float 1.400000e+01, float* %307, align 4
  store float 0.000000e+00, float* %308, align 4
  %309 = load %complex_4, %complex_4* %306, align 4
  %310 = alloca %complex_4, align 8
  store %complex_4 %305, %complex_4* %310, align 4
  %311 = getelementptr %complex_4, %complex_4* %310, i32 0, i32 0
  %312 = load float, float* %311, align 4
  %313 = alloca %complex_4, align 8
  store %complex_4 %309, %complex_4* %313, align 4
  %314 = getelementptr %complex_4, %complex_4* %313, i32 0, i32 0
  %315 = load float, float* %314, align 4
  %316 = alloca %complex_4, align 8
  store %complex_4 %305, %complex_4* %316, align 4
  %317 = getelementptr %complex_4, %complex_4* %316, i32 0, i32 1
  %318 = load float, float* %317, align 4
  %319 = alloca %complex_4, align 8
  store %complex_4 %309, %complex_4* %319, align 4
  %320 = getelementptr %complex_4, %complex_4* %319, i32 0, i32 1
  %321 = load float, float* %320, align 4
  %322 = fcmp une float %312, %315
  %323 = fcmp une float %318, %321
  %324 = and i1 %322, %323
  br i1 %324, label %then24, label %else25

then24:                                           ; preds = %ifcont22
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont26

else25:                                           ; preds = %ifcont22
  br label %ifcont26

ifcont26:                                         ; preds = %else25, %then24
  %iftmp27 = phi i32 [ 1, %then24 ], [ 2, %else25 ]
  store i32 0, i32* %i, align 4
  br label %loop.head28

loop.head28:                                      ; preds = %loop.body29, %ifcont26
  %325 = load i32, i32* %i, align 4
  %326 = add i32 %325, 1
  %327 = icmp sle i32 %326, 3
  br i1 %327, label %loop.body29, label %loop.end30

loop.body29:                                      ; preds = %loop.head28
  %328 = load i32, i32* %i, align 4
  %329 = add i32 %328, 1
  store i32 %329, i32* %i, align 4
  %330 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %331 = load i32, i32* %i, align 4
  %332 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %330, i32 0, i32 0
  %333 = getelementptr %dimension_descriptor, %dimension_descriptor* %332, i32 0, i32 1
  %334 = load i32, i32* %333, align 4
  %335 = sub i32 %331, %334
  %336 = mul i32 1, %335
  %337 = add i32 0, %336
  %338 = getelementptr %dimension_descriptor, %dimension_descriptor* %332, i32 0, i32 3
  %339 = load i32, i32* %338, align 4
  %340 = mul i32 1, %339
  %341 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %342 = getelementptr [4 x %complex_4], [4 x %complex_4]* %341, i32 0, i32 0
  %343 = getelementptr inbounds %complex_4, %complex_4* %342, i32 %337
  %344 = getelementptr %array, %array* %a, i32 0, i32 2
  %345 = load i32, i32* %i, align 4
  %346 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %344, i32 0, i32 0
  %347 = getelementptr %dimension_descriptor, %dimension_descriptor* %346, i32 0, i32 1
  %348 = load i32, i32* %347, align 4
  %349 = sub i32 %345, %348
  %350 = mul i32 1, %349
  %351 = add i32 0, %350
  %352 = getelementptr %dimension_descriptor, %dimension_descriptor* %346, i32 0, i32 3
  %353 = load i32, i32* %352, align 4
  %354 = mul i32 1, %353
  %355 = getelementptr %array, %array* %a, i32 0, i32 0
  %356 = getelementptr [3 x %complex_4], [3 x %complex_4]* %355, i32 0, i32 0
  %357 = getelementptr inbounds %complex_4, %complex_4* %356, i32 %351
  %358 = load %complex_4, %complex_4* %357, align 4
  %359 = alloca %complex_4, align 8
  %360 = getelementptr %complex_4, %complex_4* %359, i32 0, i32 0
  %361 = getelementptr %complex_4, %complex_4* %359, i32 0, i32 1
  store float 1.000000e+01, float* %360, align 4
  store float 0.000000e+00, float* %361, align 4
  %362 = load %complex_4, %complex_4* %359, align 4
  %363 = alloca %complex_4, align 8
  store %complex_4 %358, %complex_4* %363, align 4
  %364 = alloca %complex_4, align 8
  store %complex_4 %362, %complex_4* %364, align 4
  %365 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_sub(%complex_4* %363, %complex_4* %364, %complex_4* %365)
  %366 = load %complex_4, %complex_4* %365, align 4
  store %complex_4 %366, %complex_4* %343, align 4
  br label %loop.head28

loop.end30:                                       ; preds = %loop.head28
  %367 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %368 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %367, i32 0, i32 0
  %369 = getelementptr %dimension_descriptor, %dimension_descriptor* %368, i32 0, i32 1
  %370 = load i32, i32* %369, align 4
  %371 = sub i32 1, %370
  %372 = mul i32 1, %371
  %373 = add i32 0, %372
  %374 = getelementptr %dimension_descriptor, %dimension_descriptor* %368, i32 0, i32 3
  %375 = load i32, i32* %374, align 4
  %376 = mul i32 1, %375
  %377 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %378 = getelementptr [4 x %complex_4], [4 x %complex_4]* %377, i32 0, i32 0
  %379 = getelementptr inbounds %complex_4, %complex_4* %378, i32 %373
  %380 = load %complex_4, %complex_4* %379, align 4
  %381 = alloca %complex_4, align 8
  %382 = getelementptr %complex_4, %complex_4* %381, i32 0, i32 0
  %383 = getelementptr %complex_4, %complex_4* %381, i32 0, i32 1
  store float 1.000000e+00, float* %382, align 4
  store float 0.000000e+00, float* %383, align 4
  %384 = load %complex_4, %complex_4* %381, align 4
  %385 = alloca %complex_4, align 8
  store %complex_4 %380, %complex_4* %385, align 4
  %386 = getelementptr %complex_4, %complex_4* %385, i32 0, i32 0
  %387 = load float, float* %386, align 4
  %388 = alloca %complex_4, align 8
  store %complex_4 %384, %complex_4* %388, align 4
  %389 = getelementptr %complex_4, %complex_4* %388, i32 0, i32 0
  %390 = load float, float* %389, align 4
  %391 = alloca %complex_4, align 8
  store %complex_4 %380, %complex_4* %391, align 4
  %392 = getelementptr %complex_4, %complex_4* %391, i32 0, i32 1
  %393 = load float, float* %392, align 4
  %394 = alloca %complex_4, align 8
  store %complex_4 %384, %complex_4* %394, align 4
  %395 = getelementptr %complex_4, %complex_4* %394, i32 0, i32 1
  %396 = load float, float* %395, align 4
  %397 = fcmp une float %387, %390
  %398 = fcmp une float %393, %396
  %399 = and i1 %397, %398
  br i1 %399, label %then31, label %else32

then31:                                           ; preds = %loop.end30
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %loop.end30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %iftmp34 = phi i32 [ 1, %then31 ], [ 2, %else32 ]
  %400 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %401 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %400, i32 0, i32 0
  %402 = getelementptr %dimension_descriptor, %dimension_descriptor* %401, i32 0, i32 1
  %403 = load i32, i32* %402, align 4
  %404 = sub i32 2, %403
  %405 = mul i32 1, %404
  %406 = add i32 0, %405
  %407 = getelementptr %dimension_descriptor, %dimension_descriptor* %401, i32 0, i32 3
  %408 = load i32, i32* %407, align 4
  %409 = mul i32 1, %408
  %410 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %411 = getelementptr [4 x %complex_4], [4 x %complex_4]* %410, i32 0, i32 0
  %412 = getelementptr inbounds %complex_4, %complex_4* %411, i32 %406
  %413 = load %complex_4, %complex_4* %412, align 4
  %414 = alloca %complex_4, align 8
  %415 = getelementptr %complex_4, %complex_4* %414, i32 0, i32 0
  %416 = getelementptr %complex_4, %complex_4* %414, i32 0, i32 1
  store float 2.000000e+00, float* %415, align 4
  store float 0.000000e+00, float* %416, align 4
  %417 = load %complex_4, %complex_4* %414, align 4
  %418 = alloca %complex_4, align 8
  store %complex_4 %413, %complex_4* %418, align 4
  %419 = getelementptr %complex_4, %complex_4* %418, i32 0, i32 0
  %420 = load float, float* %419, align 4
  %421 = alloca %complex_4, align 8
  store %complex_4 %417, %complex_4* %421, align 4
  %422 = getelementptr %complex_4, %complex_4* %421, i32 0, i32 0
  %423 = load float, float* %422, align 4
  %424 = alloca %complex_4, align 8
  store %complex_4 %413, %complex_4* %424, align 4
  %425 = getelementptr %complex_4, %complex_4* %424, i32 0, i32 1
  %426 = load float, float* %425, align 4
  %427 = alloca %complex_4, align 8
  store %complex_4 %417, %complex_4* %427, align 4
  %428 = getelementptr %complex_4, %complex_4* %427, i32 0, i32 1
  %429 = load float, float* %428, align 4
  %430 = fcmp une float %420, %423
  %431 = fcmp une float %426, %429
  %432 = and i1 %430, %431
  br i1 %432, label %then35, label %else36

then35:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont37

else36:                                           ; preds = %ifcont33
  br label %ifcont37

ifcont37:                                         ; preds = %else36, %then35
  %iftmp38 = phi i32 [ 1, %then35 ], [ 2, %else36 ]
  %433 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %434 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %433, i32 0, i32 0
  %435 = getelementptr %dimension_descriptor, %dimension_descriptor* %434, i32 0, i32 1
  %436 = load i32, i32* %435, align 4
  %437 = sub i32 3, %436
  %438 = mul i32 1, %437
  %439 = add i32 0, %438
  %440 = getelementptr %dimension_descriptor, %dimension_descriptor* %434, i32 0, i32 3
  %441 = load i32, i32* %440, align 4
  %442 = mul i32 1, %441
  %443 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %444 = getelementptr [4 x %complex_4], [4 x %complex_4]* %443, i32 0, i32 0
  %445 = getelementptr inbounds %complex_4, %complex_4* %444, i32 %439
  %446 = load %complex_4, %complex_4* %445, align 4
  %447 = alloca %complex_4, align 8
  %448 = getelementptr %complex_4, %complex_4* %447, i32 0, i32 0
  %449 = getelementptr %complex_4, %complex_4* %447, i32 0, i32 1
  store float 3.000000e+00, float* %448, align 4
  store float 0.000000e+00, float* %449, align 4
  %450 = load %complex_4, %complex_4* %447, align 4
  %451 = alloca %complex_4, align 8
  store %complex_4 %446, %complex_4* %451, align 4
  %452 = getelementptr %complex_4, %complex_4* %451, i32 0, i32 0
  %453 = load float, float* %452, align 4
  %454 = alloca %complex_4, align 8
  store %complex_4 %450, %complex_4* %454, align 4
  %455 = getelementptr %complex_4, %complex_4* %454, i32 0, i32 0
  %456 = load float, float* %455, align 4
  %457 = alloca %complex_4, align 8
  store %complex_4 %446, %complex_4* %457, align 4
  %458 = getelementptr %complex_4, %complex_4* %457, i32 0, i32 1
  %459 = load float, float* %458, align 4
  %460 = alloca %complex_4, align 8
  store %complex_4 %450, %complex_4* %460, align 4
  %461 = getelementptr %complex_4, %complex_4* %460, i32 0, i32 1
  %462 = load float, float* %461, align 4
  %463 = fcmp une float %453, %456
  %464 = fcmp une float %459, %462
  %465 = and i1 %463, %464
  br i1 %465, label %then39, label %else40

then39:                                           ; preds = %ifcont37
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont41

else40:                                           ; preds = %ifcont37
  br label %ifcont41

ifcont41:                                         ; preds = %else40, %then39
  %iftmp42 = phi i32 [ 1, %then39 ], [ 2, %else40 ]
  %466 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %467 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %466, i32 0, i32 0
  %468 = getelementptr %dimension_descriptor, %dimension_descriptor* %467, i32 0, i32 1
  %469 = load i32, i32* %468, align 4
  %470 = sub i32 4, %469
  %471 = mul i32 1, %470
  %472 = add i32 0, %471
  %473 = getelementptr %dimension_descriptor, %dimension_descriptor* %467, i32 0, i32 3
  %474 = load i32, i32* %473, align 4
  %475 = mul i32 1, %474
  %476 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %477 = getelementptr [4 x %complex_4], [4 x %complex_4]* %476, i32 0, i32 0
  %478 = getelementptr inbounds %complex_4, %complex_4* %477, i32 %472
  %479 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %480 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %479, i32 0, i32 0
  %481 = getelementptr %dimension_descriptor, %dimension_descriptor* %480, i32 0, i32 1
  %482 = load i32, i32* %481, align 4
  %483 = sub i32 1, %482
  %484 = mul i32 1, %483
  %485 = add i32 0, %484
  %486 = getelementptr %dimension_descriptor, %dimension_descriptor* %480, i32 0, i32 3
  %487 = load i32, i32* %486, align 4
  %488 = mul i32 1, %487
  %489 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %490 = getelementptr [4 x %complex_4], [4 x %complex_4]* %489, i32 0, i32 0
  %491 = getelementptr inbounds %complex_4, %complex_4* %490, i32 %485
  %492 = load %complex_4, %complex_4* %491, align 4
  %493 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %494 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %493, i32 0, i32 0
  %495 = getelementptr %dimension_descriptor, %dimension_descriptor* %494, i32 0, i32 1
  %496 = load i32, i32* %495, align 4
  %497 = sub i32 2, %496
  %498 = mul i32 1, %497
  %499 = add i32 0, %498
  %500 = getelementptr %dimension_descriptor, %dimension_descriptor* %494, i32 0, i32 3
  %501 = load i32, i32* %500, align 4
  %502 = mul i32 1, %501
  %503 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %504 = getelementptr [4 x %complex_4], [4 x %complex_4]* %503, i32 0, i32 0
  %505 = getelementptr inbounds %complex_4, %complex_4* %504, i32 %499
  %506 = load %complex_4, %complex_4* %505, align 4
  %507 = alloca %complex_4, align 8
  store %complex_4 %492, %complex_4* %507, align 4
  %508 = alloca %complex_4, align 8
  store %complex_4 %506, %complex_4* %508, align 4
  %509 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add(%complex_4* %507, %complex_4* %508, %complex_4* %509)
  %510 = load %complex_4, %complex_4* %509, align 4
  %511 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %512 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %511, i32 0, i32 0
  %513 = getelementptr %dimension_descriptor, %dimension_descriptor* %512, i32 0, i32 1
  %514 = load i32, i32* %513, align 4
  %515 = sub i32 3, %514
  %516 = mul i32 1, %515
  %517 = add i32 0, %516
  %518 = getelementptr %dimension_descriptor, %dimension_descriptor* %512, i32 0, i32 3
  %519 = load i32, i32* %518, align 4
  %520 = mul i32 1, %519
  %521 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %522 = getelementptr [4 x %complex_4], [4 x %complex_4]* %521, i32 0, i32 0
  %523 = getelementptr inbounds %complex_4, %complex_4* %522, i32 %517
  %524 = load %complex_4, %complex_4* %523, align 4
  %525 = alloca %complex_4, align 8
  store %complex_4 %510, %complex_4* %525, align 4
  %526 = alloca %complex_4, align 8
  store %complex_4 %524, %complex_4* %526, align 4
  %527 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add(%complex_4* %525, %complex_4* %526, %complex_4* %527)
  %528 = load %complex_4, %complex_4* %527, align 4
  %529 = getelementptr %array, %array* %a, i32 0, i32 2
  %530 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %529, i32 0, i32 0
  %531 = getelementptr %dimension_descriptor, %dimension_descriptor* %530, i32 0, i32 1
  %532 = load i32, i32* %531, align 4
  %533 = sub i32 1, %532
  %534 = mul i32 1, %533
  %535 = add i32 0, %534
  %536 = getelementptr %dimension_descriptor, %dimension_descriptor* %530, i32 0, i32 3
  %537 = load i32, i32* %536, align 4
  %538 = mul i32 1, %537
  %539 = getelementptr %array, %array* %a, i32 0, i32 0
  %540 = getelementptr [3 x %complex_4], [3 x %complex_4]* %539, i32 0, i32 0
  %541 = getelementptr inbounds %complex_4, %complex_4* %540, i32 %535
  %542 = load %complex_4, %complex_4* %541, align 4
  %543 = alloca %complex_4, align 8
  store %complex_4 %528, %complex_4* %543, align 4
  %544 = alloca %complex_4, align 8
  store %complex_4 %542, %complex_4* %544, align 4
  %545 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add(%complex_4* %543, %complex_4* %544, %complex_4* %545)
  %546 = load %complex_4, %complex_4* %545, align 4
  store %complex_4 %546, %complex_4* %478, align 4
  %547 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %548 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %547, i32 0, i32 0
  %549 = getelementptr %dimension_descriptor, %dimension_descriptor* %548, i32 0, i32 1
  %550 = load i32, i32* %549, align 4
  %551 = sub i32 4, %550
  %552 = mul i32 1, %551
  %553 = add i32 0, %552
  %554 = getelementptr %dimension_descriptor, %dimension_descriptor* %548, i32 0, i32 3
  %555 = load i32, i32* %554, align 4
  %556 = mul i32 1, %555
  %557 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %558 = getelementptr [4 x %complex_4], [4 x %complex_4]* %557, i32 0, i32 0
  %559 = getelementptr inbounds %complex_4, %complex_4* %558, i32 %553
  %560 = load %complex_4, %complex_4* %559, align 4
  %561 = alloca %complex_4, align 8
  %562 = getelementptr %complex_4, %complex_4* %561, i32 0, i32 0
  %563 = getelementptr %complex_4, %complex_4* %561, i32 0, i32 1
  store float 1.700000e+01, float* %562, align 4
  store float 0.000000e+00, float* %563, align 4
  %564 = load %complex_4, %complex_4* %561, align 4
  %565 = alloca %complex_4, align 8
  store %complex_4 %560, %complex_4* %565, align 4
  %566 = getelementptr %complex_4, %complex_4* %565, i32 0, i32 0
  %567 = load float, float* %566, align 4
  %568 = alloca %complex_4, align 8
  store %complex_4 %564, %complex_4* %568, align 4
  %569 = getelementptr %complex_4, %complex_4* %568, i32 0, i32 0
  %570 = load float, float* %569, align 4
  %571 = alloca %complex_4, align 8
  store %complex_4 %560, %complex_4* %571, align 4
  %572 = getelementptr %complex_4, %complex_4* %571, i32 0, i32 1
  %573 = load float, float* %572, align 4
  %574 = alloca %complex_4, align 8
  store %complex_4 %564, %complex_4* %574, align 4
  %575 = getelementptr %complex_4, %complex_4* %574, i32 0, i32 1
  %576 = load float, float* %575, align 4
  %577 = fcmp une float %567, %570
  %578 = fcmp une float %573, %576
  %579 = and i1 %577, %578
  br i1 %579, label %then43, label %else44

then43:                                           ; preds = %ifcont41
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont45

else44:                                           ; preds = %ifcont41
  br label %ifcont45

ifcont45:                                         ; preds = %else44, %then43
  %iftmp46 = phi i32 [ 1, %then43 ], [ 2, %else44 ]
  %580 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %581 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %580, i32 0, i32 0
  %582 = getelementptr %dimension_descriptor, %dimension_descriptor* %581, i32 0, i32 1
  %583 = load i32, i32* %582, align 4
  %584 = sub i32 4, %583
  %585 = mul i32 1, %584
  %586 = add i32 0, %585
  %587 = getelementptr %dimension_descriptor, %dimension_descriptor* %581, i32 0, i32 3
  %588 = load i32, i32* %587, align 4
  %589 = mul i32 1, %588
  %590 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %591 = getelementptr [4 x %complex_4], [4 x %complex_4]* %590, i32 0, i32 0
  %592 = getelementptr inbounds %complex_4, %complex_4* %591, i32 %586
  %593 = getelementptr %array, %array* %a, i32 0, i32 2
  %594 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %593, i32 0, i32 0
  %595 = getelementptr %dimension_descriptor, %dimension_descriptor* %594, i32 0, i32 1
  %596 = load i32, i32* %595, align 4
  %597 = sub i32 1, %596
  %598 = mul i32 1, %597
  %599 = add i32 0, %598
  %600 = getelementptr %dimension_descriptor, %dimension_descriptor* %594, i32 0, i32 3
  %601 = load i32, i32* %600, align 4
  %602 = mul i32 1, %601
  %603 = getelementptr %array, %array* %a, i32 0, i32 0
  %604 = getelementptr [3 x %complex_4], [3 x %complex_4]* %603, i32 0, i32 0
  %605 = getelementptr inbounds %complex_4, %complex_4* %604, i32 %599
  %606 = load %complex_4, %complex_4* %605, align 4
  store %complex_4 %606, %complex_4* %592, align 4
  %607 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %608 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %607, i32 0, i32 0
  %609 = getelementptr %dimension_descriptor, %dimension_descriptor* %608, i32 0, i32 1
  %610 = load i32, i32* %609, align 4
  %611 = sub i32 4, %610
  %612 = mul i32 1, %611
  %613 = add i32 0, %612
  %614 = getelementptr %dimension_descriptor, %dimension_descriptor* %608, i32 0, i32 3
  %615 = load i32, i32* %614, align 4
  %616 = mul i32 1, %615
  %617 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %618 = getelementptr [4 x %complex_4], [4 x %complex_4]* %617, i32 0, i32 0
  %619 = getelementptr inbounds %complex_4, %complex_4* %618, i32 %613
  %620 = load %complex_4, %complex_4* %619, align 4
  %621 = alloca %complex_4, align 8
  %622 = getelementptr %complex_4, %complex_4* %621, i32 0, i32 0
  %623 = getelementptr %complex_4, %complex_4* %621, i32 0, i32 1
  store float 1.100000e+01, float* %622, align 4
  store float 0.000000e+00, float* %623, align 4
  %624 = load %complex_4, %complex_4* %621, align 4
  %625 = alloca %complex_4, align 8
  store %complex_4 %620, %complex_4* %625, align 4
  %626 = getelementptr %complex_4, %complex_4* %625, i32 0, i32 0
  %627 = load float, float* %626, align 4
  %628 = alloca %complex_4, align 8
  store %complex_4 %624, %complex_4* %628, align 4
  %629 = getelementptr %complex_4, %complex_4* %628, i32 0, i32 0
  %630 = load float, float* %629, align 4
  %631 = alloca %complex_4, align 8
  store %complex_4 %620, %complex_4* %631, align 4
  %632 = getelementptr %complex_4, %complex_4* %631, i32 0, i32 1
  %633 = load float, float* %632, align 4
  %634 = alloca %complex_4, align 8
  store %complex_4 %624, %complex_4* %634, align 4
  %635 = getelementptr %complex_4, %complex_4* %634, i32 0, i32 1
  %636 = load float, float* %635, align 4
  %637 = fcmp une float %627, %630
  %638 = fcmp une float %633, %636
  %639 = and i1 %637, %638
  br i1 %639, label %then47, label %else48

then47:                                           ; preds = %ifcont45
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont49

else48:                                           ; preds = %ifcont45
  br label %ifcont49

ifcont49:                                         ; preds = %else48, %then47
  %iftmp50 = phi i32 [ 1, %then47 ], [ 2, %else48 ]
  store i32 0, i32* %i, align 4
  br label %loop.head51

loop.head51:                                      ; preds = %loop.end55, %ifcont49
  %640 = load i32, i32* %i, align 4
  %641 = add i32 %640, 1
  %642 = icmp sle i32 %641, 2
  br i1 %642, label %loop.body52, label %loop.end56

loop.body52:                                      ; preds = %loop.head51
  %643 = load i32, i32* %i, align 4
  %644 = add i32 %643, 1
  store i32 %644, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head53

loop.head53:                                      ; preds = %loop.body54, %loop.body52
  %645 = load i32, i32* %j, align 4
  %646 = add i32 %645, 1
  %647 = icmp sle i32 %646, 2
  br i1 %647, label %loop.body54, label %loop.end55

loop.body54:                                      ; preds = %loop.head53
  %648 = load i32, i32* %j, align 4
  %649 = add i32 %648, 1
  store i32 %649, i32* %j, align 4
  %650 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %651 = load i32, i32* %i, align 4
  %652 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %650, i32 0, i32 0
  %653 = getelementptr %dimension_descriptor, %dimension_descriptor* %652, i32 0, i32 1
  %654 = load i32, i32* %653, align 4
  %655 = sub i32 %651, %654
  %656 = mul i32 1, %655
  %657 = add i32 0, %656
  %658 = getelementptr %dimension_descriptor, %dimension_descriptor* %652, i32 0, i32 3
  %659 = load i32, i32* %658, align 4
  %660 = mul i32 1, %659
  %661 = load i32, i32* %j, align 4
  %662 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %650, i32 0, i32 1
  %663 = getelementptr %dimension_descriptor, %dimension_descriptor* %662, i32 0, i32 1
  %664 = load i32, i32* %663, align 4
  %665 = sub i32 %661, %664
  %666 = mul i32 %660, %665
  %667 = add i32 %657, %666
  %668 = getelementptr %dimension_descriptor, %dimension_descriptor* %662, i32 0, i32 3
  %669 = load i32, i32* %668, align 4
  %670 = mul i32 %660, %669
  %671 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %672 = getelementptr [4 x %complex_4], [4 x %complex_4]* %671, i32 0, i32 0
  %673 = getelementptr inbounds %complex_4, %complex_4* %672, i32 %667
  %674 = load i32, i32* %i, align 4
  %675 = load i32, i32* %j, align 4
  %676 = add i32 %674, %675
  %677 = add i32 %676, 10
  %678 = sitofp i32 %677 to float
  %679 = alloca %complex_4, align 8
  %680 = getelementptr %complex_4, %complex_4* %679, i32 0, i32 0
  %681 = getelementptr %complex_4, %complex_4* %679, i32 0, i32 1
  store float %678, float* %680, align 4
  store float 0.000000e+00, float* %681, align 4
  %682 = load %complex_4, %complex_4* %679, align 4
  store %complex_4 %682, %complex_4* %673, align 4
  br label %loop.head53

loop.end55:                                       ; preds = %loop.head53
  br label %loop.head51

loop.end56:                                       ; preds = %loop.head51
  %683 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %684 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %683, i32 0, i32 0
  %685 = getelementptr %dimension_descriptor, %dimension_descriptor* %684, i32 0, i32 1
  %686 = load i32, i32* %685, align 4
  %687 = sub i32 1, %686
  %688 = mul i32 1, %687
  %689 = add i32 0, %688
  %690 = getelementptr %dimension_descriptor, %dimension_descriptor* %684, i32 0, i32 3
  %691 = load i32, i32* %690, align 4
  %692 = mul i32 1, %691
  %693 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %683, i32 0, i32 1
  %694 = getelementptr %dimension_descriptor, %dimension_descriptor* %693, i32 0, i32 1
  %695 = load i32, i32* %694, align 4
  %696 = sub i32 1, %695
  %697 = mul i32 %692, %696
  %698 = add i32 %689, %697
  %699 = getelementptr %dimension_descriptor, %dimension_descriptor* %693, i32 0, i32 3
  %700 = load i32, i32* %699, align 4
  %701 = mul i32 %692, %700
  %702 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %703 = getelementptr [4 x %complex_4], [4 x %complex_4]* %702, i32 0, i32 0
  %704 = getelementptr inbounds %complex_4, %complex_4* %703, i32 %698
  %705 = load %complex_4, %complex_4* %704, align 4
  %706 = alloca %complex_4, align 8
  %707 = getelementptr %complex_4, %complex_4* %706, i32 0, i32 0
  %708 = getelementptr %complex_4, %complex_4* %706, i32 0, i32 1
  store float 1.200000e+01, float* %707, align 4
  store float 0.000000e+00, float* %708, align 4
  %709 = load %complex_4, %complex_4* %706, align 4
  %710 = alloca %complex_4, align 8
  store %complex_4 %705, %complex_4* %710, align 4
  %711 = getelementptr %complex_4, %complex_4* %710, i32 0, i32 0
  %712 = load float, float* %711, align 4
  %713 = alloca %complex_4, align 8
  store %complex_4 %709, %complex_4* %713, align 4
  %714 = getelementptr %complex_4, %complex_4* %713, i32 0, i32 0
  %715 = load float, float* %714, align 4
  %716 = alloca %complex_4, align 8
  store %complex_4 %705, %complex_4* %716, align 4
  %717 = getelementptr %complex_4, %complex_4* %716, i32 0, i32 1
  %718 = load float, float* %717, align 4
  %719 = alloca %complex_4, align 8
  store %complex_4 %709, %complex_4* %719, align 4
  %720 = getelementptr %complex_4, %complex_4* %719, i32 0, i32 1
  %721 = load float, float* %720, align 4
  %722 = fcmp une float %712, %715
  %723 = fcmp une float %718, %721
  %724 = and i1 %722, %723
  br i1 %724, label %then57, label %else58

then57:                                           ; preds = %loop.end56
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @12, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont59

else58:                                           ; preds = %loop.end56
  br label %ifcont59

ifcont59:                                         ; preds = %else58, %then57
  %iftmp60 = phi i32 [ 1, %then57 ], [ 2, %else58 ]
  %725 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %726 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %725, i32 0, i32 0
  %727 = getelementptr %dimension_descriptor, %dimension_descriptor* %726, i32 0, i32 1
  %728 = load i32, i32* %727, align 4
  %729 = sub i32 1, %728
  %730 = mul i32 1, %729
  %731 = add i32 0, %730
  %732 = getelementptr %dimension_descriptor, %dimension_descriptor* %726, i32 0, i32 3
  %733 = load i32, i32* %732, align 4
  %734 = mul i32 1, %733
  %735 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %725, i32 0, i32 1
  %736 = getelementptr %dimension_descriptor, %dimension_descriptor* %735, i32 0, i32 1
  %737 = load i32, i32* %736, align 4
  %738 = sub i32 2, %737
  %739 = mul i32 %734, %738
  %740 = add i32 %731, %739
  %741 = getelementptr %dimension_descriptor, %dimension_descriptor* %735, i32 0, i32 3
  %742 = load i32, i32* %741, align 4
  %743 = mul i32 %734, %742
  %744 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %745 = getelementptr [4 x %complex_4], [4 x %complex_4]* %744, i32 0, i32 0
  %746 = getelementptr inbounds %complex_4, %complex_4* %745, i32 %740
  %747 = load %complex_4, %complex_4* %746, align 4
  %748 = alloca %complex_4, align 8
  %749 = getelementptr %complex_4, %complex_4* %748, i32 0, i32 0
  %750 = getelementptr %complex_4, %complex_4* %748, i32 0, i32 1
  store float 1.300000e+01, float* %749, align 4
  store float 0.000000e+00, float* %750, align 4
  %751 = load %complex_4, %complex_4* %748, align 4
  %752 = alloca %complex_4, align 8
  store %complex_4 %747, %complex_4* %752, align 4
  %753 = getelementptr %complex_4, %complex_4* %752, i32 0, i32 0
  %754 = load float, float* %753, align 4
  %755 = alloca %complex_4, align 8
  store %complex_4 %751, %complex_4* %755, align 4
  %756 = getelementptr %complex_4, %complex_4* %755, i32 0, i32 0
  %757 = load float, float* %756, align 4
  %758 = alloca %complex_4, align 8
  store %complex_4 %747, %complex_4* %758, align 4
  %759 = getelementptr %complex_4, %complex_4* %758, i32 0, i32 1
  %760 = load float, float* %759, align 4
  %761 = alloca %complex_4, align 8
  store %complex_4 %751, %complex_4* %761, align 4
  %762 = getelementptr %complex_4, %complex_4* %761, i32 0, i32 1
  %763 = load float, float* %762, align 4
  %764 = fcmp une float %754, %757
  %765 = fcmp une float %760, %763
  %766 = and i1 %764, %765
  br i1 %766, label %then61, label %else62

then61:                                           ; preds = %ifcont59
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @13, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont63

else62:                                           ; preds = %ifcont59
  br label %ifcont63

ifcont63:                                         ; preds = %else62, %then61
  %iftmp64 = phi i32 [ 1, %then61 ], [ 2, %else62 ]
  %767 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %768 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %767, i32 0, i32 0
  %769 = getelementptr %dimension_descriptor, %dimension_descriptor* %768, i32 0, i32 1
  %770 = load i32, i32* %769, align 4
  %771 = sub i32 2, %770
  %772 = mul i32 1, %771
  %773 = add i32 0, %772
  %774 = getelementptr %dimension_descriptor, %dimension_descriptor* %768, i32 0, i32 3
  %775 = load i32, i32* %774, align 4
  %776 = mul i32 1, %775
  %777 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %767, i32 0, i32 1
  %778 = getelementptr %dimension_descriptor, %dimension_descriptor* %777, i32 0, i32 1
  %779 = load i32, i32* %778, align 4
  %780 = sub i32 1, %779
  %781 = mul i32 %776, %780
  %782 = add i32 %773, %781
  %783 = getelementptr %dimension_descriptor, %dimension_descriptor* %777, i32 0, i32 3
  %784 = load i32, i32* %783, align 4
  %785 = mul i32 %776, %784
  %786 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %787 = getelementptr [4 x %complex_4], [4 x %complex_4]* %786, i32 0, i32 0
  %788 = getelementptr inbounds %complex_4, %complex_4* %787, i32 %782
  %789 = load %complex_4, %complex_4* %788, align 4
  %790 = alloca %complex_4, align 8
  %791 = getelementptr %complex_4, %complex_4* %790, i32 0, i32 0
  %792 = getelementptr %complex_4, %complex_4* %790, i32 0, i32 1
  store float 1.300000e+01, float* %791, align 4
  store float 0.000000e+00, float* %792, align 4
  %793 = load %complex_4, %complex_4* %790, align 4
  %794 = alloca %complex_4, align 8
  store %complex_4 %789, %complex_4* %794, align 4
  %795 = getelementptr %complex_4, %complex_4* %794, i32 0, i32 0
  %796 = load float, float* %795, align 4
  %797 = alloca %complex_4, align 8
  store %complex_4 %793, %complex_4* %797, align 4
  %798 = getelementptr %complex_4, %complex_4* %797, i32 0, i32 0
  %799 = load float, float* %798, align 4
  %800 = alloca %complex_4, align 8
  store %complex_4 %789, %complex_4* %800, align 4
  %801 = getelementptr %complex_4, %complex_4* %800, i32 0, i32 1
  %802 = load float, float* %801, align 4
  %803 = alloca %complex_4, align 8
  store %complex_4 %793, %complex_4* %803, align 4
  %804 = getelementptr %complex_4, %complex_4* %803, i32 0, i32 1
  %805 = load float, float* %804, align 4
  %806 = fcmp une float %796, %799
  %807 = fcmp une float %802, %805
  %808 = and i1 %806, %807
  br i1 %808, label %then65, label %else66

then65:                                           ; preds = %ifcont63
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @14, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont67

else66:                                           ; preds = %ifcont63
  br label %ifcont67

ifcont67:                                         ; preds = %else66, %then65
  %iftmp68 = phi i32 [ 1, %then65 ], [ 2, %else66 ]
  %809 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %810 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %809, i32 0, i32 0
  %811 = getelementptr %dimension_descriptor, %dimension_descriptor* %810, i32 0, i32 1
  %812 = load i32, i32* %811, align 4
  %813 = sub i32 2, %812
  %814 = mul i32 1, %813
  %815 = add i32 0, %814
  %816 = getelementptr %dimension_descriptor, %dimension_descriptor* %810, i32 0, i32 3
  %817 = load i32, i32* %816, align 4
  %818 = mul i32 1, %817
  %819 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %809, i32 0, i32 1
  %820 = getelementptr %dimension_descriptor, %dimension_descriptor* %819, i32 0, i32 1
  %821 = load i32, i32* %820, align 4
  %822 = sub i32 2, %821
  %823 = mul i32 %818, %822
  %824 = add i32 %815, %823
  %825 = getelementptr %dimension_descriptor, %dimension_descriptor* %819, i32 0, i32 3
  %826 = load i32, i32* %825, align 4
  %827 = mul i32 %818, %826
  %828 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %829 = getelementptr [4 x %complex_4], [4 x %complex_4]* %828, i32 0, i32 0
  %830 = getelementptr inbounds %complex_4, %complex_4* %829, i32 %824
  %831 = load %complex_4, %complex_4* %830, align 4
  %832 = alloca %complex_4, align 8
  %833 = getelementptr %complex_4, %complex_4* %832, i32 0, i32 0
  %834 = getelementptr %complex_4, %complex_4* %832, i32 0, i32 1
  store float 1.400000e+01, float* %833, align 4
  store float 0.000000e+00, float* %834, align 4
  %835 = load %complex_4, %complex_4* %832, align 4
  %836 = alloca %complex_4, align 8
  store %complex_4 %831, %complex_4* %836, align 4
  %837 = getelementptr %complex_4, %complex_4* %836, i32 0, i32 0
  %838 = load float, float* %837, align 4
  %839 = alloca %complex_4, align 8
  store %complex_4 %835, %complex_4* %839, align 4
  %840 = getelementptr %complex_4, %complex_4* %839, i32 0, i32 0
  %841 = load float, float* %840, align 4
  %842 = alloca %complex_4, align 8
  store %complex_4 %831, %complex_4* %842, align 4
  %843 = getelementptr %complex_4, %complex_4* %842, i32 0, i32 1
  %844 = load float, float* %843, align 4
  %845 = alloca %complex_4, align 8
  store %complex_4 %835, %complex_4* %845, align 4
  %846 = getelementptr %complex_4, %complex_4* %845, i32 0, i32 1
  %847 = load float, float* %846, align 4
  %848 = fcmp une float %838, %841
  %849 = fcmp une float %844, %847
  %850 = and i1 %848, %849
  br i1 %850, label %then69, label %else70

then69:                                           ; preds = %ifcont67
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @15, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont71

else70:                                           ; preds = %ifcont67
  br label %ifcont71

ifcont71:                                         ; preds = %else70, %then69
  %iftmp72 = phi i32 [ 1, %then69 ], [ 2, %else70 ]
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)

declare void @_lfortran_complex_sub(%complex_4*, %complex_4*, %complex_4*, ...)

declare void @_lfortran_complex_add(%complex_4*, %complex_4*, %complex_4*, ...)

