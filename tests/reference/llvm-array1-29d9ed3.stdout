; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { [3 x i32], i32, [1 x %dimension_descriptor] }
%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { [18 x i32], i32, [2 x %dimension_descriptor] }
%array.1 = type { [24 x i32], i32, [3 x %dimension_descriptor] }

define i32 @main() {
.entry:
  %a = alloca i1, align 1
  %b = alloca i1, align 1
  %b2 = alloca i1, align 1
  %b3 = alloca i1, align 1
  %d = alloca float, align 4
  %e = alloca float, align 4
  %e2 = alloca float, align 4
  %e3 = alloca float, align 4
  %f = alloca i32, align 4
  %g = alloca %array, align 8
  %0 = getelementptr %array, %array* %g, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %g, i32 0, i32 2
  %2 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %1, i32 0, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 2
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 3
  store i32 1, i32* %3, align 4
  store i32 1, i32* %4, align 4
  store i32 3, i32* %5, align 4
  %7 = load i32, i32* %5, align 4
  %8 = load i32, i32* %4, align 4
  %9 = sub i32 %7, %8
  %10 = add i32 %9, 1
  store i32 %10, i32* %6, align 4
  %g2 = alloca %array.0, align 8
  %11 = getelementptr %array.0, %array.0* %g2, i32 0, i32 1
  store i32 0, i32* %11, align 4
  %12 = getelementptr %array.0, %array.0* %g2, i32 0, i32 2
  %13 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %12, i32 0, i32 0
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 0
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 1
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 2
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 3
  store i32 1, i32* %14, align 4
  store i32 1, i32* %15, align 4
  store i32 6, i32* %16, align 4
  %18 = load i32, i32* %16, align 4
  %19 = load i32, i32* %15, align 4
  %20 = sub i32 %18, %19
  %21 = add i32 %20, 1
  store i32 %21, i32* %17, align 4
  %22 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %12, i32 0, i32 1
  %23 = getelementptr %dimension_descriptor, %dimension_descriptor* %22, i32 0, i32 0
  %24 = getelementptr %dimension_descriptor, %dimension_descriptor* %22, i32 0, i32 1
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %22, i32 0, i32 2
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %22, i32 0, i32 3
  store i32 1, i32* %23, align 4
  store i32 1, i32* %24, align 4
  store i32 3, i32* %25, align 4
  %27 = load i32, i32* %25, align 4
  %28 = load i32, i32* %24, align 4
  %29 = sub i32 %27, %28
  %30 = add i32 %29, 1
  store i32 %30, i32* %26, align 4
  %g3 = alloca %array.1, align 8
  %31 = getelementptr %array.1, %array.1* %g3, i32 0, i32 1
  store i32 0, i32* %31, align 4
  %32 = getelementptr %array.1, %array.1* %g3, i32 0, i32 2
  %33 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %32, i32 0, i32 0
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 0
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 1
  %36 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 2
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 3
  store i32 1, i32* %34, align 4
  store i32 1, i32* %35, align 4
  store i32 4, i32* %36, align 4
  %38 = load i32, i32* %36, align 4
  %39 = load i32, i32* %35, align 4
  %40 = sub i32 %38, %39
  %41 = add i32 %40, 1
  store i32 %41, i32* %37, align 4
  %42 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %32, i32 0, i32 1
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %42, i32 0, i32 0
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %42, i32 0, i32 1
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %42, i32 0, i32 2
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %42, i32 0, i32 3
  store i32 1, i32* %43, align 4
  store i32 1, i32* %44, align 4
  store i32 3, i32* %45, align 4
  %47 = load i32, i32* %45, align 4
  %48 = load i32, i32* %44, align 4
  %49 = sub i32 %47, %48
  %50 = add i32 %49, 1
  store i32 %50, i32* %46, align 4
  %51 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %32, i32 0, i32 2
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %51, i32 0, i32 0
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %51, i32 0, i32 1
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %51, i32 0, i32 2
  %55 = getelementptr %dimension_descriptor, %dimension_descriptor* %51, i32 0, i32 3
  store i32 1, i32* %52, align 4
  store i32 1, i32* %53, align 4
  store i32 2, i32* %54, align 4
  %56 = load i32, i32* %54, align 4
  %57 = load i32, i32* %53, align 4
  %58 = sub i32 %56, %57
  %59 = add i32 %58, 1
  store i32 %59, i32* %55, align 4
  ret i32 0
}

