#include <iostream>
#include <vector>
#include <Kokkos_Core.hpp>

template <typename T>
Kokkos::View<T*> from_std_vector(const std::vector<T> &v)
{
    Kokkos::View<T*> r("r", v.size());
    for (size_t i=0; i < v.size(); i++) {
        r(i) = v[i];
    }
    return r;
}

int size(const Kokkos::View<const int*> &a_size)
{
    int r_size;
    return r_size;
}

void sum_reduce(const Kokkos::View<const float*> &a, float &s)
{
    int N;
    N = size(a);
    s = 0;
    Kokkos::parallel_for(Kokkos::RangePolicy<Kokkos::DefaultExecutionSpace>(1, N+1), KOKKOS_LAMBDA(const long i) {
        s = s + a[i-1];
    });
}

