; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { [100 x i32], i32, [2 x %dimension_descriptor] }
%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { [6 x i32], i32, [1 x %dimension_descriptor] }

@0 = private unnamed_addr constant [19 x i8] c"%d %d %d %d %d %d\0A\00", align 1
@1 = private unnamed_addr constant [19 x i8] c"%d %d %d %d %d %d\0A\00", align 1
@2 = private unnamed_addr constant [19 x i8] c"%d %d %d %d %d %d\0A\00", align 1
@3 = private unnamed_addr constant [19 x i8] c"%d %d %d %d %d %d\0A\00", align 1

define i32 @main() {
.entry:
  %A = alloca %array, align 8
  %0 = getelementptr %array, %array* %A, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %A, i32 0, i32 2
  %2 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %1, i32 0, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 2
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 3
  store i32 1, i32* %3, align 4
  store i32 1, i32* %4, align 4
  store i32 10, i32* %5, align 4
  %7 = load i32, i32* %5, align 4
  %8 = load i32, i32* %4, align 4
  %9 = sub i32 %7, %8
  %10 = add i32 %9, 1
  store i32 %10, i32* %6, align 4
  %11 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %1, i32 0, i32 1
  %12 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 0
  %13 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 1
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 2
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 3
  store i32 1, i32* %12, align 4
  store i32 1, i32* %13, align 4
  store i32 10, i32* %14, align 4
  %16 = load i32, i32* %14, align 4
  %17 = load i32, i32* %13, align 4
  %18 = sub i32 %16, %17
  %19 = add i32 %18, 1
  store i32 %19, i32* %15, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %x = alloca %array.0, align 8
  %20 = getelementptr %array.0, %array.0* %x, i32 0, i32 1
  store i32 0, i32* %20, align 4
  %21 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %22 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %21, i32 0, i32 0
  %23 = getelementptr %dimension_descriptor, %dimension_descriptor* %22, i32 0, i32 0
  %24 = getelementptr %dimension_descriptor, %dimension_descriptor* %22, i32 0, i32 1
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %22, i32 0, i32 2
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %22, i32 0, i32 3
  store i32 1, i32* %23, align 4
  store i32 1, i32* %24, align 4
  store i32 6, i32* %25, align 4
  %27 = load i32, i32* %25, align 4
  %28 = load i32, i32* %24, align 4
  %29 = sub i32 %27, %28
  %30 = add i32 %29, 1
  store i32 %30, i32* %26, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %31 = load i32, i32* %i, align 4
  %32 = add i32 %31, 1
  %33 = icmp sle i32 %32, 6
  br i1 %33, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %34 = load i32, i32* %i, align 4
  %35 = add i32 %34, 1
  store i32 %35, i32* %i, align 4
  %36 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %37 = load i32, i32* %i, align 4
  %38 = sub i32 %37, 1
  %39 = mul i32 %38, 1
  %40 = add i32 %39, 1
  %41 = add i32 %40, 0
  %42 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %36, i32 0, i32 0
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %42, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = sub i32 %41, %44
  %46 = mul i32 1, %45
  %47 = add i32 0, %46
  %48 = getelementptr %dimension_descriptor, %dimension_descriptor* %42, i32 0, i32 3
  %49 = load i32, i32* %48, align 4
  %50 = mul i32 1, %49
  %51 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %52 = getelementptr [6 x i32], [6 x i32]* %51, i32 0, i32 0
  %53 = getelementptr inbounds i32, i32* %52, i32 %47
  %54 = load i32, i32* %i, align 4
  %55 = mul i32 %54, 2
  store i32 %55, i32* %53, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %56 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %57 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %56, i32 0, i32 0
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %57, i32 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = sub i32 1, %59
  %61 = mul i32 1, %60
  %62 = add i32 0, %61
  %63 = getelementptr %dimension_descriptor, %dimension_descriptor* %57, i32 0, i32 3
  %64 = load i32, i32* %63, align 4
  %65 = mul i32 1, %64
  %66 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %67 = getelementptr [6 x i32], [6 x i32]* %66, i32 0, i32 0
  %68 = getelementptr inbounds i32, i32* %67, i32 %62
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %71 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %70, i32 0, i32 0
  %72 = getelementptr %dimension_descriptor, %dimension_descriptor* %71, i32 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = sub i32 2, %73
  %75 = mul i32 1, %74
  %76 = add i32 0, %75
  %77 = getelementptr %dimension_descriptor, %dimension_descriptor* %71, i32 0, i32 3
  %78 = load i32, i32* %77, align 4
  %79 = mul i32 1, %78
  %80 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %81 = getelementptr [6 x i32], [6 x i32]* %80, i32 0, i32 0
  %82 = getelementptr inbounds i32, i32* %81, i32 %76
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %85 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %84, i32 0, i32 0
  %86 = getelementptr %dimension_descriptor, %dimension_descriptor* %85, i32 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = sub i32 3, %87
  %89 = mul i32 1, %88
  %90 = add i32 0, %89
  %91 = getelementptr %dimension_descriptor, %dimension_descriptor* %85, i32 0, i32 3
  %92 = load i32, i32* %91, align 4
  %93 = mul i32 1, %92
  %94 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %95 = getelementptr [6 x i32], [6 x i32]* %94, i32 0, i32 0
  %96 = getelementptr inbounds i32, i32* %95, i32 %90
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %99 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %98, i32 0, i32 0
  %100 = getelementptr %dimension_descriptor, %dimension_descriptor* %99, i32 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = sub i32 4, %101
  %103 = mul i32 1, %102
  %104 = add i32 0, %103
  %105 = getelementptr %dimension_descriptor, %dimension_descriptor* %99, i32 0, i32 3
  %106 = load i32, i32* %105, align 4
  %107 = mul i32 1, %106
  %108 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %109 = getelementptr [6 x i32], [6 x i32]* %108, i32 0, i32 0
  %110 = getelementptr inbounds i32, i32* %109, i32 %104
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %113 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %112, i32 0, i32 0
  %114 = getelementptr %dimension_descriptor, %dimension_descriptor* %113, i32 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = sub i32 5, %115
  %117 = mul i32 1, %116
  %118 = add i32 0, %117
  %119 = getelementptr %dimension_descriptor, %dimension_descriptor* %113, i32 0, i32 3
  %120 = load i32, i32* %119, align 4
  %121 = mul i32 1, %120
  %122 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %123 = getelementptr [6 x i32], [6 x i32]* %122, i32 0, i32 0
  %124 = getelementptr inbounds i32, i32* %123, i32 %118
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %127 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %126, i32 0, i32 0
  %128 = getelementptr %dimension_descriptor, %dimension_descriptor* %127, i32 0, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = sub i32 6, %129
  %131 = mul i32 1, %130
  %132 = add i32 0, %131
  %133 = getelementptr %dimension_descriptor, %dimension_descriptor* %127, i32 0, i32 3
  %134 = load i32, i32* %133, align 4
  %135 = mul i32 1, %134
  %136 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %137 = getelementptr [6 x i32], [6 x i32]* %136, i32 0, i32 0
  %138 = getelementptr inbounds i32, i32* %137, i32 %132
  %139 = load i32, i32* %138, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @0, i32 0, i32 0), i32 %69, i32 %83, i32 %97, i32 %111, i32 %125, i32 %139)
  store i32 0, i32* %i, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.body2, %loop.end
  %140 = load i32, i32* %i, align 4
  %141 = add i32 %140, 1
  %142 = icmp sle i32 %141, 3
  br i1 %142, label %loop.body2, label %loop.end3

loop.body2:                                       ; preds = %loop.head1
  %143 = load i32, i32* %i, align 4
  %144 = add i32 %143, 1
  store i32 %144, i32* %i, align 4
  %145 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %146 = load i32, i32* %i, align 4
  %147 = sub i32 %146, 1
  %148 = mul i32 %147, 2
  %149 = add i32 %148, 1
  %150 = add i32 %149, 0
  %151 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %145, i32 0, i32 0
  %152 = getelementptr %dimension_descriptor, %dimension_descriptor* %151, i32 0, i32 1
  %153 = load i32, i32* %152, align 4
  %154 = sub i32 %150, %153
  %155 = mul i32 1, %154
  %156 = add i32 0, %155
  %157 = getelementptr %dimension_descriptor, %dimension_descriptor* %151, i32 0, i32 3
  %158 = load i32, i32* %157, align 4
  %159 = mul i32 1, %158
  %160 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %161 = getelementptr [6 x i32], [6 x i32]* %160, i32 0, i32 0
  %162 = getelementptr inbounds i32, i32* %161, i32 %156
  %163 = load i32, i32* %i, align 4
  %164 = add i32 %163, 1
  store i32 %164, i32* %162, align 4
  %165 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %166 = load i32, i32* %i, align 4
  %167 = sub i32 %166, 1
  %168 = mul i32 %167, 2
  %169 = add i32 %168, 1
  %170 = add i32 %169, 1
  %171 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %165, i32 0, i32 0
  %172 = getelementptr %dimension_descriptor, %dimension_descriptor* %171, i32 0, i32 1
  %173 = load i32, i32* %172, align 4
  %174 = sub i32 %170, %173
  %175 = mul i32 1, %174
  %176 = add i32 0, %175
  %177 = getelementptr %dimension_descriptor, %dimension_descriptor* %171, i32 0, i32 3
  %178 = load i32, i32* %177, align 4
  %179 = mul i32 1, %178
  %180 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %181 = getelementptr [6 x i32], [6 x i32]* %180, i32 0, i32 0
  %182 = getelementptr inbounds i32, i32* %181, i32 %176
  %183 = load i32, i32* %i, align 4
  %184 = mul i32 %183, 2
  store i32 %184, i32* %182, align 4
  br label %loop.head1

loop.end3:                                        ; preds = %loop.head1
  %185 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %186 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %185, i32 0, i32 0
  %187 = getelementptr %dimension_descriptor, %dimension_descriptor* %186, i32 0, i32 1
  %188 = load i32, i32* %187, align 4
  %189 = sub i32 1, %188
  %190 = mul i32 1, %189
  %191 = add i32 0, %190
  %192 = getelementptr %dimension_descriptor, %dimension_descriptor* %186, i32 0, i32 3
  %193 = load i32, i32* %192, align 4
  %194 = mul i32 1, %193
  %195 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %196 = getelementptr [6 x i32], [6 x i32]* %195, i32 0, i32 0
  %197 = getelementptr inbounds i32, i32* %196, i32 %191
  %198 = load i32, i32* %197, align 4
  %199 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %200 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %199, i32 0, i32 0
  %201 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = sub i32 2, %202
  %204 = mul i32 1, %203
  %205 = add i32 0, %204
  %206 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 3
  %207 = load i32, i32* %206, align 4
  %208 = mul i32 1, %207
  %209 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %210 = getelementptr [6 x i32], [6 x i32]* %209, i32 0, i32 0
  %211 = getelementptr inbounds i32, i32* %210, i32 %205
  %212 = load i32, i32* %211, align 4
  %213 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %214 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %213, i32 0, i32 0
  %215 = getelementptr %dimension_descriptor, %dimension_descriptor* %214, i32 0, i32 1
  %216 = load i32, i32* %215, align 4
  %217 = sub i32 3, %216
  %218 = mul i32 1, %217
  %219 = add i32 0, %218
  %220 = getelementptr %dimension_descriptor, %dimension_descriptor* %214, i32 0, i32 3
  %221 = load i32, i32* %220, align 4
  %222 = mul i32 1, %221
  %223 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %224 = getelementptr [6 x i32], [6 x i32]* %223, i32 0, i32 0
  %225 = getelementptr inbounds i32, i32* %224, i32 %219
  %226 = load i32, i32* %225, align 4
  %227 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %228 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %227, i32 0, i32 0
  %229 = getelementptr %dimension_descriptor, %dimension_descriptor* %228, i32 0, i32 1
  %230 = load i32, i32* %229, align 4
  %231 = sub i32 4, %230
  %232 = mul i32 1, %231
  %233 = add i32 0, %232
  %234 = getelementptr %dimension_descriptor, %dimension_descriptor* %228, i32 0, i32 3
  %235 = load i32, i32* %234, align 4
  %236 = mul i32 1, %235
  %237 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %238 = getelementptr [6 x i32], [6 x i32]* %237, i32 0, i32 0
  %239 = getelementptr inbounds i32, i32* %238, i32 %233
  %240 = load i32, i32* %239, align 4
  %241 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %242 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %241, i32 0, i32 0
  %243 = getelementptr %dimension_descriptor, %dimension_descriptor* %242, i32 0, i32 1
  %244 = load i32, i32* %243, align 4
  %245 = sub i32 5, %244
  %246 = mul i32 1, %245
  %247 = add i32 0, %246
  %248 = getelementptr %dimension_descriptor, %dimension_descriptor* %242, i32 0, i32 3
  %249 = load i32, i32* %248, align 4
  %250 = mul i32 1, %249
  %251 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %252 = getelementptr [6 x i32], [6 x i32]* %251, i32 0, i32 0
  %253 = getelementptr inbounds i32, i32* %252, i32 %247
  %254 = load i32, i32* %253, align 4
  %255 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %256 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %255, i32 0, i32 0
  %257 = getelementptr %dimension_descriptor, %dimension_descriptor* %256, i32 0, i32 1
  %258 = load i32, i32* %257, align 4
  %259 = sub i32 6, %258
  %260 = mul i32 1, %259
  %261 = add i32 0, %260
  %262 = getelementptr %dimension_descriptor, %dimension_descriptor* %256, i32 0, i32 3
  %263 = load i32, i32* %262, align 4
  %264 = mul i32 1, %263
  %265 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %266 = getelementptr [6 x i32], [6 x i32]* %265, i32 0, i32 0
  %267 = getelementptr inbounds i32, i32* %266, i32 %261
  %268 = load i32, i32* %267, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @1, i32 0, i32 0), i32 %198, i32 %212, i32 %226, i32 %240, i32 %254, i32 %268)
  store i32 0, i32* %i, align 4
  br label %loop.head4

loop.head4:                                       ; preds = %loop.body5, %loop.end3
  %269 = load i32, i32* %i, align 4
  %270 = add i32 %269, 1
  %271 = icmp sle i32 %270, 2
  br i1 %271, label %loop.body5, label %loop.end6

loop.body5:                                       ; preds = %loop.head4
  %272 = load i32, i32* %i, align 4
  %273 = add i32 %272, 1
  store i32 %273, i32* %i, align 4
  %274 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %275 = load i32, i32* %i, align 4
  %276 = sub i32 %275, 1
  %277 = mul i32 %276, 3
  %278 = add i32 %277, 1
  %279 = add i32 %278, 0
  %280 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %274, i32 0, i32 0
  %281 = getelementptr %dimension_descriptor, %dimension_descriptor* %280, i32 0, i32 1
  %282 = load i32, i32* %281, align 4
  %283 = sub i32 %279, %282
  %284 = mul i32 1, %283
  %285 = add i32 0, %284
  %286 = getelementptr %dimension_descriptor, %dimension_descriptor* %280, i32 0, i32 3
  %287 = load i32, i32* %286, align 4
  %288 = mul i32 1, %287
  %289 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %290 = getelementptr [6 x i32], [6 x i32]* %289, i32 0, i32 0
  %291 = getelementptr inbounds i32, i32* %290, i32 %285
  %292 = load i32, i32* %i, align 4
  %293 = add i32 %292, 1
  store i32 %293, i32* %291, align 4
  %294 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %295 = load i32, i32* %i, align 4
  %296 = sub i32 %295, 1
  %297 = mul i32 %296, 3
  %298 = add i32 %297, 1
  %299 = add i32 %298, 1
  %300 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %294, i32 0, i32 0
  %301 = getelementptr %dimension_descriptor, %dimension_descriptor* %300, i32 0, i32 1
  %302 = load i32, i32* %301, align 4
  %303 = sub i32 %299, %302
  %304 = mul i32 1, %303
  %305 = add i32 0, %304
  %306 = getelementptr %dimension_descriptor, %dimension_descriptor* %300, i32 0, i32 3
  %307 = load i32, i32* %306, align 4
  %308 = mul i32 1, %307
  %309 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %310 = getelementptr [6 x i32], [6 x i32]* %309, i32 0, i32 0
  %311 = getelementptr inbounds i32, i32* %310, i32 %305
  %312 = load i32, i32* %i, align 4
  %313 = sitofp i32 %312 to float
  %314 = call float @llvm.pow.f32(float %313, float 2.000000e+00)
  %315 = fptosi float %314 to i32
  store i32 %315, i32* %311, align 4
  %316 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %317 = load i32, i32* %i, align 4
  %318 = sub i32 %317, 1
  %319 = mul i32 %318, 3
  %320 = add i32 %319, 1
  %321 = add i32 %320, 2
  %322 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %316, i32 0, i32 0
  %323 = getelementptr %dimension_descriptor, %dimension_descriptor* %322, i32 0, i32 1
  %324 = load i32, i32* %323, align 4
  %325 = sub i32 %321, %324
  %326 = mul i32 1, %325
  %327 = add i32 0, %326
  %328 = getelementptr %dimension_descriptor, %dimension_descriptor* %322, i32 0, i32 3
  %329 = load i32, i32* %328, align 4
  %330 = mul i32 1, %329
  %331 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %332 = getelementptr [6 x i32], [6 x i32]* %331, i32 0, i32 0
  %333 = getelementptr inbounds i32, i32* %332, i32 %327
  %334 = load i32, i32* %i, align 4
  %335 = mul i32 %334, 2
  store i32 %335, i32* %333, align 4
  br label %loop.head4

loop.end6:                                        ; preds = %loop.head4
  %336 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %337 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %336, i32 0, i32 0
  %338 = getelementptr %dimension_descriptor, %dimension_descriptor* %337, i32 0, i32 1
  %339 = load i32, i32* %338, align 4
  %340 = sub i32 1, %339
  %341 = mul i32 1, %340
  %342 = add i32 0, %341
  %343 = getelementptr %dimension_descriptor, %dimension_descriptor* %337, i32 0, i32 3
  %344 = load i32, i32* %343, align 4
  %345 = mul i32 1, %344
  %346 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %347 = getelementptr [6 x i32], [6 x i32]* %346, i32 0, i32 0
  %348 = getelementptr inbounds i32, i32* %347, i32 %342
  %349 = load i32, i32* %348, align 4
  %350 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %351 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %350, i32 0, i32 0
  %352 = getelementptr %dimension_descriptor, %dimension_descriptor* %351, i32 0, i32 1
  %353 = load i32, i32* %352, align 4
  %354 = sub i32 2, %353
  %355 = mul i32 1, %354
  %356 = add i32 0, %355
  %357 = getelementptr %dimension_descriptor, %dimension_descriptor* %351, i32 0, i32 3
  %358 = load i32, i32* %357, align 4
  %359 = mul i32 1, %358
  %360 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %361 = getelementptr [6 x i32], [6 x i32]* %360, i32 0, i32 0
  %362 = getelementptr inbounds i32, i32* %361, i32 %356
  %363 = load i32, i32* %362, align 4
  %364 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %365 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %364, i32 0, i32 0
  %366 = getelementptr %dimension_descriptor, %dimension_descriptor* %365, i32 0, i32 1
  %367 = load i32, i32* %366, align 4
  %368 = sub i32 3, %367
  %369 = mul i32 1, %368
  %370 = add i32 0, %369
  %371 = getelementptr %dimension_descriptor, %dimension_descriptor* %365, i32 0, i32 3
  %372 = load i32, i32* %371, align 4
  %373 = mul i32 1, %372
  %374 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %375 = getelementptr [6 x i32], [6 x i32]* %374, i32 0, i32 0
  %376 = getelementptr inbounds i32, i32* %375, i32 %370
  %377 = load i32, i32* %376, align 4
  %378 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %379 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %378, i32 0, i32 0
  %380 = getelementptr %dimension_descriptor, %dimension_descriptor* %379, i32 0, i32 1
  %381 = load i32, i32* %380, align 4
  %382 = sub i32 4, %381
  %383 = mul i32 1, %382
  %384 = add i32 0, %383
  %385 = getelementptr %dimension_descriptor, %dimension_descriptor* %379, i32 0, i32 3
  %386 = load i32, i32* %385, align 4
  %387 = mul i32 1, %386
  %388 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %389 = getelementptr [6 x i32], [6 x i32]* %388, i32 0, i32 0
  %390 = getelementptr inbounds i32, i32* %389, i32 %384
  %391 = load i32, i32* %390, align 4
  %392 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %393 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %392, i32 0, i32 0
  %394 = getelementptr %dimension_descriptor, %dimension_descriptor* %393, i32 0, i32 1
  %395 = load i32, i32* %394, align 4
  %396 = sub i32 5, %395
  %397 = mul i32 1, %396
  %398 = add i32 0, %397
  %399 = getelementptr %dimension_descriptor, %dimension_descriptor* %393, i32 0, i32 3
  %400 = load i32, i32* %399, align 4
  %401 = mul i32 1, %400
  %402 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %403 = getelementptr [6 x i32], [6 x i32]* %402, i32 0, i32 0
  %404 = getelementptr inbounds i32, i32* %403, i32 %398
  %405 = load i32, i32* %404, align 4
  %406 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %407 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %406, i32 0, i32 0
  %408 = getelementptr %dimension_descriptor, %dimension_descriptor* %407, i32 0, i32 1
  %409 = load i32, i32* %408, align 4
  %410 = sub i32 6, %409
  %411 = mul i32 1, %410
  %412 = add i32 0, %411
  %413 = getelementptr %dimension_descriptor, %dimension_descriptor* %407, i32 0, i32 3
  %414 = load i32, i32* %413, align 4
  %415 = mul i32 1, %414
  %416 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %417 = getelementptr [6 x i32], [6 x i32]* %416, i32 0, i32 0
  %418 = getelementptr inbounds i32, i32* %417, i32 %412
  %419 = load i32, i32* %418, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @2, i32 0, i32 0), i32 %349, i32 %363, i32 %377, i32 %391, i32 %405, i32 %419)
  store i32 1, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %loop.end6
  %420 = load i32, i32* %i, align 4
  %421 = add i32 %420, 1
  %422 = icmp sle i32 %421, 2
  br i1 %422, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %423 = load i32, i32* %i, align 4
  %424 = add i32 %423, 1
  store i32 %424, i32* %i, align 4
  %425 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %426 = load i32, i32* %i, align 4
  %427 = sub i32 %426, 2
  %428 = mul i32 %427, 6
  %429 = add i32 %428, 1
  %430 = add i32 %429, 0
  %431 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %425, i32 0, i32 0
  %432 = getelementptr %dimension_descriptor, %dimension_descriptor* %431, i32 0, i32 1
  %433 = load i32, i32* %432, align 4
  %434 = sub i32 %430, %433
  %435 = mul i32 1, %434
  %436 = add i32 0, %435
  %437 = getelementptr %dimension_descriptor, %dimension_descriptor* %431, i32 0, i32 3
  %438 = load i32, i32* %437, align 4
  %439 = mul i32 1, %438
  %440 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %441 = getelementptr [6 x i32], [6 x i32]* %440, i32 0, i32 0
  %442 = getelementptr inbounds i32, i32* %441, i32 %436
  %443 = load i32, i32* %i, align 4
  %444 = mul i32 2, %443
  store i32 %444, i32* %442, align 4
  %445 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %446 = load i32, i32* %i, align 4
  %447 = sub i32 %446, 2
  %448 = mul i32 %447, 6
  %449 = add i32 %448, 1
  %450 = add i32 %449, 1
  %451 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %445, i32 0, i32 0
  %452 = getelementptr %dimension_descriptor, %dimension_descriptor* %451, i32 0, i32 1
  %453 = load i32, i32* %452, align 4
  %454 = sub i32 %450, %453
  %455 = mul i32 1, %454
  %456 = add i32 0, %455
  %457 = getelementptr %dimension_descriptor, %dimension_descriptor* %451, i32 0, i32 3
  %458 = load i32, i32* %457, align 4
  %459 = mul i32 1, %458
  %460 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %461 = getelementptr [6 x i32], [6 x i32]* %460, i32 0, i32 0
  %462 = getelementptr inbounds i32, i32* %461, i32 %456
  %463 = load i32, i32* %i, align 4
  %464 = mul i32 3, %463
  store i32 %464, i32* %462, align 4
  %465 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %466 = load i32, i32* %i, align 4
  %467 = sub i32 %466, 2
  %468 = mul i32 %467, 6
  %469 = add i32 %468, 1
  %470 = add i32 %469, 2
  %471 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %465, i32 0, i32 0
  %472 = getelementptr %dimension_descriptor, %dimension_descriptor* %471, i32 0, i32 1
  %473 = load i32, i32* %472, align 4
  %474 = sub i32 %470, %473
  %475 = mul i32 1, %474
  %476 = add i32 0, %475
  %477 = getelementptr %dimension_descriptor, %dimension_descriptor* %471, i32 0, i32 3
  %478 = load i32, i32* %477, align 4
  %479 = mul i32 1, %478
  %480 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %481 = getelementptr [6 x i32], [6 x i32]* %480, i32 0, i32 0
  %482 = getelementptr inbounds i32, i32* %481, i32 %476
  %483 = load i32, i32* %i, align 4
  %484 = mul i32 4, %483
  store i32 %484, i32* %482, align 4
  %485 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %486 = load i32, i32* %i, align 4
  %487 = sub i32 %486, 2
  %488 = mul i32 %487, 6
  %489 = add i32 %488, 1
  %490 = add i32 %489, 3
  %491 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %485, i32 0, i32 0
  %492 = getelementptr %dimension_descriptor, %dimension_descriptor* %491, i32 0, i32 1
  %493 = load i32, i32* %492, align 4
  %494 = sub i32 %490, %493
  %495 = mul i32 1, %494
  %496 = add i32 0, %495
  %497 = getelementptr %dimension_descriptor, %dimension_descriptor* %491, i32 0, i32 3
  %498 = load i32, i32* %497, align 4
  %499 = mul i32 1, %498
  %500 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %501 = getelementptr [6 x i32], [6 x i32]* %500, i32 0, i32 0
  %502 = getelementptr inbounds i32, i32* %501, i32 %496
  %503 = load i32, i32* %i, align 4
  %504 = add i32 %503, 1
  store i32 %504, i32* %502, align 4
  %505 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %506 = load i32, i32* %i, align 4
  %507 = sub i32 %506, 2
  %508 = mul i32 %507, 6
  %509 = add i32 %508, 1
  %510 = add i32 %509, 4
  %511 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %505, i32 0, i32 0
  %512 = getelementptr %dimension_descriptor, %dimension_descriptor* %511, i32 0, i32 1
  %513 = load i32, i32* %512, align 4
  %514 = sub i32 %510, %513
  %515 = mul i32 1, %514
  %516 = add i32 0, %515
  %517 = getelementptr %dimension_descriptor, %dimension_descriptor* %511, i32 0, i32 3
  %518 = load i32, i32* %517, align 4
  %519 = mul i32 1, %518
  %520 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %521 = getelementptr [6 x i32], [6 x i32]* %520, i32 0, i32 0
  %522 = getelementptr inbounds i32, i32* %521, i32 %516
  %523 = load i32, i32* %i, align 4
  %524 = sitofp i32 %523 to float
  %525 = call float @llvm.pow.f32(float %524, float 2.000000e+00)
  %526 = fptosi float %525 to i32
  store i32 %526, i32* %522, align 4
  %527 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %528 = load i32, i32* %i, align 4
  %529 = sub i32 %528, 2
  %530 = mul i32 %529, 6
  %531 = add i32 %530, 1
  %532 = add i32 %531, 5
  %533 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %527, i32 0, i32 0
  %534 = getelementptr %dimension_descriptor, %dimension_descriptor* %533, i32 0, i32 1
  %535 = load i32, i32* %534, align 4
  %536 = sub i32 %532, %535
  %537 = mul i32 1, %536
  %538 = add i32 0, %537
  %539 = getelementptr %dimension_descriptor, %dimension_descriptor* %533, i32 0, i32 3
  %540 = load i32, i32* %539, align 4
  %541 = mul i32 1, %540
  %542 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %543 = getelementptr [6 x i32], [6 x i32]* %542, i32 0, i32 0
  %544 = getelementptr inbounds i32, i32* %543, i32 %538
  %545 = load i32, i32* %i, align 4
  %546 = mul i32 %545, 2
  store i32 %546, i32* %544, align 4
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %547 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %548 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %547, i32 0, i32 0
  %549 = getelementptr %dimension_descriptor, %dimension_descriptor* %548, i32 0, i32 1
  %550 = load i32, i32* %549, align 4
  %551 = sub i32 1, %550
  %552 = mul i32 1, %551
  %553 = add i32 0, %552
  %554 = getelementptr %dimension_descriptor, %dimension_descriptor* %548, i32 0, i32 3
  %555 = load i32, i32* %554, align 4
  %556 = mul i32 1, %555
  %557 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %558 = getelementptr [6 x i32], [6 x i32]* %557, i32 0, i32 0
  %559 = getelementptr inbounds i32, i32* %558, i32 %553
  %560 = load i32, i32* %559, align 4
  %561 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %562 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %561, i32 0, i32 0
  %563 = getelementptr %dimension_descriptor, %dimension_descriptor* %562, i32 0, i32 1
  %564 = load i32, i32* %563, align 4
  %565 = sub i32 2, %564
  %566 = mul i32 1, %565
  %567 = add i32 0, %566
  %568 = getelementptr %dimension_descriptor, %dimension_descriptor* %562, i32 0, i32 3
  %569 = load i32, i32* %568, align 4
  %570 = mul i32 1, %569
  %571 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %572 = getelementptr [6 x i32], [6 x i32]* %571, i32 0, i32 0
  %573 = getelementptr inbounds i32, i32* %572, i32 %567
  %574 = load i32, i32* %573, align 4
  %575 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %576 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %575, i32 0, i32 0
  %577 = getelementptr %dimension_descriptor, %dimension_descriptor* %576, i32 0, i32 1
  %578 = load i32, i32* %577, align 4
  %579 = sub i32 3, %578
  %580 = mul i32 1, %579
  %581 = add i32 0, %580
  %582 = getelementptr %dimension_descriptor, %dimension_descriptor* %576, i32 0, i32 3
  %583 = load i32, i32* %582, align 4
  %584 = mul i32 1, %583
  %585 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %586 = getelementptr [6 x i32], [6 x i32]* %585, i32 0, i32 0
  %587 = getelementptr inbounds i32, i32* %586, i32 %581
  %588 = load i32, i32* %587, align 4
  %589 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %590 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %589, i32 0, i32 0
  %591 = getelementptr %dimension_descriptor, %dimension_descriptor* %590, i32 0, i32 1
  %592 = load i32, i32* %591, align 4
  %593 = sub i32 4, %592
  %594 = mul i32 1, %593
  %595 = add i32 0, %594
  %596 = getelementptr %dimension_descriptor, %dimension_descriptor* %590, i32 0, i32 3
  %597 = load i32, i32* %596, align 4
  %598 = mul i32 1, %597
  %599 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %600 = getelementptr [6 x i32], [6 x i32]* %599, i32 0, i32 0
  %601 = getelementptr inbounds i32, i32* %600, i32 %595
  %602 = load i32, i32* %601, align 4
  %603 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %604 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %603, i32 0, i32 0
  %605 = getelementptr %dimension_descriptor, %dimension_descriptor* %604, i32 0, i32 1
  %606 = load i32, i32* %605, align 4
  %607 = sub i32 5, %606
  %608 = mul i32 1, %607
  %609 = add i32 0, %608
  %610 = getelementptr %dimension_descriptor, %dimension_descriptor* %604, i32 0, i32 3
  %611 = load i32, i32* %610, align 4
  %612 = mul i32 1, %611
  %613 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %614 = getelementptr [6 x i32], [6 x i32]* %613, i32 0, i32 0
  %615 = getelementptr inbounds i32, i32* %614, i32 %609
  %616 = load i32, i32* %615, align 4
  %617 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %618 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %617, i32 0, i32 0
  %619 = getelementptr %dimension_descriptor, %dimension_descriptor* %618, i32 0, i32 1
  %620 = load i32, i32* %619, align 4
  %621 = sub i32 6, %620
  %622 = mul i32 1, %621
  %623 = add i32 0, %622
  %624 = getelementptr %dimension_descriptor, %dimension_descriptor* %618, i32 0, i32 3
  %625 = load i32, i32* %624, align 4
  %626 = mul i32 1, %625
  %627 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %628 = getelementptr [6 x i32], [6 x i32]* %627, i32 0, i32 0
  %629 = getelementptr inbounds i32, i32* %628, i32 %623
  %630 = load i32, i32* %629, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @3, i32 0, i32 0), i32 %560, i32 %574, i32 %588, i32 %602, i32 %616, i32 %630)
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.pow.f32(float, float) #0

attributes #0 = { nounwind readnone speculatable willreturn }

