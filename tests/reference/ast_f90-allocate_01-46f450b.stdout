program allocate_01
implicit none
integer, allocatable :: a(:), b(:,:), c(:,:,:)
integer :: n, ierr
integer :: i, j, k
n = 10
allocate(a((n) + (5)))
allocate(b((2)*(n), (3)*(n)), c(n, n, 10), stat=ierr)
if ((size(a))/=((n) + (5))) then
    error stop
end if
if ((size(b))/=((((2)*(n))*(3))*(n))) then
    error stop
end if
if ((size(c))/=(((n)*(n))*(10))) then
    error stop
end if
do i = lbound(a, 1), ubound(a, 1)
    a(i) = i
end do
do i = lbound(b, 1), ubound(b, 1)
    do j = lbound(b, 2), ubound(b, 2)
        b(i, j) = (i) + (j)
    end do
end do
do i = lbound(c, 1), ubound(c, 1)
    do j = lbound(c, 2), ubound(c, 2)
        do k = lbound(c, 3), ubound(c, 3)
            c(i, j, k) = ((i) + (j)) + (k)
        end do
    end do
end do
do i = lbound(a, 1), ubound(a, 1)
    if ((a(i))/=(i)) then
        error stop
    end if
end do
do i = lbound(b, 1), ubound(b, 1)
    do j = lbound(b, 2), ubound(b, 2)
        if ((b(i, j))/=((i) + (j))) then
            error stop
        end if
    end do
end do
do i = lbound(c, 1), ubound(c, 1)
    do j = lbound(c, 2), ubound(c, 2)
        do k = lbound(c, 3), ubound(c, 3)
            if ((c(i, j, k))/=(((i) + (j)) + (k))) then
                error stop
            end if
        end do
    end do
end do
end program allocate_01
