; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { [3 x i32], i32, [1 x %dimension_descriptor] }
%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { [4 x i32], i32, [1 x %dimension_descriptor] }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main() {
.entry:
  %a = alloca %array, align 8
  %0 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %a, i32 0, i32 2
  %2 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %1, i32 0, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 2
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 3
  store i32 1, i32* %3, align 4
  store i32 1, i32* %4, align 4
  store i32 3, i32* %5, align 4
  %7 = load i32, i32* %5, align 4
  %8 = load i32, i32* %4, align 4
  %9 = sub i32 %7, %8
  %10 = add i32 %9, 1
  store i32 %10, i32* %6, align 4
  %b = alloca %array.0, align 8
  %11 = getelementptr %array.0, %array.0* %b, i32 0, i32 1
  store i32 0, i32* %11, align 4
  %12 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %13 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %12, i32 0, i32 0
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 0
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 1
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 2
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 3
  store i32 1, i32* %14, align 4
  store i32 1, i32* %15, align 4
  store i32 4, i32* %16, align 4
  %18 = load i32, i32* %16, align 4
  %19 = load i32, i32* %15, align 4
  %20 = sub i32 %18, %19
  %21 = add i32 %20, 1
  store i32 %21, i32* %17, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %22 = load i32, i32* %i, align 4
  %23 = add i32 %22, 1
  %24 = icmp sle i32 %23, 3
  br i1 %24, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %25 = load i32, i32* %i, align 4
  %26 = add i32 %25, 1
  store i32 %26, i32* %i, align 4
  %27 = getelementptr %array, %array* %a, i32 0, i32 2
  %28 = load i32, i32* %i, align 4
  %29 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %27, i32 0, i32 0
  %30 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = sub i32 %28, %31
  %33 = mul i32 1, %32
  %34 = add i32 0, %33
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = mul i32 1, %36
  %38 = getelementptr %array, %array* %a, i32 0, i32 0
  %39 = getelementptr [3 x i32], [3 x i32]* %38, i32 0, i32 0
  %40 = getelementptr inbounds i32, i32* %39, i32 %34
  %41 = load i32, i32* %i, align 4
  %42 = add i32 %41, 10
  store i32 %42, i32* %40, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %43 = getelementptr %array, %array* %a, i32 0, i32 2
  %44 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %43, i32 0, i32 0
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = sub i32 1, %46
  %48 = mul i32 1, %47
  %49 = add i32 0, %48
  %50 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 3
  %51 = load i32, i32* %50, align 4
  %52 = mul i32 1, %51
  %53 = getelementptr %array, %array* %a, i32 0, i32 0
  %54 = getelementptr [3 x i32], [3 x i32]* %53, i32 0, i32 0
  %55 = getelementptr inbounds i32, i32* %54, i32 %49
  %56 = load i32, i32* %55, align 4
  %57 = icmp ne i32 %56, 11
  br i1 %57, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %iftmp = phi i32 [ 1, %then ], [ 2, %else ]
  %58 = getelementptr %array, %array* %a, i32 0, i32 2
  %59 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %58, i32 0, i32 0
  %60 = getelementptr %dimension_descriptor, %dimension_descriptor* %59, i32 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = sub i32 2, %61
  %63 = mul i32 1, %62
  %64 = add i32 0, %63
  %65 = getelementptr %dimension_descriptor, %dimension_descriptor* %59, i32 0, i32 3
  %66 = load i32, i32* %65, align 4
  %67 = mul i32 1, %66
  %68 = getelementptr %array, %array* %a, i32 0, i32 0
  %69 = getelementptr [3 x i32], [3 x i32]* %68, i32 0, i32 0
  %70 = getelementptr inbounds i32, i32* %69, i32 %64
  %71 = load i32, i32* %70, align 4
  %72 = icmp ne i32 %71, 12
  br i1 %72, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %iftmp4 = phi i32 [ 1, %then1 ], [ 2, %else2 ]
  %73 = getelementptr %array, %array* %a, i32 0, i32 2
  %74 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %73, i32 0, i32 0
  %75 = getelementptr %dimension_descriptor, %dimension_descriptor* %74, i32 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = sub i32 3, %76
  %78 = mul i32 1, %77
  %79 = add i32 0, %78
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %74, i32 0, i32 3
  %81 = load i32, i32* %80, align 4
  %82 = mul i32 1, %81
  %83 = getelementptr %array, %array* %a, i32 0, i32 0
  %84 = getelementptr [3 x i32], [3 x i32]* %83, i32 0, i32 0
  %85 = getelementptr inbounds i32, i32* %84, i32 %79
  %86 = load i32, i32* %85, align 4
  %87 = icmp ne i32 %86, 13
  br i1 %87, label %then5, label %else6

then5:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont7

else6:                                            ; preds = %ifcont3
  br label %ifcont7

ifcont7:                                          ; preds = %else6, %then5
  %iftmp8 = phi i32 [ 1, %then5 ], [ 2, %else6 ]
  store i32 10, i32* %i, align 4
  br label %loop.head9

loop.head9:                                       ; preds = %loop.body10, %ifcont7
  %88 = load i32, i32* %i, align 4
  %89 = add i32 %88, 1
  %90 = icmp sle i32 %89, 14
  br i1 %90, label %loop.body10, label %loop.end11

loop.body10:                                      ; preds = %loop.head9
  %91 = load i32, i32* %i, align 4
  %92 = add i32 %91, 1
  store i32 %92, i32* %i, align 4
  %93 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %94 = load i32, i32* %i, align 4
  %95 = sub i32 %94, 10
  %96 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %93, i32 0, i32 0
  %97 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = sub i32 %95, %98
  %100 = mul i32 1, %99
  %101 = add i32 0, %100
  %102 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 3
  %103 = load i32, i32* %102, align 4
  %104 = mul i32 1, %103
  %105 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %106 = getelementptr [4 x i32], [4 x i32]* %105, i32 0, i32 0
  %107 = getelementptr inbounds i32, i32* %106, i32 %101
  %108 = load i32, i32* %i, align 4
  store i32 %108, i32* %107, align 4
  br label %loop.head9

loop.end11:                                       ; preds = %loop.head9
  %109 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %110 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %109, i32 0, i32 0
  %111 = getelementptr %dimension_descriptor, %dimension_descriptor* %110, i32 0, i32 1
  %112 = load i32, i32* %111, align 4
  %113 = sub i32 1, %112
  %114 = mul i32 1, %113
  %115 = add i32 0, %114
  %116 = getelementptr %dimension_descriptor, %dimension_descriptor* %110, i32 0, i32 3
  %117 = load i32, i32* %116, align 4
  %118 = mul i32 1, %117
  %119 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %120 = getelementptr [4 x i32], [4 x i32]* %119, i32 0, i32 0
  %121 = getelementptr inbounds i32, i32* %120, i32 %115
  %122 = load i32, i32* %121, align 4
  %123 = icmp ne i32 %122, 11
  br i1 %123, label %then12, label %else13

then12:                                           ; preds = %loop.end11
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont14

else13:                                           ; preds = %loop.end11
  br label %ifcont14

ifcont14:                                         ; preds = %else13, %then12
  %iftmp15 = phi i32 [ 1, %then12 ], [ 2, %else13 ]
  %124 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %125 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %124, i32 0, i32 0
  %126 = getelementptr %dimension_descriptor, %dimension_descriptor* %125, i32 0, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = sub i32 2, %127
  %129 = mul i32 1, %128
  %130 = add i32 0, %129
  %131 = getelementptr %dimension_descriptor, %dimension_descriptor* %125, i32 0, i32 3
  %132 = load i32, i32* %131, align 4
  %133 = mul i32 1, %132
  %134 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %135 = getelementptr [4 x i32], [4 x i32]* %134, i32 0, i32 0
  %136 = getelementptr inbounds i32, i32* %135, i32 %130
  %137 = load i32, i32* %136, align 4
  %138 = icmp ne i32 %137, 12
  br i1 %138, label %then16, label %else17

then16:                                           ; preds = %ifcont14
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont14
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %iftmp19 = phi i32 [ 1, %then16 ], [ 2, %else17 ]
  %139 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %140 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %139, i32 0, i32 0
  %141 = getelementptr %dimension_descriptor, %dimension_descriptor* %140, i32 0, i32 1
  %142 = load i32, i32* %141, align 4
  %143 = sub i32 3, %142
  %144 = mul i32 1, %143
  %145 = add i32 0, %144
  %146 = getelementptr %dimension_descriptor, %dimension_descriptor* %140, i32 0, i32 3
  %147 = load i32, i32* %146, align 4
  %148 = mul i32 1, %147
  %149 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %150 = getelementptr [4 x i32], [4 x i32]* %149, i32 0, i32 0
  %151 = getelementptr inbounds i32, i32* %150, i32 %145
  %152 = load i32, i32* %151, align 4
  %153 = icmp ne i32 %152, 13
  br i1 %153, label %then20, label %else21

then20:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont22

else21:                                           ; preds = %ifcont18
  br label %ifcont22

ifcont22:                                         ; preds = %else21, %then20
  %iftmp23 = phi i32 [ 1, %then20 ], [ 2, %else21 ]
  %154 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %155 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %154, i32 0, i32 0
  %156 = getelementptr %dimension_descriptor, %dimension_descriptor* %155, i32 0, i32 1
  %157 = load i32, i32* %156, align 4
  %158 = sub i32 4, %157
  %159 = mul i32 1, %158
  %160 = add i32 0, %159
  %161 = getelementptr %dimension_descriptor, %dimension_descriptor* %155, i32 0, i32 3
  %162 = load i32, i32* %161, align 4
  %163 = mul i32 1, %162
  %164 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %165 = getelementptr [4 x i32], [4 x i32]* %164, i32 0, i32 0
  %166 = getelementptr inbounds i32, i32* %165, i32 %160
  %167 = load i32, i32* %166, align 4
  %168 = icmp ne i32 %167, 14
  br i1 %168, label %then24, label %else25

then24:                                           ; preds = %ifcont22
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont26

else25:                                           ; preds = %ifcont22
  br label %ifcont26

ifcont26:                                         ; preds = %else25, %then24
  %iftmp27 = phi i32 [ 1, %then24 ], [ 2, %else25 ]
  store i32 0, i32* %i, align 4
  br label %loop.head28

loop.head28:                                      ; preds = %loop.body29, %ifcont26
  %169 = load i32, i32* %i, align 4
  %170 = add i32 %169, 1
  %171 = icmp sle i32 %170, 3
  br i1 %171, label %loop.body29, label %loop.end30

loop.body29:                                      ; preds = %loop.head28
  %172 = load i32, i32* %i, align 4
  %173 = add i32 %172, 1
  store i32 %173, i32* %i, align 4
  %174 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %175 = load i32, i32* %i, align 4
  %176 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %174, i32 0, i32 0
  %177 = getelementptr %dimension_descriptor, %dimension_descriptor* %176, i32 0, i32 1
  %178 = load i32, i32* %177, align 4
  %179 = sub i32 %175, %178
  %180 = mul i32 1, %179
  %181 = add i32 0, %180
  %182 = getelementptr %dimension_descriptor, %dimension_descriptor* %176, i32 0, i32 3
  %183 = load i32, i32* %182, align 4
  %184 = mul i32 1, %183
  %185 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %186 = getelementptr [4 x i32], [4 x i32]* %185, i32 0, i32 0
  %187 = getelementptr inbounds i32, i32* %186, i32 %181
  %188 = getelementptr %array, %array* %a, i32 0, i32 2
  %189 = load i32, i32* %i, align 4
  %190 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %188, i32 0, i32 0
  %191 = getelementptr %dimension_descriptor, %dimension_descriptor* %190, i32 0, i32 1
  %192 = load i32, i32* %191, align 4
  %193 = sub i32 %189, %192
  %194 = mul i32 1, %193
  %195 = add i32 0, %194
  %196 = getelementptr %dimension_descriptor, %dimension_descriptor* %190, i32 0, i32 3
  %197 = load i32, i32* %196, align 4
  %198 = mul i32 1, %197
  %199 = getelementptr %array, %array* %a, i32 0, i32 0
  %200 = getelementptr [3 x i32], [3 x i32]* %199, i32 0, i32 0
  %201 = getelementptr inbounds i32, i32* %200, i32 %195
  %202 = load i32, i32* %201, align 4
  %203 = sub i32 %202, 10
  store i32 %203, i32* %187, align 4
  br label %loop.head28

loop.end30:                                       ; preds = %loop.head28
  %204 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %205 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %204, i32 0, i32 0
  %206 = getelementptr %dimension_descriptor, %dimension_descriptor* %205, i32 0, i32 1
  %207 = load i32, i32* %206, align 4
  %208 = sub i32 1, %207
  %209 = mul i32 1, %208
  %210 = add i32 0, %209
  %211 = getelementptr %dimension_descriptor, %dimension_descriptor* %205, i32 0, i32 3
  %212 = load i32, i32* %211, align 4
  %213 = mul i32 1, %212
  %214 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %215 = getelementptr [4 x i32], [4 x i32]* %214, i32 0, i32 0
  %216 = getelementptr inbounds i32, i32* %215, i32 %210
  %217 = load i32, i32* %216, align 4
  %218 = icmp ne i32 %217, 1
  br i1 %218, label %then31, label %else32

then31:                                           ; preds = %loop.end30
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %loop.end30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %iftmp34 = phi i32 [ 1, %then31 ], [ 2, %else32 ]
  %219 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %220 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %219, i32 0, i32 0
  %221 = getelementptr %dimension_descriptor, %dimension_descriptor* %220, i32 0, i32 1
  %222 = load i32, i32* %221, align 4
  %223 = sub i32 2, %222
  %224 = mul i32 1, %223
  %225 = add i32 0, %224
  %226 = getelementptr %dimension_descriptor, %dimension_descriptor* %220, i32 0, i32 3
  %227 = load i32, i32* %226, align 4
  %228 = mul i32 1, %227
  %229 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %230 = getelementptr [4 x i32], [4 x i32]* %229, i32 0, i32 0
  %231 = getelementptr inbounds i32, i32* %230, i32 %225
  %232 = load i32, i32* %231, align 4
  %233 = icmp ne i32 %232, 2
  br i1 %233, label %then35, label %else36

then35:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont37

else36:                                           ; preds = %ifcont33
  br label %ifcont37

ifcont37:                                         ; preds = %else36, %then35
  %iftmp38 = phi i32 [ 1, %then35 ], [ 2, %else36 ]
  %234 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %235 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %234, i32 0, i32 0
  %236 = getelementptr %dimension_descriptor, %dimension_descriptor* %235, i32 0, i32 1
  %237 = load i32, i32* %236, align 4
  %238 = sub i32 3, %237
  %239 = mul i32 1, %238
  %240 = add i32 0, %239
  %241 = getelementptr %dimension_descriptor, %dimension_descriptor* %235, i32 0, i32 3
  %242 = load i32, i32* %241, align 4
  %243 = mul i32 1, %242
  %244 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %245 = getelementptr [4 x i32], [4 x i32]* %244, i32 0, i32 0
  %246 = getelementptr inbounds i32, i32* %245, i32 %240
  %247 = load i32, i32* %246, align 4
  %248 = icmp ne i32 %247, 3
  br i1 %248, label %then39, label %else40

then39:                                           ; preds = %ifcont37
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont41

else40:                                           ; preds = %ifcont37
  br label %ifcont41

ifcont41:                                         ; preds = %else40, %then39
  %iftmp42 = phi i32 [ 1, %then39 ], [ 2, %else40 ]
  %249 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %250 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %249, i32 0, i32 0
  %251 = getelementptr %dimension_descriptor, %dimension_descriptor* %250, i32 0, i32 1
  %252 = load i32, i32* %251, align 4
  %253 = sub i32 4, %252
  %254 = mul i32 1, %253
  %255 = add i32 0, %254
  %256 = getelementptr %dimension_descriptor, %dimension_descriptor* %250, i32 0, i32 3
  %257 = load i32, i32* %256, align 4
  %258 = mul i32 1, %257
  %259 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %260 = getelementptr [4 x i32], [4 x i32]* %259, i32 0, i32 0
  %261 = getelementptr inbounds i32, i32* %260, i32 %255
  %262 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %263 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %262, i32 0, i32 0
  %264 = getelementptr %dimension_descriptor, %dimension_descriptor* %263, i32 0, i32 1
  %265 = load i32, i32* %264, align 4
  %266 = sub i32 1, %265
  %267 = mul i32 1, %266
  %268 = add i32 0, %267
  %269 = getelementptr %dimension_descriptor, %dimension_descriptor* %263, i32 0, i32 3
  %270 = load i32, i32* %269, align 4
  %271 = mul i32 1, %270
  %272 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %273 = getelementptr [4 x i32], [4 x i32]* %272, i32 0, i32 0
  %274 = getelementptr inbounds i32, i32* %273, i32 %268
  %275 = load i32, i32* %274, align 4
  %276 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %277 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %276, i32 0, i32 0
  %278 = getelementptr %dimension_descriptor, %dimension_descriptor* %277, i32 0, i32 1
  %279 = load i32, i32* %278, align 4
  %280 = sub i32 2, %279
  %281 = mul i32 1, %280
  %282 = add i32 0, %281
  %283 = getelementptr %dimension_descriptor, %dimension_descriptor* %277, i32 0, i32 3
  %284 = load i32, i32* %283, align 4
  %285 = mul i32 1, %284
  %286 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %287 = getelementptr [4 x i32], [4 x i32]* %286, i32 0, i32 0
  %288 = getelementptr inbounds i32, i32* %287, i32 %282
  %289 = load i32, i32* %288, align 4
  %290 = add i32 %275, %289
  %291 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %292 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %291, i32 0, i32 0
  %293 = getelementptr %dimension_descriptor, %dimension_descriptor* %292, i32 0, i32 1
  %294 = load i32, i32* %293, align 4
  %295 = sub i32 3, %294
  %296 = mul i32 1, %295
  %297 = add i32 0, %296
  %298 = getelementptr %dimension_descriptor, %dimension_descriptor* %292, i32 0, i32 3
  %299 = load i32, i32* %298, align 4
  %300 = mul i32 1, %299
  %301 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %302 = getelementptr [4 x i32], [4 x i32]* %301, i32 0, i32 0
  %303 = getelementptr inbounds i32, i32* %302, i32 %297
  %304 = load i32, i32* %303, align 4
  %305 = add i32 %290, %304
  %306 = getelementptr %array, %array* %a, i32 0, i32 2
  %307 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %306, i32 0, i32 0
  %308 = getelementptr %dimension_descriptor, %dimension_descriptor* %307, i32 0, i32 1
  %309 = load i32, i32* %308, align 4
  %310 = sub i32 1, %309
  %311 = mul i32 1, %310
  %312 = add i32 0, %311
  %313 = getelementptr %dimension_descriptor, %dimension_descriptor* %307, i32 0, i32 3
  %314 = load i32, i32* %313, align 4
  %315 = mul i32 1, %314
  %316 = getelementptr %array, %array* %a, i32 0, i32 0
  %317 = getelementptr [3 x i32], [3 x i32]* %316, i32 0, i32 0
  %318 = getelementptr inbounds i32, i32* %317, i32 %312
  %319 = load i32, i32* %318, align 4
  %320 = add i32 %305, %319
  store i32 %320, i32* %261, align 4
  %321 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %322 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %321, i32 0, i32 0
  %323 = getelementptr %dimension_descriptor, %dimension_descriptor* %322, i32 0, i32 1
  %324 = load i32, i32* %323, align 4
  %325 = sub i32 4, %324
  %326 = mul i32 1, %325
  %327 = add i32 0, %326
  %328 = getelementptr %dimension_descriptor, %dimension_descriptor* %322, i32 0, i32 3
  %329 = load i32, i32* %328, align 4
  %330 = mul i32 1, %329
  %331 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %332 = getelementptr [4 x i32], [4 x i32]* %331, i32 0, i32 0
  %333 = getelementptr inbounds i32, i32* %332, i32 %327
  %334 = load i32, i32* %333, align 4
  %335 = icmp ne i32 %334, 17
  br i1 %335, label %then43, label %else44

then43:                                           ; preds = %ifcont41
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont45

else44:                                           ; preds = %ifcont41
  br label %ifcont45

ifcont45:                                         ; preds = %else44, %then43
  %iftmp46 = phi i32 [ 1, %then43 ], [ 2, %else44 ]
  %336 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %337 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %336, i32 0, i32 0
  %338 = getelementptr %dimension_descriptor, %dimension_descriptor* %337, i32 0, i32 1
  %339 = load i32, i32* %338, align 4
  %340 = sub i32 4, %339
  %341 = mul i32 1, %340
  %342 = add i32 0, %341
  %343 = getelementptr %dimension_descriptor, %dimension_descriptor* %337, i32 0, i32 3
  %344 = load i32, i32* %343, align 4
  %345 = mul i32 1, %344
  %346 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %347 = getelementptr [4 x i32], [4 x i32]* %346, i32 0, i32 0
  %348 = getelementptr inbounds i32, i32* %347, i32 %342
  %349 = getelementptr %array, %array* %a, i32 0, i32 2
  %350 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %349, i32 0, i32 0
  %351 = getelementptr %dimension_descriptor, %dimension_descriptor* %350, i32 0, i32 1
  %352 = load i32, i32* %351, align 4
  %353 = sub i32 1, %352
  %354 = mul i32 1, %353
  %355 = add i32 0, %354
  %356 = getelementptr %dimension_descriptor, %dimension_descriptor* %350, i32 0, i32 3
  %357 = load i32, i32* %356, align 4
  %358 = mul i32 1, %357
  %359 = getelementptr %array, %array* %a, i32 0, i32 0
  %360 = getelementptr [3 x i32], [3 x i32]* %359, i32 0, i32 0
  %361 = getelementptr inbounds i32, i32* %360, i32 %355
  %362 = load i32, i32* %361, align 4
  store i32 %362, i32* %348, align 4
  %363 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %364 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %363, i32 0, i32 0
  %365 = getelementptr %dimension_descriptor, %dimension_descriptor* %364, i32 0, i32 1
  %366 = load i32, i32* %365, align 4
  %367 = sub i32 4, %366
  %368 = mul i32 1, %367
  %369 = add i32 0, %368
  %370 = getelementptr %dimension_descriptor, %dimension_descriptor* %364, i32 0, i32 3
  %371 = load i32, i32* %370, align 4
  %372 = mul i32 1, %371
  %373 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %374 = getelementptr [4 x i32], [4 x i32]* %373, i32 0, i32 0
  %375 = getelementptr inbounds i32, i32* %374, i32 %369
  %376 = load i32, i32* %375, align 4
  %377 = icmp ne i32 %376, 11
  br i1 %377, label %then47, label %else48

then47:                                           ; preds = %ifcont45
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont49

else48:                                           ; preds = %ifcont45
  br label %ifcont49

ifcont49:                                         ; preds = %else48, %then47
  %iftmp50 = phi i32 [ 1, %then47 ], [ 2, %else48 ]
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)

