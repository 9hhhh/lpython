5
; ModuleID = 'LFortran'
source_filename = "LFortran"

%size_arg = type { %dimension_descriptor*, i32 }
%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { [3 x i32], i32, [1 x %dimension_descriptor] }
%array.1 = type { [4 x i32], i32, [1 x %dimension_descriptor] }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @__module_lfortran_intrinsic_array_size(%size_arg* %x) {
.entry:
  %r = alloca i32, align 4
  %0 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 0
  %1 = load %dimension_descriptor*, %dimension_descriptor** %0, align 8
  %2 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  store i32 1, i32* %r, align 4
  %4 = alloca i32, align 4
  store i32 0, i32* %4, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, %3
  br i1 %6, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %7 = load i32, i32* %4, align 4
  %8 = load i32, i32* %r, align 4
  %9 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 %7
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %8, %11
  store i32 %12, i32* %r, align 4
  %13 = add i32 %7, 1
  store i32 %13, i32* %4, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %14 = load i32, i32* %r, align 4
  ret i32 %14
}

define i32 @main() {
.entry:
  %a = alloca %array.0, align 8
  %0 = getelementptr %array.0, %array.0* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %2 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %1, i32 0, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 2
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 3
  store i32 1, i32* %3, align 4
  store i32 1, i32* %4, align 4
  store i32 3, i32* %5, align 4
  %7 = load i32, i32* %5, align 4
  %8 = load i32, i32* %4, align 4
  %9 = sub i32 %7, %8
  %10 = add i32 %9, 1
  store i32 %10, i32* %6, align 4
  %b = alloca %array.1, align 8
  %11 = getelementptr %array.1, %array.1* %b, i32 0, i32 1
  store i32 0, i32* %11, align 4
  %12 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %13 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %12, i32 0, i32 0
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 0
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 1
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 2
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 3
  store i32 1, i32* %14, align 4
  store i32 1, i32* %15, align 4
  store i32 4, i32* %16, align 4
  %18 = load i32, i32* %16, align 4
  %19 = load i32, i32* %15, align 4
  %20 = sub i32 %18, %19
  %21 = add i32 %20, 1
  store i32 %21, i32* %17, align 4
  %i = alloca i32, align 4
  %size_a = alloca i32, align 4
  %22 = alloca %size_arg, align 8
  %23 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %24 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %23, i32 0, i32 0
  %25 = getelementptr %size_arg, %size_arg* %22, i32 0, i32 0
  store %dimension_descriptor* %24, %dimension_descriptor** %25, align 8
  %26 = getelementptr %size_arg, %size_arg* %22, i32 0, i32 1
  store i32 1, i32* %26, align 4
  %27 = call i32 @__module_lfortran_intrinsic_array_size(%size_arg* %22)
  store i32 %27, i32* %size_a, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %28 = load i32, i32* %i, align 4
  %29 = add i32 %28, 1
  %30 = load i32, i32* %size_a, align 4
  %31 = icmp sle i32 %29, %30
  br i1 %31, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %32 = load i32, i32* %i, align 4
  %33 = add i32 %32, 1
  store i32 %33, i32* %i, align 4
  %34 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %35 = load i32, i32* %i, align 4
  %36 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %34, i32 0, i32 0
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %36, i32 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = sub i32 %35, %38
  %40 = mul i32 1, %39
  %41 = add i32 0, %40
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %36, i32 0, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = mul i32 1, %43
  %45 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %46 = getelementptr [3 x i32], [3 x i32]* %45, i32 0, i32 %41
  %47 = load i32, i32* %i, align 4
  %48 = add i32 %47, 10
  store i32 %48, i32* %46, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %49 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %50 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %49, i32 0, i32 0
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = sub i32 1, %52
  %54 = mul i32 1, %53
  %55 = add i32 0, %54
  %56 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 3
  %57 = load i32, i32* %56, align 4
  %58 = mul i32 1, %57
  %59 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %60 = getelementptr [3 x i32], [3 x i32]* %59, i32 0, i32 %55
  %61 = load i32, i32* %60, align 4
  %62 = icmp ne i32 %61, 11
  br i1 %62, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %iftmp = phi i32 [ 1, %then ], [ 2, %else ]
  %63 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %64 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %63, i32 0, i32 0
  %65 = getelementptr %dimension_descriptor, %dimension_descriptor* %64, i32 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = sub i32 2, %66
  %68 = mul i32 1, %67
  %69 = add i32 0, %68
  %70 = getelementptr %dimension_descriptor, %dimension_descriptor* %64, i32 0, i32 3
  %71 = load i32, i32* %70, align 4
  %72 = mul i32 1, %71
  %73 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %74 = getelementptr [3 x i32], [3 x i32]* %73, i32 0, i32 %69
  %75 = load i32, i32* %74, align 4
  %76 = icmp ne i32 %75, 12
  br i1 %76, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %iftmp4 = phi i32 [ 1, %then1 ], [ 2, %else2 ]
  %77 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %78 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %77, i32 0, i32 0
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = sub i32 3, %80
  %82 = mul i32 1, %81
  %83 = add i32 0, %82
  %84 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 3
  %85 = load i32, i32* %84, align 4
  %86 = mul i32 1, %85
  %87 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %88 = getelementptr [3 x i32], [3 x i32]* %87, i32 0, i32 %83
  %89 = load i32, i32* %88, align 4
  %90 = icmp ne i32 %89, 13
  br i1 %90, label %then5, label %else6

then5:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont7

else6:                                            ; preds = %ifcont3
  br label %ifcont7

ifcont7:                                          ; preds = %else6, %then5
  %iftmp8 = phi i32 [ 1, %then5 ], [ 2, %else6 ]
  store i32 10, i32* %i, align 4
  br label %loop.head9

loop.head9:                                       ; preds = %loop.body10, %ifcont7
  %91 = load i32, i32* %i, align 4
  %92 = add i32 %91, 1
  %93 = icmp sle i32 %92, 14
  br i1 %93, label %loop.body10, label %loop.end11

loop.body10:                                      ; preds = %loop.head9
  %94 = load i32, i32* %i, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %i, align 4
  %96 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %97 = load i32, i32* %i, align 4
  %98 = sub i32 %97, 10
  %99 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %96, i32 0, i32 0
  %100 = getelementptr %dimension_descriptor, %dimension_descriptor* %99, i32 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = sub i32 %98, %101
  %103 = mul i32 1, %102
  %104 = add i32 0, %103
  %105 = getelementptr %dimension_descriptor, %dimension_descriptor* %99, i32 0, i32 3
  %106 = load i32, i32* %105, align 4
  %107 = mul i32 1, %106
  %108 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %109 = getelementptr [4 x i32], [4 x i32]* %108, i32 0, i32 %104
  %110 = load i32, i32* %i, align 4
  store i32 %110, i32* %109, align 4
  br label %loop.head9

loop.end11:                                       ; preds = %loop.head9
  %111 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %112 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %111, i32 0, i32 0
  %113 = getelementptr %dimension_descriptor, %dimension_descriptor* %112, i32 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = sub i32 1, %114
  %116 = mul i32 1, %115
  %117 = add i32 0, %116
  %118 = getelementptr %dimension_descriptor, %dimension_descriptor* %112, i32 0, i32 3
  %119 = load i32, i32* %118, align 4
  %120 = mul i32 1, %119
  %121 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %122 = getelementptr [4 x i32], [4 x i32]* %121, i32 0, i32 %117
  %123 = load i32, i32* %122, align 4
  %124 = icmp ne i32 %123, 11
  br i1 %124, label %then12, label %else13

then12:                                           ; preds = %loop.end11
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont14

else13:                                           ; preds = %loop.end11
  br label %ifcont14

ifcont14:                                         ; preds = %else13, %then12
  %iftmp15 = phi i32 [ 1, %then12 ], [ 2, %else13 ]
  %125 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %126 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %125, i32 0, i32 0
  %127 = getelementptr %dimension_descriptor, %dimension_descriptor* %126, i32 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = sub i32 2, %128
  %130 = mul i32 1, %129
  %131 = add i32 0, %130
  %132 = getelementptr %dimension_descriptor, %dimension_descriptor* %126, i32 0, i32 3
  %133 = load i32, i32* %132, align 4
  %134 = mul i32 1, %133
  %135 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %136 = getelementptr [4 x i32], [4 x i32]* %135, i32 0, i32 %131
  %137 = load i32, i32* %136, align 4
  %138 = icmp ne i32 %137, 12
  br i1 %138, label %then16, label %else17

then16:                                           ; preds = %ifcont14
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont14
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %iftmp19 = phi i32 [ 1, %then16 ], [ 2, %else17 ]
  %139 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %140 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %139, i32 0, i32 0
  %141 = getelementptr %dimension_descriptor, %dimension_descriptor* %140, i32 0, i32 1
  %142 = load i32, i32* %141, align 4
  %143 = sub i32 3, %142
  %144 = mul i32 1, %143
  %145 = add i32 0, %144
  %146 = getelementptr %dimension_descriptor, %dimension_descriptor* %140, i32 0, i32 3
  %147 = load i32, i32* %146, align 4
  %148 = mul i32 1, %147
  %149 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %150 = getelementptr [4 x i32], [4 x i32]* %149, i32 0, i32 %145
  %151 = load i32, i32* %150, align 4
  %152 = icmp ne i32 %151, 13
  br i1 %152, label %then20, label %else21

then20:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont22

else21:                                           ; preds = %ifcont18
  br label %ifcont22

ifcont22:                                         ; preds = %else21, %then20
  %iftmp23 = phi i32 [ 1, %then20 ], [ 2, %else21 ]
  %153 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %154 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %153, i32 0, i32 0
  %155 = getelementptr %dimension_descriptor, %dimension_descriptor* %154, i32 0, i32 1
  %156 = load i32, i32* %155, align 4
  %157 = sub i32 4, %156
  %158 = mul i32 1, %157
  %159 = add i32 0, %158
  %160 = getelementptr %dimension_descriptor, %dimension_descriptor* %154, i32 0, i32 3
  %161 = load i32, i32* %160, align 4
  %162 = mul i32 1, %161
  %163 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %164 = getelementptr [4 x i32], [4 x i32]* %163, i32 0, i32 %159
  %165 = load i32, i32* %164, align 4
  %166 = icmp ne i32 %165, 14
  br i1 %166, label %then24, label %else25

then24:                                           ; preds = %ifcont22
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont26

else25:                                           ; preds = %ifcont22
  br label %ifcont26

ifcont26:                                         ; preds = %else25, %then24
  %iftmp27 = phi i32 [ 1, %then24 ], [ 2, %else25 ]
  store i32 0, i32* %i, align 4
  br label %loop.head28

loop.head28:                                      ; preds = %loop.body29, %ifcont26
  %167 = load i32, i32* %i, align 4
  %168 = add i32 %167, 1
  %169 = icmp sle i32 %168, 3
  br i1 %169, label %loop.body29, label %loop.end30

loop.body29:                                      ; preds = %loop.head28
  %170 = load i32, i32* %i, align 4
  %171 = add i32 %170, 1
  store i32 %171, i32* %i, align 4
  %172 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %173 = load i32, i32* %i, align 4
  %174 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %172, i32 0, i32 0
  %175 = getelementptr %dimension_descriptor, %dimension_descriptor* %174, i32 0, i32 1
  %176 = load i32, i32* %175, align 4
  %177 = sub i32 %173, %176
  %178 = mul i32 1, %177
  %179 = add i32 0, %178
  %180 = getelementptr %dimension_descriptor, %dimension_descriptor* %174, i32 0, i32 3
  %181 = load i32, i32* %180, align 4
  %182 = mul i32 1, %181
  %183 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %184 = getelementptr [4 x i32], [4 x i32]* %183, i32 0, i32 %179
  %185 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %186 = load i32, i32* %i, align 4
  %187 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %185, i32 0, i32 0
  %188 = getelementptr %dimension_descriptor, %dimension_descriptor* %187, i32 0, i32 1
  %189 = load i32, i32* %188, align 4
  %190 = sub i32 %186, %189
  %191 = mul i32 1, %190
  %192 = add i32 0, %191
  %193 = getelementptr %dimension_descriptor, %dimension_descriptor* %187, i32 0, i32 3
  %194 = load i32, i32* %193, align 4
  %195 = mul i32 1, %194
  %196 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %197 = getelementptr [3 x i32], [3 x i32]* %196, i32 0, i32 %192
  %198 = load i32, i32* %197, align 4
  %199 = sub i32 %198, 10
  store i32 %199, i32* %184, align 4
  br label %loop.head28

loop.end30:                                       ; preds = %loop.head28
  %200 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %201 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %200, i32 0, i32 0
  %202 = getelementptr %dimension_descriptor, %dimension_descriptor* %201, i32 0, i32 1
  %203 = load i32, i32* %202, align 4
  %204 = sub i32 1, %203
  %205 = mul i32 1, %204
  %206 = add i32 0, %205
  %207 = getelementptr %dimension_descriptor, %dimension_descriptor* %201, i32 0, i32 3
  %208 = load i32, i32* %207, align 4
  %209 = mul i32 1, %208
  %210 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %211 = getelementptr [4 x i32], [4 x i32]* %210, i32 0, i32 %206
  %212 = load i32, i32* %211, align 4
  %213 = icmp ne i32 %212, 1
  br i1 %213, label %then31, label %else32

then31:                                           ; preds = %loop.end30
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %loop.end30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %iftmp34 = phi i32 [ 1, %then31 ], [ 2, %else32 ]
  %214 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %215 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %214, i32 0, i32 0
  %216 = getelementptr %dimension_descriptor, %dimension_descriptor* %215, i32 0, i32 1
  %217 = load i32, i32* %216, align 4
  %218 = sub i32 2, %217
  %219 = mul i32 1, %218
  %220 = add i32 0, %219
  %221 = getelementptr %dimension_descriptor, %dimension_descriptor* %215, i32 0, i32 3
  %222 = load i32, i32* %221, align 4
  %223 = mul i32 1, %222
  %224 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %225 = getelementptr [4 x i32], [4 x i32]* %224, i32 0, i32 %220
  %226 = load i32, i32* %225, align 4
  %227 = icmp ne i32 %226, 2
  br i1 %227, label %then35, label %else36

then35:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont37

else36:                                           ; preds = %ifcont33
  br label %ifcont37

ifcont37:                                         ; preds = %else36, %then35
  %iftmp38 = phi i32 [ 1, %then35 ], [ 2, %else36 ]
  %228 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %229 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %228, i32 0, i32 0
  %230 = getelementptr %dimension_descriptor, %dimension_descriptor* %229, i32 0, i32 1
  %231 = load i32, i32* %230, align 4
  %232 = sub i32 3, %231
  %233 = mul i32 1, %232
  %234 = add i32 0, %233
  %235 = getelementptr %dimension_descriptor, %dimension_descriptor* %229, i32 0, i32 3
  %236 = load i32, i32* %235, align 4
  %237 = mul i32 1, %236
  %238 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %239 = getelementptr [4 x i32], [4 x i32]* %238, i32 0, i32 %234
  %240 = load i32, i32* %239, align 4
  %241 = icmp ne i32 %240, 3
  br i1 %241, label %then39, label %else40

then39:                                           ; preds = %ifcont37
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont41

else40:                                           ; preds = %ifcont37
  br label %ifcont41

ifcont41:                                         ; preds = %else40, %then39
  %iftmp42 = phi i32 [ 1, %then39 ], [ 2, %else40 ]
  %242 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %243 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %242, i32 0, i32 0
  %244 = getelementptr %dimension_descriptor, %dimension_descriptor* %243, i32 0, i32 1
  %245 = load i32, i32* %244, align 4
  %246 = sub i32 4, %245
  %247 = mul i32 1, %246
  %248 = add i32 0, %247
  %249 = getelementptr %dimension_descriptor, %dimension_descriptor* %243, i32 0, i32 3
  %250 = load i32, i32* %249, align 4
  %251 = mul i32 1, %250
  %252 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %253 = getelementptr [4 x i32], [4 x i32]* %252, i32 0, i32 %248
  %254 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %255 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %254, i32 0, i32 0
  %256 = getelementptr %dimension_descriptor, %dimension_descriptor* %255, i32 0, i32 1
  %257 = load i32, i32* %256, align 4
  %258 = sub i32 1, %257
  %259 = mul i32 1, %258
  %260 = add i32 0, %259
  %261 = getelementptr %dimension_descriptor, %dimension_descriptor* %255, i32 0, i32 3
  %262 = load i32, i32* %261, align 4
  %263 = mul i32 1, %262
  %264 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %265 = getelementptr [4 x i32], [4 x i32]* %264, i32 0, i32 %260
  %266 = load i32, i32* %265, align 4
  %267 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %268 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %267, i32 0, i32 0
  %269 = getelementptr %dimension_descriptor, %dimension_descriptor* %268, i32 0, i32 1
  %270 = load i32, i32* %269, align 4
  %271 = sub i32 2, %270
  %272 = mul i32 1, %271
  %273 = add i32 0, %272
  %274 = getelementptr %dimension_descriptor, %dimension_descriptor* %268, i32 0, i32 3
  %275 = load i32, i32* %274, align 4
  %276 = mul i32 1, %275
  %277 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %278 = getelementptr [4 x i32], [4 x i32]* %277, i32 0, i32 %273
  %279 = load i32, i32* %278, align 4
  %280 = add i32 %266, %279
  %281 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %282 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %281, i32 0, i32 0
  %283 = getelementptr %dimension_descriptor, %dimension_descriptor* %282, i32 0, i32 1
  %284 = load i32, i32* %283, align 4
  %285 = sub i32 3, %284
  %286 = mul i32 1, %285
  %287 = add i32 0, %286
  %288 = getelementptr %dimension_descriptor, %dimension_descriptor* %282, i32 0, i32 3
  %289 = load i32, i32* %288, align 4
  %290 = mul i32 1, %289
  %291 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %292 = getelementptr [4 x i32], [4 x i32]* %291, i32 0, i32 %287
  %293 = load i32, i32* %292, align 4
  %294 = add i32 %280, %293
  %295 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %296 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %295, i32 0, i32 0
  %297 = getelementptr %dimension_descriptor, %dimension_descriptor* %296, i32 0, i32 1
  %298 = load i32, i32* %297, align 4
  %299 = sub i32 1, %298
  %300 = mul i32 1, %299
  %301 = add i32 0, %300
  %302 = getelementptr %dimension_descriptor, %dimension_descriptor* %296, i32 0, i32 3
  %303 = load i32, i32* %302, align 4
  %304 = mul i32 1, %303
  %305 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %306 = getelementptr [3 x i32], [3 x i32]* %305, i32 0, i32 %301
  %307 = load i32, i32* %306, align 4
  %308 = add i32 %294, %307
  store i32 %308, i32* %253, align 4
  %309 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %310 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %309, i32 0, i32 0
  %311 = getelementptr %dimension_descriptor, %dimension_descriptor* %310, i32 0, i32 1
  %312 = load i32, i32* %311, align 4
  %313 = sub i32 4, %312
  %314 = mul i32 1, %313
  %315 = add i32 0, %314
  %316 = getelementptr %dimension_descriptor, %dimension_descriptor* %310, i32 0, i32 3
  %317 = load i32, i32* %316, align 4
  %318 = mul i32 1, %317
  %319 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %320 = getelementptr [4 x i32], [4 x i32]* %319, i32 0, i32 %315
  %321 = load i32, i32* %320, align 4
  %322 = icmp ne i32 %321, 17
  br i1 %322, label %then43, label %else44

then43:                                           ; preds = %ifcont41
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont45

else44:                                           ; preds = %ifcont41
  br label %ifcont45

ifcont45:                                         ; preds = %else44, %then43
  %iftmp46 = phi i32 [ 1, %then43 ], [ 2, %else44 ]
  %323 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %324 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %323, i32 0, i32 0
  %325 = getelementptr %dimension_descriptor, %dimension_descriptor* %324, i32 0, i32 1
  %326 = load i32, i32* %325, align 4
  %327 = sub i32 4, %326
  %328 = mul i32 1, %327
  %329 = add i32 0, %328
  %330 = getelementptr %dimension_descriptor, %dimension_descriptor* %324, i32 0, i32 3
  %331 = load i32, i32* %330, align 4
  %332 = mul i32 1, %331
  %333 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %334 = getelementptr [4 x i32], [4 x i32]* %333, i32 0, i32 %329
  %335 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %336 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %335, i32 0, i32 0
  %337 = getelementptr %dimension_descriptor, %dimension_descriptor* %336, i32 0, i32 1
  %338 = load i32, i32* %337, align 4
  %339 = sub i32 1, %338
  %340 = mul i32 1, %339
  %341 = add i32 0, %340
  %342 = getelementptr %dimension_descriptor, %dimension_descriptor* %336, i32 0, i32 3
  %343 = load i32, i32* %342, align 4
  %344 = mul i32 1, %343
  %345 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %346 = getelementptr [3 x i32], [3 x i32]* %345, i32 0, i32 %341
  %347 = load i32, i32* %346, align 4
  store i32 %347, i32* %334, align 4
  %348 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %349 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %348, i32 0, i32 0
  %350 = getelementptr %dimension_descriptor, %dimension_descriptor* %349, i32 0, i32 1
  %351 = load i32, i32* %350, align 4
  %352 = sub i32 4, %351
  %353 = mul i32 1, %352
  %354 = add i32 0, %353
  %355 = getelementptr %dimension_descriptor, %dimension_descriptor* %349, i32 0, i32 3
  %356 = load i32, i32* %355, align 4
  %357 = mul i32 1, %356
  %358 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %359 = getelementptr [4 x i32], [4 x i32]* %358, i32 0, i32 %354
  %360 = load i32, i32* %359, align 4
  %361 = icmp ne i32 %360, 11
  br i1 %361, label %then47, label %else48

then47:                                           ; preds = %ifcont45
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont49

else48:                                           ; preds = %ifcont45
  br label %ifcont49

ifcont49:                                         ; preds = %else48, %then47
  %iftmp50 = phi i32 [ 1, %then47 ], [ 2, %else48 ]
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)

