; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { [3 x i32], i32, [1 x %dimension_descriptor] }
%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { [4 x i32], i32, [1 x %dimension_descriptor] }
%array.1 = type { [4 x i32], i32, [2 x %dimension_descriptor] }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@12 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@13 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@14 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@15 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main() {
.entry:
  %a = alloca %array, align 8
  %0 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %a, i32 0, i32 2
  %2 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %1, i32 0, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 2
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 3
  store i32 1, i32* %3, align 4
  store i32 1, i32* %4, align 4
  store i32 3, i32* %5, align 4
  %7 = load i32, i32* %5, align 4
  %8 = load i32, i32* %4, align 4
  %9 = sub i32 %7, %8
  %10 = add i32 %9, 1
  store i32 %10, i32* %6, align 4
  %b = alloca %array.0, align 8
  %11 = getelementptr %array.0, %array.0* %b, i32 0, i32 1
  store i32 0, i32* %11, align 4
  %12 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %13 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %12, i32 0, i32 0
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 0
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 1
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 2
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 3
  store i32 1, i32* %14, align 4
  store i32 1, i32* %15, align 4
  store i32 4, i32* %16, align 4
  %18 = load i32, i32* %16, align 4
  %19 = load i32, i32* %15, align 4
  %20 = sub i32 %18, %19
  %21 = add i32 %20, 1
  store i32 %21, i32* %17, align 4
  %c = alloca %array.1, align 8
  %22 = getelementptr %array.1, %array.1* %c, i32 0, i32 1
  store i32 0, i32* %22, align 4
  %23 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %24 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %23, i32 0, i32 0
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 1
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 2
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 3
  store i32 1, i32* %25, align 4
  store i32 1, i32* %26, align 4
  store i32 2, i32* %27, align 4
  %29 = load i32, i32* %27, align 4
  %30 = load i32, i32* %26, align 4
  %31 = sub i32 %29, %30
  %32 = add i32 %31, 1
  store i32 %32, i32* %28, align 4
  %33 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %23, i32 0, i32 1
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 0
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 1
  %36 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 2
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 3
  store i32 1, i32* %34, align 4
  store i32 1, i32* %35, align 4
  store i32 2, i32* %36, align 4
  %38 = load i32, i32* %36, align 4
  %39 = load i32, i32* %35, align 4
  %40 = sub i32 %38, %39
  %41 = add i32 %40, 1
  store i32 %41, i32* %37, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %42 = load i32, i32* %i, align 4
  %43 = add i32 %42, 1
  %44 = icmp sle i32 %43, 3
  br i1 %44, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %45 = load i32, i32* %i, align 4
  %46 = add i32 %45, 1
  store i32 %46, i32* %i, align 4
  %47 = getelementptr %array, %array* %a, i32 0, i32 2
  %48 = load i32, i32* %i, align 4
  %49 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %47, i32 0, i32 0
  %50 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = sub i32 %48, %51
  %53 = mul i32 1, %52
  %54 = add i32 0, %53
  %55 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 3
  %56 = load i32, i32* %55, align 4
  %57 = mul i32 1, %56
  %58 = getelementptr %array, %array* %a, i32 0, i32 0
  %59 = getelementptr [3 x i32], [3 x i32]* %58, i32 0, i32 %54
  %60 = load i32, i32* %i, align 4
  %61 = add i32 %60, 10
  store i32 %61, i32* %59, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %62 = getelementptr %array, %array* %a, i32 0, i32 2
  %63 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %62, i32 0, i32 0
  %64 = getelementptr %dimension_descriptor, %dimension_descriptor* %63, i32 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = sub i32 1, %65
  %67 = mul i32 1, %66
  %68 = add i32 0, %67
  %69 = getelementptr %dimension_descriptor, %dimension_descriptor* %63, i32 0, i32 3
  %70 = load i32, i32* %69, align 4
  %71 = mul i32 1, %70
  %72 = getelementptr %array, %array* %a, i32 0, i32 0
  %73 = getelementptr [3 x i32], [3 x i32]* %72, i32 0, i32 %68
  %74 = load i32, i32* %73, align 4
  %75 = icmp ne i32 %74, 11
  br i1 %75, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %iftmp = phi i32 [ 1, %then ], [ 2, %else ]
  %76 = getelementptr %array, %array* %a, i32 0, i32 2
  %77 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %76, i32 0, i32 0
  %78 = getelementptr %dimension_descriptor, %dimension_descriptor* %77, i32 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = sub i32 2, %79
  %81 = mul i32 1, %80
  %82 = add i32 0, %81
  %83 = getelementptr %dimension_descriptor, %dimension_descriptor* %77, i32 0, i32 3
  %84 = load i32, i32* %83, align 4
  %85 = mul i32 1, %84
  %86 = getelementptr %array, %array* %a, i32 0, i32 0
  %87 = getelementptr [3 x i32], [3 x i32]* %86, i32 0, i32 %82
  %88 = load i32, i32* %87, align 4
  %89 = icmp ne i32 %88, 12
  br i1 %89, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %iftmp4 = phi i32 [ 1, %then1 ], [ 2, %else2 ]
  %90 = getelementptr %array, %array* %a, i32 0, i32 2
  %91 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %90, i32 0, i32 0
  %92 = getelementptr %dimension_descriptor, %dimension_descriptor* %91, i32 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = sub i32 3, %93
  %95 = mul i32 1, %94
  %96 = add i32 0, %95
  %97 = getelementptr %dimension_descriptor, %dimension_descriptor* %91, i32 0, i32 3
  %98 = load i32, i32* %97, align 4
  %99 = mul i32 1, %98
  %100 = getelementptr %array, %array* %a, i32 0, i32 0
  %101 = getelementptr [3 x i32], [3 x i32]* %100, i32 0, i32 %96
  %102 = load i32, i32* %101, align 4
  %103 = icmp ne i32 %102, 13
  br i1 %103, label %then5, label %else6

then5:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont7

else6:                                            ; preds = %ifcont3
  br label %ifcont7

ifcont7:                                          ; preds = %else6, %then5
  %iftmp8 = phi i32 [ 1, %then5 ], [ 2, %else6 ]
  store i32 10, i32* %i, align 4
  br label %loop.head9

loop.head9:                                       ; preds = %loop.body10, %ifcont7
  %104 = load i32, i32* %i, align 4
  %105 = add i32 %104, 1
  %106 = icmp sle i32 %105, 14
  br i1 %106, label %loop.body10, label %loop.end11

loop.body10:                                      ; preds = %loop.head9
  %107 = load i32, i32* %i, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %i, align 4
  %109 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %110 = load i32, i32* %i, align 4
  %111 = sub i32 %110, 10
  %112 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %109, i32 0, i32 0
  %113 = getelementptr %dimension_descriptor, %dimension_descriptor* %112, i32 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = sub i32 %111, %114
  %116 = mul i32 1, %115
  %117 = add i32 0, %116
  %118 = getelementptr %dimension_descriptor, %dimension_descriptor* %112, i32 0, i32 3
  %119 = load i32, i32* %118, align 4
  %120 = mul i32 1, %119
  %121 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %122 = getelementptr [4 x i32], [4 x i32]* %121, i32 0, i32 %117
  %123 = load i32, i32* %i, align 4
  store i32 %123, i32* %122, align 4
  br label %loop.head9

loop.end11:                                       ; preds = %loop.head9
  %124 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %125 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %124, i32 0, i32 0
  %126 = getelementptr %dimension_descriptor, %dimension_descriptor* %125, i32 0, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = sub i32 1, %127
  %129 = mul i32 1, %128
  %130 = add i32 0, %129
  %131 = getelementptr %dimension_descriptor, %dimension_descriptor* %125, i32 0, i32 3
  %132 = load i32, i32* %131, align 4
  %133 = mul i32 1, %132
  %134 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %135 = getelementptr [4 x i32], [4 x i32]* %134, i32 0, i32 %130
  %136 = load i32, i32* %135, align 4
  %137 = icmp ne i32 %136, 11
  br i1 %137, label %then12, label %else13

then12:                                           ; preds = %loop.end11
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont14

else13:                                           ; preds = %loop.end11
  br label %ifcont14

ifcont14:                                         ; preds = %else13, %then12
  %iftmp15 = phi i32 [ 1, %then12 ], [ 2, %else13 ]
  %138 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %139 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %138, i32 0, i32 0
  %140 = getelementptr %dimension_descriptor, %dimension_descriptor* %139, i32 0, i32 1
  %141 = load i32, i32* %140, align 4
  %142 = sub i32 2, %141
  %143 = mul i32 1, %142
  %144 = add i32 0, %143
  %145 = getelementptr %dimension_descriptor, %dimension_descriptor* %139, i32 0, i32 3
  %146 = load i32, i32* %145, align 4
  %147 = mul i32 1, %146
  %148 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %149 = getelementptr [4 x i32], [4 x i32]* %148, i32 0, i32 %144
  %150 = load i32, i32* %149, align 4
  %151 = icmp ne i32 %150, 12
  br i1 %151, label %then16, label %else17

then16:                                           ; preds = %ifcont14
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont14
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %iftmp19 = phi i32 [ 1, %then16 ], [ 2, %else17 ]
  %152 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %153 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %152, i32 0, i32 0
  %154 = getelementptr %dimension_descriptor, %dimension_descriptor* %153, i32 0, i32 1
  %155 = load i32, i32* %154, align 4
  %156 = sub i32 3, %155
  %157 = mul i32 1, %156
  %158 = add i32 0, %157
  %159 = getelementptr %dimension_descriptor, %dimension_descriptor* %153, i32 0, i32 3
  %160 = load i32, i32* %159, align 4
  %161 = mul i32 1, %160
  %162 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %163 = getelementptr [4 x i32], [4 x i32]* %162, i32 0, i32 %158
  %164 = load i32, i32* %163, align 4
  %165 = icmp ne i32 %164, 13
  br i1 %165, label %then20, label %else21

then20:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont22

else21:                                           ; preds = %ifcont18
  br label %ifcont22

ifcont22:                                         ; preds = %else21, %then20
  %iftmp23 = phi i32 [ 1, %then20 ], [ 2, %else21 ]
  %166 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %167 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %166, i32 0, i32 0
  %168 = getelementptr %dimension_descriptor, %dimension_descriptor* %167, i32 0, i32 1
  %169 = load i32, i32* %168, align 4
  %170 = sub i32 4, %169
  %171 = mul i32 1, %170
  %172 = add i32 0, %171
  %173 = getelementptr %dimension_descriptor, %dimension_descriptor* %167, i32 0, i32 3
  %174 = load i32, i32* %173, align 4
  %175 = mul i32 1, %174
  %176 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %177 = getelementptr [4 x i32], [4 x i32]* %176, i32 0, i32 %172
  %178 = load i32, i32* %177, align 4
  %179 = icmp ne i32 %178, 14
  br i1 %179, label %then24, label %else25

then24:                                           ; preds = %ifcont22
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont26

else25:                                           ; preds = %ifcont22
  br label %ifcont26

ifcont26:                                         ; preds = %else25, %then24
  %iftmp27 = phi i32 [ 1, %then24 ], [ 2, %else25 ]
  store i32 0, i32* %i, align 4
  br label %loop.head28

loop.head28:                                      ; preds = %loop.body29, %ifcont26
  %180 = load i32, i32* %i, align 4
  %181 = add i32 %180, 1
  %182 = icmp sle i32 %181, 3
  br i1 %182, label %loop.body29, label %loop.end30

loop.body29:                                      ; preds = %loop.head28
  %183 = load i32, i32* %i, align 4
  %184 = add i32 %183, 1
  store i32 %184, i32* %i, align 4
  %185 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %186 = load i32, i32* %i, align 4
  %187 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %185, i32 0, i32 0
  %188 = getelementptr %dimension_descriptor, %dimension_descriptor* %187, i32 0, i32 1
  %189 = load i32, i32* %188, align 4
  %190 = sub i32 %186, %189
  %191 = mul i32 1, %190
  %192 = add i32 0, %191
  %193 = getelementptr %dimension_descriptor, %dimension_descriptor* %187, i32 0, i32 3
  %194 = load i32, i32* %193, align 4
  %195 = mul i32 1, %194
  %196 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %197 = getelementptr [4 x i32], [4 x i32]* %196, i32 0, i32 %192
  %198 = getelementptr %array, %array* %a, i32 0, i32 2
  %199 = load i32, i32* %i, align 4
  %200 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %198, i32 0, i32 0
  %201 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = sub i32 %199, %202
  %204 = mul i32 1, %203
  %205 = add i32 0, %204
  %206 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 3
  %207 = load i32, i32* %206, align 4
  %208 = mul i32 1, %207
  %209 = getelementptr %array, %array* %a, i32 0, i32 0
  %210 = getelementptr [3 x i32], [3 x i32]* %209, i32 0, i32 %205
  %211 = load i32, i32* %210, align 4
  %212 = sub i32 %211, 10
  store i32 %212, i32* %197, align 4
  br label %loop.head28

loop.end30:                                       ; preds = %loop.head28
  %213 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %214 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %213, i32 0, i32 0
  %215 = getelementptr %dimension_descriptor, %dimension_descriptor* %214, i32 0, i32 1
  %216 = load i32, i32* %215, align 4
  %217 = sub i32 1, %216
  %218 = mul i32 1, %217
  %219 = add i32 0, %218
  %220 = getelementptr %dimension_descriptor, %dimension_descriptor* %214, i32 0, i32 3
  %221 = load i32, i32* %220, align 4
  %222 = mul i32 1, %221
  %223 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %224 = getelementptr [4 x i32], [4 x i32]* %223, i32 0, i32 %219
  %225 = load i32, i32* %224, align 4
  %226 = icmp ne i32 %225, 1
  br i1 %226, label %then31, label %else32

then31:                                           ; preds = %loop.end30
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %loop.end30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %iftmp34 = phi i32 [ 1, %then31 ], [ 2, %else32 ]
  %227 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %228 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %227, i32 0, i32 0
  %229 = getelementptr %dimension_descriptor, %dimension_descriptor* %228, i32 0, i32 1
  %230 = load i32, i32* %229, align 4
  %231 = sub i32 2, %230
  %232 = mul i32 1, %231
  %233 = add i32 0, %232
  %234 = getelementptr %dimension_descriptor, %dimension_descriptor* %228, i32 0, i32 3
  %235 = load i32, i32* %234, align 4
  %236 = mul i32 1, %235
  %237 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %238 = getelementptr [4 x i32], [4 x i32]* %237, i32 0, i32 %233
  %239 = load i32, i32* %238, align 4
  %240 = icmp ne i32 %239, 2
  br i1 %240, label %then35, label %else36

then35:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont37

else36:                                           ; preds = %ifcont33
  br label %ifcont37

ifcont37:                                         ; preds = %else36, %then35
  %iftmp38 = phi i32 [ 1, %then35 ], [ 2, %else36 ]
  %241 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %242 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %241, i32 0, i32 0
  %243 = getelementptr %dimension_descriptor, %dimension_descriptor* %242, i32 0, i32 1
  %244 = load i32, i32* %243, align 4
  %245 = sub i32 3, %244
  %246 = mul i32 1, %245
  %247 = add i32 0, %246
  %248 = getelementptr %dimension_descriptor, %dimension_descriptor* %242, i32 0, i32 3
  %249 = load i32, i32* %248, align 4
  %250 = mul i32 1, %249
  %251 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %252 = getelementptr [4 x i32], [4 x i32]* %251, i32 0, i32 %247
  %253 = load i32, i32* %252, align 4
  %254 = icmp ne i32 %253, 3
  br i1 %254, label %then39, label %else40

then39:                                           ; preds = %ifcont37
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont41

else40:                                           ; preds = %ifcont37
  br label %ifcont41

ifcont41:                                         ; preds = %else40, %then39
  %iftmp42 = phi i32 [ 1, %then39 ], [ 2, %else40 ]
  %255 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %256 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %255, i32 0, i32 0
  %257 = getelementptr %dimension_descriptor, %dimension_descriptor* %256, i32 0, i32 1
  %258 = load i32, i32* %257, align 4
  %259 = sub i32 4, %258
  %260 = mul i32 1, %259
  %261 = add i32 0, %260
  %262 = getelementptr %dimension_descriptor, %dimension_descriptor* %256, i32 0, i32 3
  %263 = load i32, i32* %262, align 4
  %264 = mul i32 1, %263
  %265 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %266 = getelementptr [4 x i32], [4 x i32]* %265, i32 0, i32 %261
  %267 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %268 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %267, i32 0, i32 0
  %269 = getelementptr %dimension_descriptor, %dimension_descriptor* %268, i32 0, i32 1
  %270 = load i32, i32* %269, align 4
  %271 = sub i32 1, %270
  %272 = mul i32 1, %271
  %273 = add i32 0, %272
  %274 = getelementptr %dimension_descriptor, %dimension_descriptor* %268, i32 0, i32 3
  %275 = load i32, i32* %274, align 4
  %276 = mul i32 1, %275
  %277 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %278 = getelementptr [4 x i32], [4 x i32]* %277, i32 0, i32 %273
  %279 = load i32, i32* %278, align 4
  %280 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %281 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %280, i32 0, i32 0
  %282 = getelementptr %dimension_descriptor, %dimension_descriptor* %281, i32 0, i32 1
  %283 = load i32, i32* %282, align 4
  %284 = sub i32 2, %283
  %285 = mul i32 1, %284
  %286 = add i32 0, %285
  %287 = getelementptr %dimension_descriptor, %dimension_descriptor* %281, i32 0, i32 3
  %288 = load i32, i32* %287, align 4
  %289 = mul i32 1, %288
  %290 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %291 = getelementptr [4 x i32], [4 x i32]* %290, i32 0, i32 %286
  %292 = load i32, i32* %291, align 4
  %293 = add i32 %279, %292
  %294 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %295 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %294, i32 0, i32 0
  %296 = getelementptr %dimension_descriptor, %dimension_descriptor* %295, i32 0, i32 1
  %297 = load i32, i32* %296, align 4
  %298 = sub i32 3, %297
  %299 = mul i32 1, %298
  %300 = add i32 0, %299
  %301 = getelementptr %dimension_descriptor, %dimension_descriptor* %295, i32 0, i32 3
  %302 = load i32, i32* %301, align 4
  %303 = mul i32 1, %302
  %304 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %305 = getelementptr [4 x i32], [4 x i32]* %304, i32 0, i32 %300
  %306 = load i32, i32* %305, align 4
  %307 = add i32 %293, %306
  %308 = getelementptr %array, %array* %a, i32 0, i32 2
  %309 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %308, i32 0, i32 0
  %310 = getelementptr %dimension_descriptor, %dimension_descriptor* %309, i32 0, i32 1
  %311 = load i32, i32* %310, align 4
  %312 = sub i32 1, %311
  %313 = mul i32 1, %312
  %314 = add i32 0, %313
  %315 = getelementptr %dimension_descriptor, %dimension_descriptor* %309, i32 0, i32 3
  %316 = load i32, i32* %315, align 4
  %317 = mul i32 1, %316
  %318 = getelementptr %array, %array* %a, i32 0, i32 0
  %319 = getelementptr [3 x i32], [3 x i32]* %318, i32 0, i32 %314
  %320 = load i32, i32* %319, align 4
  %321 = add i32 %307, %320
  store i32 %321, i32* %266, align 4
  %322 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %323 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %322, i32 0, i32 0
  %324 = getelementptr %dimension_descriptor, %dimension_descriptor* %323, i32 0, i32 1
  %325 = load i32, i32* %324, align 4
  %326 = sub i32 4, %325
  %327 = mul i32 1, %326
  %328 = add i32 0, %327
  %329 = getelementptr %dimension_descriptor, %dimension_descriptor* %323, i32 0, i32 3
  %330 = load i32, i32* %329, align 4
  %331 = mul i32 1, %330
  %332 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %333 = getelementptr [4 x i32], [4 x i32]* %332, i32 0, i32 %328
  %334 = load i32, i32* %333, align 4
  %335 = icmp ne i32 %334, 17
  br i1 %335, label %then43, label %else44

then43:                                           ; preds = %ifcont41
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont45

else44:                                           ; preds = %ifcont41
  br label %ifcont45

ifcont45:                                         ; preds = %else44, %then43
  %iftmp46 = phi i32 [ 1, %then43 ], [ 2, %else44 ]
  %336 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %337 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %336, i32 0, i32 0
  %338 = getelementptr %dimension_descriptor, %dimension_descriptor* %337, i32 0, i32 1
  %339 = load i32, i32* %338, align 4
  %340 = sub i32 4, %339
  %341 = mul i32 1, %340
  %342 = add i32 0, %341
  %343 = getelementptr %dimension_descriptor, %dimension_descriptor* %337, i32 0, i32 3
  %344 = load i32, i32* %343, align 4
  %345 = mul i32 1, %344
  %346 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %347 = getelementptr [4 x i32], [4 x i32]* %346, i32 0, i32 %342
  %348 = getelementptr %array, %array* %a, i32 0, i32 2
  %349 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %348, i32 0, i32 0
  %350 = getelementptr %dimension_descriptor, %dimension_descriptor* %349, i32 0, i32 1
  %351 = load i32, i32* %350, align 4
  %352 = sub i32 1, %351
  %353 = mul i32 1, %352
  %354 = add i32 0, %353
  %355 = getelementptr %dimension_descriptor, %dimension_descriptor* %349, i32 0, i32 3
  %356 = load i32, i32* %355, align 4
  %357 = mul i32 1, %356
  %358 = getelementptr %array, %array* %a, i32 0, i32 0
  %359 = getelementptr [3 x i32], [3 x i32]* %358, i32 0, i32 %354
  %360 = load i32, i32* %359, align 4
  store i32 %360, i32* %347, align 4
  %361 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %362 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %361, i32 0, i32 0
  %363 = getelementptr %dimension_descriptor, %dimension_descriptor* %362, i32 0, i32 1
  %364 = load i32, i32* %363, align 4
  %365 = sub i32 4, %364
  %366 = mul i32 1, %365
  %367 = add i32 0, %366
  %368 = getelementptr %dimension_descriptor, %dimension_descriptor* %362, i32 0, i32 3
  %369 = load i32, i32* %368, align 4
  %370 = mul i32 1, %369
  %371 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %372 = getelementptr [4 x i32], [4 x i32]* %371, i32 0, i32 %367
  %373 = load i32, i32* %372, align 4
  %374 = icmp ne i32 %373, 11
  br i1 %374, label %then47, label %else48

then47:                                           ; preds = %ifcont45
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont49

else48:                                           ; preds = %ifcont45
  br label %ifcont49

ifcont49:                                         ; preds = %else48, %then47
  %iftmp50 = phi i32 [ 1, %then47 ], [ 2, %else48 ]
  store i32 0, i32* %i, align 4
  br label %loop.head51

loop.head51:                                      ; preds = %loop.end55, %ifcont49
  %375 = load i32, i32* %i, align 4
  %376 = add i32 %375, 1
  %377 = icmp sle i32 %376, 2
  br i1 %377, label %loop.body52, label %loop.end56

loop.body52:                                      ; preds = %loop.head51
  %378 = load i32, i32* %i, align 4
  %379 = add i32 %378, 1
  store i32 %379, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head53

loop.head53:                                      ; preds = %loop.body54, %loop.body52
  %380 = load i32, i32* %j, align 4
  %381 = add i32 %380, 1
  %382 = icmp sle i32 %381, 2
  br i1 %382, label %loop.body54, label %loop.end55

loop.body54:                                      ; preds = %loop.head53
  %383 = load i32, i32* %j, align 4
  %384 = add i32 %383, 1
  store i32 %384, i32* %j, align 4
  %385 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %386 = load i32, i32* %i, align 4
  %387 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %385, i32 0, i32 0
  %388 = getelementptr %dimension_descriptor, %dimension_descriptor* %387, i32 0, i32 1
  %389 = load i32, i32* %388, align 4
  %390 = sub i32 %386, %389
  %391 = mul i32 1, %390
  %392 = add i32 0, %391
  %393 = getelementptr %dimension_descriptor, %dimension_descriptor* %387, i32 0, i32 3
  %394 = load i32, i32* %393, align 4
  %395 = mul i32 1, %394
  %396 = load i32, i32* %j, align 4
  %397 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %385, i32 0, i32 1
  %398 = getelementptr %dimension_descriptor, %dimension_descriptor* %397, i32 0, i32 1
  %399 = load i32, i32* %398, align 4
  %400 = sub i32 %396, %399
  %401 = mul i32 %395, %400
  %402 = add i32 %392, %401
  %403 = getelementptr %dimension_descriptor, %dimension_descriptor* %397, i32 0, i32 3
  %404 = load i32, i32* %403, align 4
  %405 = mul i32 %395, %404
  %406 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %407 = getelementptr [4 x i32], [4 x i32]* %406, i32 0, i32 %402
  %408 = load i32, i32* %i, align 4
  %409 = load i32, i32* %j, align 4
  %410 = add i32 %408, %409
  %411 = add i32 %410, 10
  store i32 %411, i32* %407, align 4
  br label %loop.head53

loop.end55:                                       ; preds = %loop.head53
  br label %loop.head51

loop.end56:                                       ; preds = %loop.head51
  %412 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %413 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %412, i32 0, i32 0
  %414 = getelementptr %dimension_descriptor, %dimension_descriptor* %413, i32 0, i32 1
  %415 = load i32, i32* %414, align 4
  %416 = sub i32 1, %415
  %417 = mul i32 1, %416
  %418 = add i32 0, %417
  %419 = getelementptr %dimension_descriptor, %dimension_descriptor* %413, i32 0, i32 3
  %420 = load i32, i32* %419, align 4
  %421 = mul i32 1, %420
  %422 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %412, i32 0, i32 1
  %423 = getelementptr %dimension_descriptor, %dimension_descriptor* %422, i32 0, i32 1
  %424 = load i32, i32* %423, align 4
  %425 = sub i32 1, %424
  %426 = mul i32 %421, %425
  %427 = add i32 %418, %426
  %428 = getelementptr %dimension_descriptor, %dimension_descriptor* %422, i32 0, i32 3
  %429 = load i32, i32* %428, align 4
  %430 = mul i32 %421, %429
  %431 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %432 = getelementptr [4 x i32], [4 x i32]* %431, i32 0, i32 %427
  %433 = load i32, i32* %432, align 4
  %434 = icmp ne i32 %433, 12
  br i1 %434, label %then57, label %else58

then57:                                           ; preds = %loop.end56
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @12, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont59

else58:                                           ; preds = %loop.end56
  br label %ifcont59

ifcont59:                                         ; preds = %else58, %then57
  %iftmp60 = phi i32 [ 1, %then57 ], [ 2, %else58 ]
  %435 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %436 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %435, i32 0, i32 0
  %437 = getelementptr %dimension_descriptor, %dimension_descriptor* %436, i32 0, i32 1
  %438 = load i32, i32* %437, align 4
  %439 = sub i32 1, %438
  %440 = mul i32 1, %439
  %441 = add i32 0, %440
  %442 = getelementptr %dimension_descriptor, %dimension_descriptor* %436, i32 0, i32 3
  %443 = load i32, i32* %442, align 4
  %444 = mul i32 1, %443
  %445 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %435, i32 0, i32 1
  %446 = getelementptr %dimension_descriptor, %dimension_descriptor* %445, i32 0, i32 1
  %447 = load i32, i32* %446, align 4
  %448 = sub i32 2, %447
  %449 = mul i32 %444, %448
  %450 = add i32 %441, %449
  %451 = getelementptr %dimension_descriptor, %dimension_descriptor* %445, i32 0, i32 3
  %452 = load i32, i32* %451, align 4
  %453 = mul i32 %444, %452
  %454 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %455 = getelementptr [4 x i32], [4 x i32]* %454, i32 0, i32 %450
  %456 = load i32, i32* %455, align 4
  %457 = icmp ne i32 %456, 13
  br i1 %457, label %then61, label %else62

then61:                                           ; preds = %ifcont59
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @13, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont63

else62:                                           ; preds = %ifcont59
  br label %ifcont63

ifcont63:                                         ; preds = %else62, %then61
  %iftmp64 = phi i32 [ 1, %then61 ], [ 2, %else62 ]
  %458 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %459 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %458, i32 0, i32 0
  %460 = getelementptr %dimension_descriptor, %dimension_descriptor* %459, i32 0, i32 1
  %461 = load i32, i32* %460, align 4
  %462 = sub i32 2, %461
  %463 = mul i32 1, %462
  %464 = add i32 0, %463
  %465 = getelementptr %dimension_descriptor, %dimension_descriptor* %459, i32 0, i32 3
  %466 = load i32, i32* %465, align 4
  %467 = mul i32 1, %466
  %468 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %458, i32 0, i32 1
  %469 = getelementptr %dimension_descriptor, %dimension_descriptor* %468, i32 0, i32 1
  %470 = load i32, i32* %469, align 4
  %471 = sub i32 1, %470
  %472 = mul i32 %467, %471
  %473 = add i32 %464, %472
  %474 = getelementptr %dimension_descriptor, %dimension_descriptor* %468, i32 0, i32 3
  %475 = load i32, i32* %474, align 4
  %476 = mul i32 %467, %475
  %477 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %478 = getelementptr [4 x i32], [4 x i32]* %477, i32 0, i32 %473
  %479 = load i32, i32* %478, align 4
  %480 = icmp ne i32 %479, 13
  br i1 %480, label %then65, label %else66

then65:                                           ; preds = %ifcont63
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @14, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont67

else66:                                           ; preds = %ifcont63
  br label %ifcont67

ifcont67:                                         ; preds = %else66, %then65
  %iftmp68 = phi i32 [ 1, %then65 ], [ 2, %else66 ]
  %481 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %482 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %481, i32 0, i32 0
  %483 = getelementptr %dimension_descriptor, %dimension_descriptor* %482, i32 0, i32 1
  %484 = load i32, i32* %483, align 4
  %485 = sub i32 2, %484
  %486 = mul i32 1, %485
  %487 = add i32 0, %486
  %488 = getelementptr %dimension_descriptor, %dimension_descriptor* %482, i32 0, i32 3
  %489 = load i32, i32* %488, align 4
  %490 = mul i32 1, %489
  %491 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %481, i32 0, i32 1
  %492 = getelementptr %dimension_descriptor, %dimension_descriptor* %491, i32 0, i32 1
  %493 = load i32, i32* %492, align 4
  %494 = sub i32 2, %493
  %495 = mul i32 %490, %494
  %496 = add i32 %487, %495
  %497 = getelementptr %dimension_descriptor, %dimension_descriptor* %491, i32 0, i32 3
  %498 = load i32, i32* %497, align 4
  %499 = mul i32 %490, %498
  %500 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %501 = getelementptr [4 x i32], [4 x i32]* %500, i32 0, i32 %496
  %502 = load i32, i32* %501, align 4
  %503 = icmp ne i32 %502, 14
  br i1 %503, label %then69, label %else70

then69:                                           ; preds = %ifcont67
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @15, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont71

else70:                                           ; preds = %ifcont67
  br label %ifcont71

ifcont71:                                         ; preds = %else70, %then69
  %iftmp72 = phi i32 [ 1, %then69 ], [ 2, %else70 ]
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)

