#include <iostream>
#include <string>
#include <vector>
#include <Kokkos_Core.hpp>
#include <lfortran_intrinsics.h>

template <typename T>
Kokkos::View<T*> from_std_vector(const std::vector<T> &v)
{
    Kokkos::View<T*> r("r", v.size());
    for (size_t i=0; i < v.size(); i++) {
        r(i) = v[i];
    }
    return r;
}

void test_factorial_1(int x)
{
    int result;
    if (x < 0) {
        return;
    };
    result = 1;
    while (x > 0) {
        result = result*x;
        x = x - 1;
    };
    return;
}

void test_factorial_2(int x)
{
    int i;
    int result;
    result = 1;
    for (i=1; i<=x + 1; i++) {
        result = result*i;
    };
    return;
}

