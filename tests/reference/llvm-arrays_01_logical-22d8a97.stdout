; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { [3 x i1], i32, [1 x %dimension_descriptor] }
%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { [4 x i1], i32, [1 x %dimension_descriptor] }
%array.1 = type { [4 x i1], i32, [2 x %dimension_descriptor] }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@12 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@13 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@14 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@15 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main() {
.entry:
  %a = alloca %array, align 8
  %0 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %a, i32 0, i32 2
  %2 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %1, i32 0, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 2
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 3
  store i32 1, i32* %3, align 4
  store i32 1, i32* %4, align 4
  store i32 3, i32* %5, align 4
  %7 = load i32, i32* %5, align 4
  %8 = load i32, i32* %4, align 4
  %9 = sub i32 %7, %8
  %10 = add i32 %9, 1
  store i32 %10, i32* %6, align 4
  %b = alloca %array.0, align 8
  %11 = getelementptr %array.0, %array.0* %b, i32 0, i32 1
  store i32 0, i32* %11, align 4
  %12 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %13 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %12, i32 0, i32 0
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 0
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 1
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 2
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 3
  store i32 1, i32* %14, align 4
  store i32 1, i32* %15, align 4
  store i32 4, i32* %16, align 4
  %18 = load i32, i32* %16, align 4
  %19 = load i32, i32* %15, align 4
  %20 = sub i32 %18, %19
  %21 = add i32 %20, 1
  store i32 %21, i32* %17, align 4
  %c = alloca %array.1, align 8
  %22 = getelementptr %array.1, %array.1* %c, i32 0, i32 1
  store i32 0, i32* %22, align 4
  %23 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %24 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %23, i32 0, i32 0
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 1
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 2
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 3
  store i32 1, i32* %25, align 4
  store i32 1, i32* %26, align 4
  store i32 2, i32* %27, align 4
  %29 = load i32, i32* %27, align 4
  %30 = load i32, i32* %26, align 4
  %31 = sub i32 %29, %30
  %32 = add i32 %31, 1
  store i32 %32, i32* %28, align 4
  %33 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %23, i32 0, i32 1
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 0
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 1
  %36 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 2
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 3
  store i32 1, i32* %34, align 4
  store i32 1, i32* %35, align 4
  store i32 2, i32* %36, align 4
  %38 = load i32, i32* %36, align 4
  %39 = load i32, i32* %35, align 4
  %40 = sub i32 %38, %39
  %41 = add i32 %40, 1
  store i32 %41, i32* %37, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %42 = getelementptr %array, %array* %a, i32 0, i32 2
  %43 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %42, i32 0, i32 0
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = sub i32 1, %45
  %47 = mul i32 1, %46
  %48 = add i32 0, %47
  %49 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = mul i32 1, %50
  %52 = getelementptr %array, %array* %a, i32 0, i32 0
  %53 = getelementptr [3 x i1], [3 x i1]* %52, i32 0, i32 0
  %54 = getelementptr inbounds i1, i1* %53, i32 %48
  store i1 true, i1* %54, align 1
  store i32 1, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %55 = load i32, i32* %i, align 4
  %56 = add i32 %55, 1
  %57 = icmp sle i32 %56, 3
  br i1 %57, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %58 = load i32, i32* %i, align 4
  %59 = add i32 %58, 1
  store i32 %59, i32* %i, align 4
  %60 = getelementptr %array, %array* %a, i32 0, i32 2
  %61 = load i32, i32* %i, align 4
  %62 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %60, i32 0, i32 0
  %63 = getelementptr %dimension_descriptor, %dimension_descriptor* %62, i32 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = sub i32 %61, %64
  %66 = mul i32 1, %65
  %67 = add i32 0, %66
  %68 = getelementptr %dimension_descriptor, %dimension_descriptor* %62, i32 0, i32 3
  %69 = load i32, i32* %68, align 4
  %70 = mul i32 1, %69
  %71 = getelementptr %array, %array* %a, i32 0, i32 0
  %72 = getelementptr [3 x i1], [3 x i1]* %71, i32 0, i32 0
  %73 = getelementptr inbounds i1, i1* %72, i32 %67
  %74 = getelementptr %array, %array* %a, i32 0, i32 2
  %75 = load i32, i32* %i, align 4
  %76 = sub i32 %75, 1
  %77 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %74, i32 0, i32 0
  %78 = getelementptr %dimension_descriptor, %dimension_descriptor* %77, i32 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = sub i32 %76, %79
  %81 = mul i32 1, %80
  %82 = add i32 0, %81
  %83 = getelementptr %dimension_descriptor, %dimension_descriptor* %77, i32 0, i32 3
  %84 = load i32, i32* %83, align 4
  %85 = mul i32 1, %84
  %86 = getelementptr %array, %array* %a, i32 0, i32 0
  %87 = getelementptr [3 x i1], [3 x i1]* %86, i32 0, i32 0
  %88 = getelementptr inbounds i1, i1* %87, i32 %82
  %89 = load i1, i1* %88, align 1
  %90 = xor i1 %89, true
  store i1 %90, i1* %73, align 1
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %91 = getelementptr %array, %array* %a, i32 0, i32 2
  %92 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %91, i32 0, i32 0
  %93 = getelementptr %dimension_descriptor, %dimension_descriptor* %92, i32 0, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = sub i32 1, %94
  %96 = mul i32 1, %95
  %97 = add i32 0, %96
  %98 = getelementptr %dimension_descriptor, %dimension_descriptor* %92, i32 0, i32 3
  %99 = load i32, i32* %98, align 4
  %100 = mul i32 1, %99
  %101 = getelementptr %array, %array* %a, i32 0, i32 0
  %102 = getelementptr [3 x i1], [3 x i1]* %101, i32 0, i32 0
  %103 = getelementptr inbounds i1, i1* %102, i32 %97
  %104 = load i1, i1* %103, align 1
  %105 = xor i1 %104, true
  br i1 %105, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %iftmp = phi i32 [ 1, %then ], [ 2, %else ]
  %106 = getelementptr %array, %array* %a, i32 0, i32 2
  %107 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %106, i32 0, i32 0
  %108 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = sub i32 2, %109
  %111 = mul i32 1, %110
  %112 = add i32 0, %111
  %113 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 3
  %114 = load i32, i32* %113, align 4
  %115 = mul i32 1, %114
  %116 = getelementptr %array, %array* %a, i32 0, i32 0
  %117 = getelementptr [3 x i1], [3 x i1]* %116, i32 0, i32 0
  %118 = getelementptr inbounds i1, i1* %117, i32 %112
  %119 = load i1, i1* %118, align 1
  br i1 %119, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %iftmp4 = phi i32 [ 1, %then1 ], [ 2, %else2 ]
  %120 = getelementptr %array, %array* %a, i32 0, i32 2
  %121 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %120, i32 0, i32 0
  %122 = getelementptr %dimension_descriptor, %dimension_descriptor* %121, i32 0, i32 1
  %123 = load i32, i32* %122, align 4
  %124 = sub i32 3, %123
  %125 = mul i32 1, %124
  %126 = add i32 0, %125
  %127 = getelementptr %dimension_descriptor, %dimension_descriptor* %121, i32 0, i32 3
  %128 = load i32, i32* %127, align 4
  %129 = mul i32 1, %128
  %130 = getelementptr %array, %array* %a, i32 0, i32 0
  %131 = getelementptr [3 x i1], [3 x i1]* %130, i32 0, i32 0
  %132 = getelementptr inbounds i1, i1* %131, i32 %126
  %133 = load i1, i1* %132, align 1
  %134 = xor i1 %133, true
  br i1 %134, label %then5, label %else6

then5:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont7

else6:                                            ; preds = %ifcont3
  br label %ifcont7

ifcont7:                                          ; preds = %else6, %then5
  %iftmp8 = phi i32 [ 1, %then5 ], [ 2, %else6 ]
  %135 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %136 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %135, i32 0, i32 0
  %137 = getelementptr %dimension_descriptor, %dimension_descriptor* %136, i32 0, i32 1
  %138 = load i32, i32* %137, align 4
  %139 = sub i32 1, %138
  %140 = mul i32 1, %139
  %141 = add i32 0, %140
  %142 = getelementptr %dimension_descriptor, %dimension_descriptor* %136, i32 0, i32 3
  %143 = load i32, i32* %142, align 4
  %144 = mul i32 1, %143
  %145 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %146 = getelementptr [4 x i1], [4 x i1]* %145, i32 0, i32 0
  %147 = getelementptr inbounds i1, i1* %146, i32 %141
  store i1 false, i1* %147, align 1
  store i32 11, i32* %i, align 4
  br label %loop.head9

loop.head9:                                       ; preds = %loop.body10, %ifcont7
  %148 = load i32, i32* %i, align 4
  %149 = add i32 %148, 1
  %150 = icmp sle i32 %149, 14
  br i1 %150, label %loop.body10, label %loop.end11

loop.body10:                                      ; preds = %loop.head9
  %151 = load i32, i32* %i, align 4
  %152 = add i32 %151, 1
  store i32 %152, i32* %i, align 4
  %153 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %154 = load i32, i32* %i, align 4
  %155 = sub i32 %154, 10
  %156 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %153, i32 0, i32 0
  %157 = getelementptr %dimension_descriptor, %dimension_descriptor* %156, i32 0, i32 1
  %158 = load i32, i32* %157, align 4
  %159 = sub i32 %155, %158
  %160 = mul i32 1, %159
  %161 = add i32 0, %160
  %162 = getelementptr %dimension_descriptor, %dimension_descriptor* %156, i32 0, i32 3
  %163 = load i32, i32* %162, align 4
  %164 = mul i32 1, %163
  %165 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %166 = getelementptr [4 x i1], [4 x i1]* %165, i32 0, i32 0
  %167 = getelementptr inbounds i1, i1* %166, i32 %161
  %168 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %169 = load i32, i32* %i, align 4
  %170 = sub i32 %169, 10
  %171 = sub i32 %170, 1
  %172 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %168, i32 0, i32 0
  %173 = getelementptr %dimension_descriptor, %dimension_descriptor* %172, i32 0, i32 1
  %174 = load i32, i32* %173, align 4
  %175 = sub i32 %171, %174
  %176 = mul i32 1, %175
  %177 = add i32 0, %176
  %178 = getelementptr %dimension_descriptor, %dimension_descriptor* %172, i32 0, i32 3
  %179 = load i32, i32* %178, align 4
  %180 = mul i32 1, %179
  %181 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %182 = getelementptr [4 x i1], [4 x i1]* %181, i32 0, i32 0
  %183 = getelementptr inbounds i1, i1* %182, i32 %177
  %184 = load i1, i1* %183, align 1
  %185 = xor i1 %184, true
  store i1 %185, i1* %167, align 1
  br label %loop.head9

loop.end11:                                       ; preds = %loop.head9
  %186 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %187 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %186, i32 0, i32 0
  %188 = getelementptr %dimension_descriptor, %dimension_descriptor* %187, i32 0, i32 1
  %189 = load i32, i32* %188, align 4
  %190 = sub i32 1, %189
  %191 = mul i32 1, %190
  %192 = add i32 0, %191
  %193 = getelementptr %dimension_descriptor, %dimension_descriptor* %187, i32 0, i32 3
  %194 = load i32, i32* %193, align 4
  %195 = mul i32 1, %194
  %196 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %197 = getelementptr [4 x i1], [4 x i1]* %196, i32 0, i32 0
  %198 = getelementptr inbounds i1, i1* %197, i32 %192
  %199 = load i1, i1* %198, align 1
  br i1 %199, label %then12, label %else13

then12:                                           ; preds = %loop.end11
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont14

else13:                                           ; preds = %loop.end11
  br label %ifcont14

ifcont14:                                         ; preds = %else13, %then12
  %iftmp15 = phi i32 [ 1, %then12 ], [ 2, %else13 ]
  %200 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %201 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %200, i32 0, i32 0
  %202 = getelementptr %dimension_descriptor, %dimension_descriptor* %201, i32 0, i32 1
  %203 = load i32, i32* %202, align 4
  %204 = sub i32 2, %203
  %205 = mul i32 1, %204
  %206 = add i32 0, %205
  %207 = getelementptr %dimension_descriptor, %dimension_descriptor* %201, i32 0, i32 3
  %208 = load i32, i32* %207, align 4
  %209 = mul i32 1, %208
  %210 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %211 = getelementptr [4 x i1], [4 x i1]* %210, i32 0, i32 0
  %212 = getelementptr inbounds i1, i1* %211, i32 %206
  %213 = load i1, i1* %212, align 1
  %214 = xor i1 %213, true
  br i1 %214, label %then16, label %else17

then16:                                           ; preds = %ifcont14
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont14
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %iftmp19 = phi i32 [ 1, %then16 ], [ 2, %else17 ]
  %215 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %216 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %215, i32 0, i32 0
  %217 = getelementptr %dimension_descriptor, %dimension_descriptor* %216, i32 0, i32 1
  %218 = load i32, i32* %217, align 4
  %219 = sub i32 3, %218
  %220 = mul i32 1, %219
  %221 = add i32 0, %220
  %222 = getelementptr %dimension_descriptor, %dimension_descriptor* %216, i32 0, i32 3
  %223 = load i32, i32* %222, align 4
  %224 = mul i32 1, %223
  %225 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %226 = getelementptr [4 x i1], [4 x i1]* %225, i32 0, i32 0
  %227 = getelementptr inbounds i1, i1* %226, i32 %221
  %228 = load i1, i1* %227, align 1
  br i1 %228, label %then20, label %else21

then20:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont22

else21:                                           ; preds = %ifcont18
  br label %ifcont22

ifcont22:                                         ; preds = %else21, %then20
  %iftmp23 = phi i32 [ 1, %then20 ], [ 2, %else21 ]
  %229 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %230 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %229, i32 0, i32 0
  %231 = getelementptr %dimension_descriptor, %dimension_descriptor* %230, i32 0, i32 1
  %232 = load i32, i32* %231, align 4
  %233 = sub i32 4, %232
  %234 = mul i32 1, %233
  %235 = add i32 0, %234
  %236 = getelementptr %dimension_descriptor, %dimension_descriptor* %230, i32 0, i32 3
  %237 = load i32, i32* %236, align 4
  %238 = mul i32 1, %237
  %239 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %240 = getelementptr [4 x i1], [4 x i1]* %239, i32 0, i32 0
  %241 = getelementptr inbounds i1, i1* %240, i32 %235
  %242 = load i1, i1* %241, align 1
  %243 = xor i1 %242, true
  br i1 %243, label %then24, label %else25

then24:                                           ; preds = %ifcont22
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont26

else25:                                           ; preds = %ifcont22
  br label %ifcont26

ifcont26:                                         ; preds = %else25, %then24
  %iftmp27 = phi i32 [ 1, %then24 ], [ 2, %else25 ]
  store i32 0, i32* %i, align 4
  br label %loop.head28

loop.head28:                                      ; preds = %loop.body29, %ifcont26
  %244 = load i32, i32* %i, align 4
  %245 = add i32 %244, 1
  %246 = icmp sle i32 %245, 3
  br i1 %246, label %loop.body29, label %loop.end30

loop.body29:                                      ; preds = %loop.head28
  %247 = load i32, i32* %i, align 4
  %248 = add i32 %247, 1
  store i32 %248, i32* %i, align 4
  %249 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %250 = load i32, i32* %i, align 4
  %251 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %249, i32 0, i32 0
  %252 = getelementptr %dimension_descriptor, %dimension_descriptor* %251, i32 0, i32 1
  %253 = load i32, i32* %252, align 4
  %254 = sub i32 %250, %253
  %255 = mul i32 1, %254
  %256 = add i32 0, %255
  %257 = getelementptr %dimension_descriptor, %dimension_descriptor* %251, i32 0, i32 3
  %258 = load i32, i32* %257, align 4
  %259 = mul i32 1, %258
  %260 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %261 = getelementptr [4 x i1], [4 x i1]* %260, i32 0, i32 0
  %262 = getelementptr inbounds i1, i1* %261, i32 %256
  %263 = getelementptr %array, %array* %a, i32 0, i32 2
  %264 = load i32, i32* %i, align 4
  %265 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %263, i32 0, i32 0
  %266 = getelementptr %dimension_descriptor, %dimension_descriptor* %265, i32 0, i32 1
  %267 = load i32, i32* %266, align 4
  %268 = sub i32 %264, %267
  %269 = mul i32 1, %268
  %270 = add i32 0, %269
  %271 = getelementptr %dimension_descriptor, %dimension_descriptor* %265, i32 0, i32 3
  %272 = load i32, i32* %271, align 4
  %273 = mul i32 1, %272
  %274 = getelementptr %array, %array* %a, i32 0, i32 0
  %275 = getelementptr [3 x i1], [3 x i1]* %274, i32 0, i32 0
  %276 = getelementptr inbounds i1, i1* %275, i32 %270
  %277 = load i1, i1* %276, align 1
  %278 = and i1 %277, false
  store i1 %278, i1* %262, align 1
  br label %loop.head28

loop.end30:                                       ; preds = %loop.head28
  %279 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %280 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %279, i32 0, i32 0
  %281 = getelementptr %dimension_descriptor, %dimension_descriptor* %280, i32 0, i32 1
  %282 = load i32, i32* %281, align 4
  %283 = sub i32 1, %282
  %284 = mul i32 1, %283
  %285 = add i32 0, %284
  %286 = getelementptr %dimension_descriptor, %dimension_descriptor* %280, i32 0, i32 3
  %287 = load i32, i32* %286, align 4
  %288 = mul i32 1, %287
  %289 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %290 = getelementptr [4 x i1], [4 x i1]* %289, i32 0, i32 0
  %291 = getelementptr inbounds i1, i1* %290, i32 %285
  %292 = load i1, i1* %291, align 1
  br i1 %292, label %then31, label %else32

then31:                                           ; preds = %loop.end30
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %loop.end30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %iftmp34 = phi i32 [ 1, %then31 ], [ 2, %else32 ]
  %293 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %294 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %293, i32 0, i32 0
  %295 = getelementptr %dimension_descriptor, %dimension_descriptor* %294, i32 0, i32 1
  %296 = load i32, i32* %295, align 4
  %297 = sub i32 2, %296
  %298 = mul i32 1, %297
  %299 = add i32 0, %298
  %300 = getelementptr %dimension_descriptor, %dimension_descriptor* %294, i32 0, i32 3
  %301 = load i32, i32* %300, align 4
  %302 = mul i32 1, %301
  %303 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %304 = getelementptr [4 x i1], [4 x i1]* %303, i32 0, i32 0
  %305 = getelementptr inbounds i1, i1* %304, i32 %299
  %306 = load i1, i1* %305, align 1
  br i1 %306, label %then35, label %else36

then35:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont37

else36:                                           ; preds = %ifcont33
  br label %ifcont37

ifcont37:                                         ; preds = %else36, %then35
  %iftmp38 = phi i32 [ 1, %then35 ], [ 2, %else36 ]
  %307 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %308 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %307, i32 0, i32 0
  %309 = getelementptr %dimension_descriptor, %dimension_descriptor* %308, i32 0, i32 1
  %310 = load i32, i32* %309, align 4
  %311 = sub i32 3, %310
  %312 = mul i32 1, %311
  %313 = add i32 0, %312
  %314 = getelementptr %dimension_descriptor, %dimension_descriptor* %308, i32 0, i32 3
  %315 = load i32, i32* %314, align 4
  %316 = mul i32 1, %315
  %317 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %318 = getelementptr [4 x i1], [4 x i1]* %317, i32 0, i32 0
  %319 = getelementptr inbounds i1, i1* %318, i32 %313
  %320 = load i1, i1* %319, align 1
  br i1 %320, label %then39, label %else40

then39:                                           ; preds = %ifcont37
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont41

else40:                                           ; preds = %ifcont37
  br label %ifcont41

ifcont41:                                         ; preds = %else40, %then39
  %iftmp42 = phi i32 [ 1, %then39 ], [ 2, %else40 ]
  %321 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %322 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %321, i32 0, i32 0
  %323 = getelementptr %dimension_descriptor, %dimension_descriptor* %322, i32 0, i32 1
  %324 = load i32, i32* %323, align 4
  %325 = sub i32 4, %324
  %326 = mul i32 1, %325
  %327 = add i32 0, %326
  %328 = getelementptr %dimension_descriptor, %dimension_descriptor* %322, i32 0, i32 3
  %329 = load i32, i32* %328, align 4
  %330 = mul i32 1, %329
  %331 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %332 = getelementptr [4 x i1], [4 x i1]* %331, i32 0, i32 0
  %333 = getelementptr inbounds i1, i1* %332, i32 %327
  %334 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %335 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %334, i32 0, i32 0
  %336 = getelementptr %dimension_descriptor, %dimension_descriptor* %335, i32 0, i32 1
  %337 = load i32, i32* %336, align 4
  %338 = sub i32 1, %337
  %339 = mul i32 1, %338
  %340 = add i32 0, %339
  %341 = getelementptr %dimension_descriptor, %dimension_descriptor* %335, i32 0, i32 3
  %342 = load i32, i32* %341, align 4
  %343 = mul i32 1, %342
  %344 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %345 = getelementptr [4 x i1], [4 x i1]* %344, i32 0, i32 0
  %346 = getelementptr inbounds i1, i1* %345, i32 %340
  %347 = load i1, i1* %346, align 1
  %348 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %349 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %348, i32 0, i32 0
  %350 = getelementptr %dimension_descriptor, %dimension_descriptor* %349, i32 0, i32 1
  %351 = load i32, i32* %350, align 4
  %352 = sub i32 2, %351
  %353 = mul i32 1, %352
  %354 = add i32 0, %353
  %355 = getelementptr %dimension_descriptor, %dimension_descriptor* %349, i32 0, i32 3
  %356 = load i32, i32* %355, align 4
  %357 = mul i32 1, %356
  %358 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %359 = getelementptr [4 x i1], [4 x i1]* %358, i32 0, i32 0
  %360 = getelementptr inbounds i1, i1* %359, i32 %354
  %361 = load i1, i1* %360, align 1
  %362 = or i1 %347, %361
  %363 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %364 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %363, i32 0, i32 0
  %365 = getelementptr %dimension_descriptor, %dimension_descriptor* %364, i32 0, i32 1
  %366 = load i32, i32* %365, align 4
  %367 = sub i32 3, %366
  %368 = mul i32 1, %367
  %369 = add i32 0, %368
  %370 = getelementptr %dimension_descriptor, %dimension_descriptor* %364, i32 0, i32 3
  %371 = load i32, i32* %370, align 4
  %372 = mul i32 1, %371
  %373 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %374 = getelementptr [4 x i1], [4 x i1]* %373, i32 0, i32 0
  %375 = getelementptr inbounds i1, i1* %374, i32 %369
  %376 = load i1, i1* %375, align 1
  %377 = or i1 %362, %376
  %378 = getelementptr %array, %array* %a, i32 0, i32 2
  %379 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %378, i32 0, i32 0
  %380 = getelementptr %dimension_descriptor, %dimension_descriptor* %379, i32 0, i32 1
  %381 = load i32, i32* %380, align 4
  %382 = sub i32 1, %381
  %383 = mul i32 1, %382
  %384 = add i32 0, %383
  %385 = getelementptr %dimension_descriptor, %dimension_descriptor* %379, i32 0, i32 3
  %386 = load i32, i32* %385, align 4
  %387 = mul i32 1, %386
  %388 = getelementptr %array, %array* %a, i32 0, i32 0
  %389 = getelementptr [3 x i1], [3 x i1]* %388, i32 0, i32 0
  %390 = getelementptr inbounds i1, i1* %389, i32 %384
  %391 = load i1, i1* %390, align 1
  %392 = or i1 %377, %391
  store i1 %392, i1* %333, align 1
  %393 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %394 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %393, i32 0, i32 0
  %395 = getelementptr %dimension_descriptor, %dimension_descriptor* %394, i32 0, i32 1
  %396 = load i32, i32* %395, align 4
  %397 = sub i32 4, %396
  %398 = mul i32 1, %397
  %399 = add i32 0, %398
  %400 = getelementptr %dimension_descriptor, %dimension_descriptor* %394, i32 0, i32 3
  %401 = load i32, i32* %400, align 4
  %402 = mul i32 1, %401
  %403 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %404 = getelementptr [4 x i1], [4 x i1]* %403, i32 0, i32 0
  %405 = getelementptr inbounds i1, i1* %404, i32 %399
  %406 = load i1, i1* %405, align 1
  %407 = xor i1 %406, true
  br i1 %407, label %then43, label %else44

then43:                                           ; preds = %ifcont41
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont45

else44:                                           ; preds = %ifcont41
  br label %ifcont45

ifcont45:                                         ; preds = %else44, %then43
  %iftmp46 = phi i32 [ 1, %then43 ], [ 2, %else44 ]
  %408 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %409 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %408, i32 0, i32 0
  %410 = getelementptr %dimension_descriptor, %dimension_descriptor* %409, i32 0, i32 1
  %411 = load i32, i32* %410, align 4
  %412 = sub i32 4, %411
  %413 = mul i32 1, %412
  %414 = add i32 0, %413
  %415 = getelementptr %dimension_descriptor, %dimension_descriptor* %409, i32 0, i32 3
  %416 = load i32, i32* %415, align 4
  %417 = mul i32 1, %416
  %418 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %419 = getelementptr [4 x i1], [4 x i1]* %418, i32 0, i32 0
  %420 = getelementptr inbounds i1, i1* %419, i32 %414
  %421 = getelementptr %array, %array* %a, i32 0, i32 2
  %422 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %421, i32 0, i32 0
  %423 = getelementptr %dimension_descriptor, %dimension_descriptor* %422, i32 0, i32 1
  %424 = load i32, i32* %423, align 4
  %425 = sub i32 1, %424
  %426 = mul i32 1, %425
  %427 = add i32 0, %426
  %428 = getelementptr %dimension_descriptor, %dimension_descriptor* %422, i32 0, i32 3
  %429 = load i32, i32* %428, align 4
  %430 = mul i32 1, %429
  %431 = getelementptr %array, %array* %a, i32 0, i32 0
  %432 = getelementptr [3 x i1], [3 x i1]* %431, i32 0, i32 0
  %433 = getelementptr inbounds i1, i1* %432, i32 %427
  %434 = load i1, i1* %433, align 1
  store i1 %434, i1* %420, align 1
  %435 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %436 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %435, i32 0, i32 0
  %437 = getelementptr %dimension_descriptor, %dimension_descriptor* %436, i32 0, i32 1
  %438 = load i32, i32* %437, align 4
  %439 = sub i32 4, %438
  %440 = mul i32 1, %439
  %441 = add i32 0, %440
  %442 = getelementptr %dimension_descriptor, %dimension_descriptor* %436, i32 0, i32 3
  %443 = load i32, i32* %442, align 4
  %444 = mul i32 1, %443
  %445 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %446 = getelementptr [4 x i1], [4 x i1]* %445, i32 0, i32 0
  %447 = getelementptr inbounds i1, i1* %446, i32 %441
  %448 = load i1, i1* %447, align 1
  %449 = xor i1 %448, true
  br i1 %449, label %then47, label %else48

then47:                                           ; preds = %ifcont45
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont49

else48:                                           ; preds = %ifcont45
  br label %ifcont49

ifcont49:                                         ; preds = %else48, %then47
  %iftmp50 = phi i32 [ 1, %then47 ], [ 2, %else48 ]
  store i32 0, i32* %i, align 4
  br label %loop.head51

loop.head51:                                      ; preds = %loop.end59, %ifcont49
  %450 = load i32, i32* %i, align 4
  %451 = add i32 %450, 1
  %452 = icmp sle i32 %451, 2
  br i1 %452, label %loop.body52, label %loop.end60

loop.body52:                                      ; preds = %loop.head51
  %453 = load i32, i32* %i, align 4
  %454 = add i32 %453, 1
  store i32 %454, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head53

loop.head53:                                      ; preds = %ifcont57, %loop.body52
  %455 = load i32, i32* %j, align 4
  %456 = add i32 %455, 1
  %457 = icmp sle i32 %456, 2
  br i1 %457, label %loop.body54, label %loop.end59

loop.body54:                                      ; preds = %loop.head53
  %458 = load i32, i32* %j, align 4
  %459 = add i32 %458, 1
  store i32 %459, i32* %j, align 4
  %460 = load i32, i32* %i, align 4
  %461 = load i32, i32* %j, align 4
  %462 = add i32 %460, %461
  %463 = load i32, i32* %i, align 4
  %464 = load i32, i32* %j, align 4
  %465 = add i32 %463, %464
  %466 = udiv i32 %465, 2
  %467 = mul i32 2, %466
  %468 = sub i32 %462, %467
  %469 = icmp eq i32 %468, 1
  br i1 %469, label %then55, label %else56

then55:                                           ; preds = %loop.body54
  %470 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %471 = load i32, i32* %i, align 4
  %472 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %470, i32 0, i32 0
  %473 = getelementptr %dimension_descriptor, %dimension_descriptor* %472, i32 0, i32 1
  %474 = load i32, i32* %473, align 4
  %475 = sub i32 %471, %474
  %476 = mul i32 1, %475
  %477 = add i32 0, %476
  %478 = getelementptr %dimension_descriptor, %dimension_descriptor* %472, i32 0, i32 3
  %479 = load i32, i32* %478, align 4
  %480 = mul i32 1, %479
  %481 = load i32, i32* %j, align 4
  %482 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %470, i32 0, i32 1
  %483 = getelementptr %dimension_descriptor, %dimension_descriptor* %482, i32 0, i32 1
  %484 = load i32, i32* %483, align 4
  %485 = sub i32 %481, %484
  %486 = mul i32 %480, %485
  %487 = add i32 %477, %486
  %488 = getelementptr %dimension_descriptor, %dimension_descriptor* %482, i32 0, i32 3
  %489 = load i32, i32* %488, align 4
  %490 = mul i32 %480, %489
  %491 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %492 = getelementptr [4 x i1], [4 x i1]* %491, i32 0, i32 0
  %493 = getelementptr inbounds i1, i1* %492, i32 %487
  store i1 true, i1* %493, align 1
  br label %ifcont57

else56:                                           ; preds = %loop.body54
  %494 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %495 = load i32, i32* %i, align 4
  %496 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %494, i32 0, i32 0
  %497 = getelementptr %dimension_descriptor, %dimension_descriptor* %496, i32 0, i32 1
  %498 = load i32, i32* %497, align 4
  %499 = sub i32 %495, %498
  %500 = mul i32 1, %499
  %501 = add i32 0, %500
  %502 = getelementptr %dimension_descriptor, %dimension_descriptor* %496, i32 0, i32 3
  %503 = load i32, i32* %502, align 4
  %504 = mul i32 1, %503
  %505 = load i32, i32* %j, align 4
  %506 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %494, i32 0, i32 1
  %507 = getelementptr %dimension_descriptor, %dimension_descriptor* %506, i32 0, i32 1
  %508 = load i32, i32* %507, align 4
  %509 = sub i32 %505, %508
  %510 = mul i32 %504, %509
  %511 = add i32 %501, %510
  %512 = getelementptr %dimension_descriptor, %dimension_descriptor* %506, i32 0, i32 3
  %513 = load i32, i32* %512, align 4
  %514 = mul i32 %504, %513
  %515 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %516 = getelementptr [4 x i1], [4 x i1]* %515, i32 0, i32 0
  %517 = getelementptr inbounds i1, i1* %516, i32 %511
  store i1 false, i1* %517, align 1
  br label %ifcont57

ifcont57:                                         ; preds = %else56, %then55
  %iftmp58 = phi i32 [ 1, %then55 ], [ 2, %else56 ]
  br label %loop.head53

loop.end59:                                       ; preds = %loop.head53
  br label %loop.head51

loop.end60:                                       ; preds = %loop.head51
  %518 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %519 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %518, i32 0, i32 0
  %520 = getelementptr %dimension_descriptor, %dimension_descriptor* %519, i32 0, i32 1
  %521 = load i32, i32* %520, align 4
  %522 = sub i32 1, %521
  %523 = mul i32 1, %522
  %524 = add i32 0, %523
  %525 = getelementptr %dimension_descriptor, %dimension_descriptor* %519, i32 0, i32 3
  %526 = load i32, i32* %525, align 4
  %527 = mul i32 1, %526
  %528 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %518, i32 0, i32 1
  %529 = getelementptr %dimension_descriptor, %dimension_descriptor* %528, i32 0, i32 1
  %530 = load i32, i32* %529, align 4
  %531 = sub i32 1, %530
  %532 = mul i32 %527, %531
  %533 = add i32 %524, %532
  %534 = getelementptr %dimension_descriptor, %dimension_descriptor* %528, i32 0, i32 3
  %535 = load i32, i32* %534, align 4
  %536 = mul i32 %527, %535
  %537 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %538 = getelementptr [4 x i1], [4 x i1]* %537, i32 0, i32 0
  %539 = getelementptr inbounds i1, i1* %538, i32 %533
  %540 = load i1, i1* %539, align 1
  br i1 %540, label %then61, label %else62

then61:                                           ; preds = %loop.end60
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @12, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont63

else62:                                           ; preds = %loop.end60
  br label %ifcont63

ifcont63:                                         ; preds = %else62, %then61
  %iftmp64 = phi i32 [ 1, %then61 ], [ 2, %else62 ]
  %541 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %542 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %541, i32 0, i32 0
  %543 = getelementptr %dimension_descriptor, %dimension_descriptor* %542, i32 0, i32 1
  %544 = load i32, i32* %543, align 4
  %545 = sub i32 1, %544
  %546 = mul i32 1, %545
  %547 = add i32 0, %546
  %548 = getelementptr %dimension_descriptor, %dimension_descriptor* %542, i32 0, i32 3
  %549 = load i32, i32* %548, align 4
  %550 = mul i32 1, %549
  %551 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %541, i32 0, i32 1
  %552 = getelementptr %dimension_descriptor, %dimension_descriptor* %551, i32 0, i32 1
  %553 = load i32, i32* %552, align 4
  %554 = sub i32 2, %553
  %555 = mul i32 %550, %554
  %556 = add i32 %547, %555
  %557 = getelementptr %dimension_descriptor, %dimension_descriptor* %551, i32 0, i32 3
  %558 = load i32, i32* %557, align 4
  %559 = mul i32 %550, %558
  %560 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %561 = getelementptr [4 x i1], [4 x i1]* %560, i32 0, i32 0
  %562 = getelementptr inbounds i1, i1* %561, i32 %556
  %563 = load i1, i1* %562, align 1
  %564 = xor i1 %563, true
  br i1 %564, label %then65, label %else66

then65:                                           ; preds = %ifcont63
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @13, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont67

else66:                                           ; preds = %ifcont63
  br label %ifcont67

ifcont67:                                         ; preds = %else66, %then65
  %iftmp68 = phi i32 [ 1, %then65 ], [ 2, %else66 ]
  %565 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %566 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %565, i32 0, i32 0
  %567 = getelementptr %dimension_descriptor, %dimension_descriptor* %566, i32 0, i32 1
  %568 = load i32, i32* %567, align 4
  %569 = sub i32 2, %568
  %570 = mul i32 1, %569
  %571 = add i32 0, %570
  %572 = getelementptr %dimension_descriptor, %dimension_descriptor* %566, i32 0, i32 3
  %573 = load i32, i32* %572, align 4
  %574 = mul i32 1, %573
  %575 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %565, i32 0, i32 1
  %576 = getelementptr %dimension_descriptor, %dimension_descriptor* %575, i32 0, i32 1
  %577 = load i32, i32* %576, align 4
  %578 = sub i32 1, %577
  %579 = mul i32 %574, %578
  %580 = add i32 %571, %579
  %581 = getelementptr %dimension_descriptor, %dimension_descriptor* %575, i32 0, i32 3
  %582 = load i32, i32* %581, align 4
  %583 = mul i32 %574, %582
  %584 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %585 = getelementptr [4 x i1], [4 x i1]* %584, i32 0, i32 0
  %586 = getelementptr inbounds i1, i1* %585, i32 %580
  %587 = load i1, i1* %586, align 1
  %588 = xor i1 %587, true
  br i1 %588, label %then69, label %else70

then69:                                           ; preds = %ifcont67
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @14, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont71

else70:                                           ; preds = %ifcont67
  br label %ifcont71

ifcont71:                                         ; preds = %else70, %then69
  %iftmp72 = phi i32 [ 1, %then69 ], [ 2, %else70 ]
  %589 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %590 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %589, i32 0, i32 0
  %591 = getelementptr %dimension_descriptor, %dimension_descriptor* %590, i32 0, i32 1
  %592 = load i32, i32* %591, align 4
  %593 = sub i32 2, %592
  %594 = mul i32 1, %593
  %595 = add i32 0, %594
  %596 = getelementptr %dimension_descriptor, %dimension_descriptor* %590, i32 0, i32 3
  %597 = load i32, i32* %596, align 4
  %598 = mul i32 1, %597
  %599 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %589, i32 0, i32 1
  %600 = getelementptr %dimension_descriptor, %dimension_descriptor* %599, i32 0, i32 1
  %601 = load i32, i32* %600, align 4
  %602 = sub i32 2, %601
  %603 = mul i32 %598, %602
  %604 = add i32 %595, %603
  %605 = getelementptr %dimension_descriptor, %dimension_descriptor* %599, i32 0, i32 3
  %606 = load i32, i32* %605, align 4
  %607 = mul i32 %598, %606
  %608 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %609 = getelementptr [4 x i1], [4 x i1]* %608, i32 0, i32 0
  %610 = getelementptr inbounds i1, i1* %609, i32 %604
  %611 = load i1, i1* %610, align 1
  br i1 %611, label %then73, label %else74

then73:                                           ; preds = %ifcont71
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @15, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont75

else74:                                           ; preds = %ifcont71
  br label %ifcont75

ifcont75:                                         ; preds = %else74, %then73
  %iftmp76 = phi i32 [ 1, %then73 ], [ 2, %else74 ]
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)

