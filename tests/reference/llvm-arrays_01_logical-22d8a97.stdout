; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { [3 x i1], i32, [1 x %dimension_descriptor] }
%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { [4 x i1], i32, [1 x %dimension_descriptor] }
%array.1 = type { [4 x i1], i32, [2 x %dimension_descriptor] }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@12 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@13 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@14 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@15 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main() {
.entry:
  %a = alloca %array, align 8
  %b = alloca %array.0, align 8
  %c = alloca %array.1, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %0 = getelementptr %array, %array* %a, i32 0, i32 2
  %1 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %0, i32 0, i32 0
  %2 = getelementptr %dimension_descriptor, %dimension_descriptor* %1, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = sub i32 1, %3
  %5 = mul i32 1, %4
  %6 = add i32 0, %5
  %7 = getelementptr %dimension_descriptor, %dimension_descriptor* %1, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = mul i32 1, %8
  %10 = getelementptr %array, %array* %a, i32 0, i32 0
  %11 = getelementptr [3 x i1], [3 x i1]* %10, i32 0, i32 %6
  store i1 true, i1* %11, align 1
  store i32 1, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %12 = load i32, i32* %i, align 4
  %13 = add i32 %12, 1
  %14 = icmp sle i32 %13, 3
  br i1 %14, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %15 = load i32, i32* %i, align 4
  %16 = add i32 %15, 1
  store i32 %16, i32* %i, align 4
  %17 = getelementptr %array, %array* %a, i32 0, i32 2
  %18 = load i32, i32* %i, align 4
  %19 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %17, i32 0, i32 0
  %20 = getelementptr %dimension_descriptor, %dimension_descriptor* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sub i32 %18, %21
  %23 = mul i32 1, %22
  %24 = add i32 0, %23
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %19, i32 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = mul i32 1, %26
  %28 = getelementptr %array, %array* %a, i32 0, i32 0
  %29 = getelementptr [3 x i1], [3 x i1]* %28, i32 0, i32 %24
  %30 = getelementptr %array, %array* %a, i32 0, i32 2
  %31 = load i32, i32* %i, align 4
  %32 = sub i32 %31, 1
  %33 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %30, i32 0, i32 0
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = sub i32 %32, %35
  %37 = mul i32 1, %36
  %38 = add i32 0, %37
  %39 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 3
  %40 = load i32, i32* %39, align 4
  %41 = mul i32 1, %40
  %42 = getelementptr %array, %array* %a, i32 0, i32 0
  %43 = getelementptr [3 x i1], [3 x i1]* %42, i32 0, i32 %38
  %44 = load i1, i1* %43, align 1
  %45 = xor i1 %44, true
  store i1 %45, i1* %29, align 1
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %46 = getelementptr %array, %array* %a, i32 0, i32 2
  %47 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %46, i32 0, i32 0
  %48 = getelementptr %dimension_descriptor, %dimension_descriptor* %47, i32 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = sub i32 1, %49
  %51 = mul i32 1, %50
  %52 = add i32 0, %51
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %47, i32 0, i32 3
  %54 = load i32, i32* %53, align 4
  %55 = mul i32 1, %54
  %56 = getelementptr %array, %array* %a, i32 0, i32 0
  %57 = getelementptr [3 x i1], [3 x i1]* %56, i32 0, i32 %52
  %58 = load i1, i1* %57, align 1
  %59 = xor i1 %58, true
  br i1 %59, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %iftmp = phi i32 [ 1, %then ], [ 2, %else ]
  %60 = getelementptr %array, %array* %a, i32 0, i32 2
  %61 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %60, i32 0, i32 0
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = sub i32 2, %63
  %65 = mul i32 1, %64
  %66 = add i32 0, %65
  %67 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 3
  %68 = load i32, i32* %67, align 4
  %69 = mul i32 1, %68
  %70 = getelementptr %array, %array* %a, i32 0, i32 0
  %71 = getelementptr [3 x i1], [3 x i1]* %70, i32 0, i32 %66
  %72 = load i1, i1* %71, align 1
  br i1 %72, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %iftmp4 = phi i32 [ 1, %then1 ], [ 2, %else2 ]
  %73 = getelementptr %array, %array* %a, i32 0, i32 2
  %74 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %73, i32 0, i32 0
  %75 = getelementptr %dimension_descriptor, %dimension_descriptor* %74, i32 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = sub i32 3, %76
  %78 = mul i32 1, %77
  %79 = add i32 0, %78
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %74, i32 0, i32 3
  %81 = load i32, i32* %80, align 4
  %82 = mul i32 1, %81
  %83 = getelementptr %array, %array* %a, i32 0, i32 0
  %84 = getelementptr [3 x i1], [3 x i1]* %83, i32 0, i32 %79
  %85 = load i1, i1* %84, align 1
  %86 = xor i1 %85, true
  br i1 %86, label %then5, label %else6

then5:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont7

else6:                                            ; preds = %ifcont3
  br label %ifcont7

ifcont7:                                          ; preds = %else6, %then5
  %iftmp8 = phi i32 [ 1, %then5 ], [ 2, %else6 ]
  %87 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %88 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %87, i32 0, i32 0
  %89 = getelementptr %dimension_descriptor, %dimension_descriptor* %88, i32 0, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = sub i32 1, %90
  %92 = mul i32 1, %91
  %93 = add i32 0, %92
  %94 = getelementptr %dimension_descriptor, %dimension_descriptor* %88, i32 0, i32 3
  %95 = load i32, i32* %94, align 4
  %96 = mul i32 1, %95
  %97 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %98 = getelementptr [4 x i1], [4 x i1]* %97, i32 0, i32 %93
  store i1 false, i1* %98, align 1
  store i32 11, i32* %i, align 4
  br label %loop.head9

loop.head9:                                       ; preds = %loop.body10, %ifcont7
  %99 = load i32, i32* %i, align 4
  %100 = add i32 %99, 1
  %101 = icmp sle i32 %100, 14
  br i1 %101, label %loop.body10, label %loop.end11

loop.body10:                                      ; preds = %loop.head9
  %102 = load i32, i32* %i, align 4
  %103 = add i32 %102, 1
  store i32 %103, i32* %i, align 4
  %104 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %105 = load i32, i32* %i, align 4
  %106 = sub i32 %105, 10
  %107 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %104, i32 0, i32 0
  %108 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = sub i32 %106, %109
  %111 = mul i32 1, %110
  %112 = add i32 0, %111
  %113 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 3
  %114 = load i32, i32* %113, align 4
  %115 = mul i32 1, %114
  %116 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %117 = getelementptr [4 x i1], [4 x i1]* %116, i32 0, i32 %112
  %118 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %119 = load i32, i32* %i, align 4
  %120 = sub i32 %119, 10
  %121 = sub i32 %120, 1
  %122 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %118, i32 0, i32 0
  %123 = getelementptr %dimension_descriptor, %dimension_descriptor* %122, i32 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = sub i32 %121, %124
  %126 = mul i32 1, %125
  %127 = add i32 0, %126
  %128 = getelementptr %dimension_descriptor, %dimension_descriptor* %122, i32 0, i32 3
  %129 = load i32, i32* %128, align 4
  %130 = mul i32 1, %129
  %131 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %132 = getelementptr [4 x i1], [4 x i1]* %131, i32 0, i32 %127
  %133 = load i1, i1* %132, align 1
  %134 = xor i1 %133, true
  store i1 %134, i1* %117, align 1
  br label %loop.head9

loop.end11:                                       ; preds = %loop.head9
  %135 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %136 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %135, i32 0, i32 0
  %137 = getelementptr %dimension_descriptor, %dimension_descriptor* %136, i32 0, i32 1
  %138 = load i32, i32* %137, align 4
  %139 = sub i32 1, %138
  %140 = mul i32 1, %139
  %141 = add i32 0, %140
  %142 = getelementptr %dimension_descriptor, %dimension_descriptor* %136, i32 0, i32 3
  %143 = load i32, i32* %142, align 4
  %144 = mul i32 1, %143
  %145 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %146 = getelementptr [4 x i1], [4 x i1]* %145, i32 0, i32 %141
  %147 = load i1, i1* %146, align 1
  br i1 %147, label %then12, label %else13

then12:                                           ; preds = %loop.end11
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont14

else13:                                           ; preds = %loop.end11
  br label %ifcont14

ifcont14:                                         ; preds = %else13, %then12
  %iftmp15 = phi i32 [ 1, %then12 ], [ 2, %else13 ]
  %148 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %149 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %148, i32 0, i32 0
  %150 = getelementptr %dimension_descriptor, %dimension_descriptor* %149, i32 0, i32 1
  %151 = load i32, i32* %150, align 4
  %152 = sub i32 2, %151
  %153 = mul i32 1, %152
  %154 = add i32 0, %153
  %155 = getelementptr %dimension_descriptor, %dimension_descriptor* %149, i32 0, i32 3
  %156 = load i32, i32* %155, align 4
  %157 = mul i32 1, %156
  %158 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %159 = getelementptr [4 x i1], [4 x i1]* %158, i32 0, i32 %154
  %160 = load i1, i1* %159, align 1
  %161 = xor i1 %160, true
  br i1 %161, label %then16, label %else17

then16:                                           ; preds = %ifcont14
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont14
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %iftmp19 = phi i32 [ 1, %then16 ], [ 2, %else17 ]
  %162 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %163 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %162, i32 0, i32 0
  %164 = getelementptr %dimension_descriptor, %dimension_descriptor* %163, i32 0, i32 1
  %165 = load i32, i32* %164, align 4
  %166 = sub i32 3, %165
  %167 = mul i32 1, %166
  %168 = add i32 0, %167
  %169 = getelementptr %dimension_descriptor, %dimension_descriptor* %163, i32 0, i32 3
  %170 = load i32, i32* %169, align 4
  %171 = mul i32 1, %170
  %172 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %173 = getelementptr [4 x i1], [4 x i1]* %172, i32 0, i32 %168
  %174 = load i1, i1* %173, align 1
  br i1 %174, label %then20, label %else21

then20:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont22

else21:                                           ; preds = %ifcont18
  br label %ifcont22

ifcont22:                                         ; preds = %else21, %then20
  %iftmp23 = phi i32 [ 1, %then20 ], [ 2, %else21 ]
  %175 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %176 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %175, i32 0, i32 0
  %177 = getelementptr %dimension_descriptor, %dimension_descriptor* %176, i32 0, i32 1
  %178 = load i32, i32* %177, align 4
  %179 = sub i32 4, %178
  %180 = mul i32 1, %179
  %181 = add i32 0, %180
  %182 = getelementptr %dimension_descriptor, %dimension_descriptor* %176, i32 0, i32 3
  %183 = load i32, i32* %182, align 4
  %184 = mul i32 1, %183
  %185 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %186 = getelementptr [4 x i1], [4 x i1]* %185, i32 0, i32 %181
  %187 = load i1, i1* %186, align 1
  %188 = xor i1 %187, true
  br i1 %188, label %then24, label %else25

then24:                                           ; preds = %ifcont22
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont26

else25:                                           ; preds = %ifcont22
  br label %ifcont26

ifcont26:                                         ; preds = %else25, %then24
  %iftmp27 = phi i32 [ 1, %then24 ], [ 2, %else25 ]
  store i32 0, i32* %i, align 4
  br label %loop.head28

loop.head28:                                      ; preds = %loop.body29, %ifcont26
  %189 = load i32, i32* %i, align 4
  %190 = add i32 %189, 1
  %191 = icmp sle i32 %190, 3
  br i1 %191, label %loop.body29, label %loop.end30

loop.body29:                                      ; preds = %loop.head28
  %192 = load i32, i32* %i, align 4
  %193 = add i32 %192, 1
  store i32 %193, i32* %i, align 4
  %194 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %195 = load i32, i32* %i, align 4
  %196 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %194, i32 0, i32 0
  %197 = getelementptr %dimension_descriptor, %dimension_descriptor* %196, i32 0, i32 1
  %198 = load i32, i32* %197, align 4
  %199 = sub i32 %195, %198
  %200 = mul i32 1, %199
  %201 = add i32 0, %200
  %202 = getelementptr %dimension_descriptor, %dimension_descriptor* %196, i32 0, i32 3
  %203 = load i32, i32* %202, align 4
  %204 = mul i32 1, %203
  %205 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %206 = getelementptr [4 x i1], [4 x i1]* %205, i32 0, i32 %201
  %207 = getelementptr %array, %array* %a, i32 0, i32 2
  %208 = load i32, i32* %i, align 4
  %209 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %207, i32 0, i32 0
  %210 = getelementptr %dimension_descriptor, %dimension_descriptor* %209, i32 0, i32 1
  %211 = load i32, i32* %210, align 4
  %212 = sub i32 %208, %211
  %213 = mul i32 1, %212
  %214 = add i32 0, %213
  %215 = getelementptr %dimension_descriptor, %dimension_descriptor* %209, i32 0, i32 3
  %216 = load i32, i32* %215, align 4
  %217 = mul i32 1, %216
  %218 = getelementptr %array, %array* %a, i32 0, i32 0
  %219 = getelementptr [3 x i1], [3 x i1]* %218, i32 0, i32 %214
  %220 = load i1, i1* %219, align 1
  %221 = and i1 %220, false
  store i1 %221, i1* %206, align 1
  br label %loop.head28

loop.end30:                                       ; preds = %loop.head28
  %222 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %223 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %222, i32 0, i32 0
  %224 = getelementptr %dimension_descriptor, %dimension_descriptor* %223, i32 0, i32 1
  %225 = load i32, i32* %224, align 4
  %226 = sub i32 1, %225
  %227 = mul i32 1, %226
  %228 = add i32 0, %227
  %229 = getelementptr %dimension_descriptor, %dimension_descriptor* %223, i32 0, i32 3
  %230 = load i32, i32* %229, align 4
  %231 = mul i32 1, %230
  %232 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %233 = getelementptr [4 x i1], [4 x i1]* %232, i32 0, i32 %228
  %234 = load i1, i1* %233, align 1
  br i1 %234, label %then31, label %else32

then31:                                           ; preds = %loop.end30
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %loop.end30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %iftmp34 = phi i32 [ 1, %then31 ], [ 2, %else32 ]
  %235 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %236 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %235, i32 0, i32 0
  %237 = getelementptr %dimension_descriptor, %dimension_descriptor* %236, i32 0, i32 1
  %238 = load i32, i32* %237, align 4
  %239 = sub i32 2, %238
  %240 = mul i32 1, %239
  %241 = add i32 0, %240
  %242 = getelementptr %dimension_descriptor, %dimension_descriptor* %236, i32 0, i32 3
  %243 = load i32, i32* %242, align 4
  %244 = mul i32 1, %243
  %245 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %246 = getelementptr [4 x i1], [4 x i1]* %245, i32 0, i32 %241
  %247 = load i1, i1* %246, align 1
  br i1 %247, label %then35, label %else36

then35:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont37

else36:                                           ; preds = %ifcont33
  br label %ifcont37

ifcont37:                                         ; preds = %else36, %then35
  %iftmp38 = phi i32 [ 1, %then35 ], [ 2, %else36 ]
  %248 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %249 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %248, i32 0, i32 0
  %250 = getelementptr %dimension_descriptor, %dimension_descriptor* %249, i32 0, i32 1
  %251 = load i32, i32* %250, align 4
  %252 = sub i32 3, %251
  %253 = mul i32 1, %252
  %254 = add i32 0, %253
  %255 = getelementptr %dimension_descriptor, %dimension_descriptor* %249, i32 0, i32 3
  %256 = load i32, i32* %255, align 4
  %257 = mul i32 1, %256
  %258 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %259 = getelementptr [4 x i1], [4 x i1]* %258, i32 0, i32 %254
  %260 = load i1, i1* %259, align 1
  br i1 %260, label %then39, label %else40

then39:                                           ; preds = %ifcont37
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont41

else40:                                           ; preds = %ifcont37
  br label %ifcont41

ifcont41:                                         ; preds = %else40, %then39
  %iftmp42 = phi i32 [ 1, %then39 ], [ 2, %else40 ]
  %261 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %262 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %261, i32 0, i32 0
  %263 = getelementptr %dimension_descriptor, %dimension_descriptor* %262, i32 0, i32 1
  %264 = load i32, i32* %263, align 4
  %265 = sub i32 4, %264
  %266 = mul i32 1, %265
  %267 = add i32 0, %266
  %268 = getelementptr %dimension_descriptor, %dimension_descriptor* %262, i32 0, i32 3
  %269 = load i32, i32* %268, align 4
  %270 = mul i32 1, %269
  %271 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %272 = getelementptr [4 x i1], [4 x i1]* %271, i32 0, i32 %267
  %273 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %274 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %273, i32 0, i32 0
  %275 = getelementptr %dimension_descriptor, %dimension_descriptor* %274, i32 0, i32 1
  %276 = load i32, i32* %275, align 4
  %277 = sub i32 1, %276
  %278 = mul i32 1, %277
  %279 = add i32 0, %278
  %280 = getelementptr %dimension_descriptor, %dimension_descriptor* %274, i32 0, i32 3
  %281 = load i32, i32* %280, align 4
  %282 = mul i32 1, %281
  %283 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %284 = getelementptr [4 x i1], [4 x i1]* %283, i32 0, i32 %279
  %285 = load i1, i1* %284, align 1
  %286 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %287 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %286, i32 0, i32 0
  %288 = getelementptr %dimension_descriptor, %dimension_descriptor* %287, i32 0, i32 1
  %289 = load i32, i32* %288, align 4
  %290 = sub i32 2, %289
  %291 = mul i32 1, %290
  %292 = add i32 0, %291
  %293 = getelementptr %dimension_descriptor, %dimension_descriptor* %287, i32 0, i32 3
  %294 = load i32, i32* %293, align 4
  %295 = mul i32 1, %294
  %296 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %297 = getelementptr [4 x i1], [4 x i1]* %296, i32 0, i32 %292
  %298 = load i1, i1* %297, align 1
  %299 = or i1 %285, %298
  %300 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %301 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %300, i32 0, i32 0
  %302 = getelementptr %dimension_descriptor, %dimension_descriptor* %301, i32 0, i32 1
  %303 = load i32, i32* %302, align 4
  %304 = sub i32 3, %303
  %305 = mul i32 1, %304
  %306 = add i32 0, %305
  %307 = getelementptr %dimension_descriptor, %dimension_descriptor* %301, i32 0, i32 3
  %308 = load i32, i32* %307, align 4
  %309 = mul i32 1, %308
  %310 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %311 = getelementptr [4 x i1], [4 x i1]* %310, i32 0, i32 %306
  %312 = load i1, i1* %311, align 1
  %313 = or i1 %299, %312
  %314 = getelementptr %array, %array* %a, i32 0, i32 2
  %315 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %314, i32 0, i32 0
  %316 = getelementptr %dimension_descriptor, %dimension_descriptor* %315, i32 0, i32 1
  %317 = load i32, i32* %316, align 4
  %318 = sub i32 1, %317
  %319 = mul i32 1, %318
  %320 = add i32 0, %319
  %321 = getelementptr %dimension_descriptor, %dimension_descriptor* %315, i32 0, i32 3
  %322 = load i32, i32* %321, align 4
  %323 = mul i32 1, %322
  %324 = getelementptr %array, %array* %a, i32 0, i32 0
  %325 = getelementptr [3 x i1], [3 x i1]* %324, i32 0, i32 %320
  %326 = load i1, i1* %325, align 1
  %327 = or i1 %313, %326
  store i1 %327, i1* %272, align 1
  %328 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %329 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %328, i32 0, i32 0
  %330 = getelementptr %dimension_descriptor, %dimension_descriptor* %329, i32 0, i32 1
  %331 = load i32, i32* %330, align 4
  %332 = sub i32 4, %331
  %333 = mul i32 1, %332
  %334 = add i32 0, %333
  %335 = getelementptr %dimension_descriptor, %dimension_descriptor* %329, i32 0, i32 3
  %336 = load i32, i32* %335, align 4
  %337 = mul i32 1, %336
  %338 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %339 = getelementptr [4 x i1], [4 x i1]* %338, i32 0, i32 %334
  %340 = load i1, i1* %339, align 1
  %341 = xor i1 %340, true
  br i1 %341, label %then43, label %else44

then43:                                           ; preds = %ifcont41
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont45

else44:                                           ; preds = %ifcont41
  br label %ifcont45

ifcont45:                                         ; preds = %else44, %then43
  %iftmp46 = phi i32 [ 1, %then43 ], [ 2, %else44 ]
  %342 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %343 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %342, i32 0, i32 0
  %344 = getelementptr %dimension_descriptor, %dimension_descriptor* %343, i32 0, i32 1
  %345 = load i32, i32* %344, align 4
  %346 = sub i32 4, %345
  %347 = mul i32 1, %346
  %348 = add i32 0, %347
  %349 = getelementptr %dimension_descriptor, %dimension_descriptor* %343, i32 0, i32 3
  %350 = load i32, i32* %349, align 4
  %351 = mul i32 1, %350
  %352 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %353 = getelementptr [4 x i1], [4 x i1]* %352, i32 0, i32 %348
  %354 = getelementptr %array, %array* %a, i32 0, i32 2
  %355 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %354, i32 0, i32 0
  %356 = getelementptr %dimension_descriptor, %dimension_descriptor* %355, i32 0, i32 1
  %357 = load i32, i32* %356, align 4
  %358 = sub i32 1, %357
  %359 = mul i32 1, %358
  %360 = add i32 0, %359
  %361 = getelementptr %dimension_descriptor, %dimension_descriptor* %355, i32 0, i32 3
  %362 = load i32, i32* %361, align 4
  %363 = mul i32 1, %362
  %364 = getelementptr %array, %array* %a, i32 0, i32 0
  %365 = getelementptr [3 x i1], [3 x i1]* %364, i32 0, i32 %360
  %366 = load i1, i1* %365, align 1
  store i1 %366, i1* %353, align 1
  %367 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %368 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %367, i32 0, i32 0
  %369 = getelementptr %dimension_descriptor, %dimension_descriptor* %368, i32 0, i32 1
  %370 = load i32, i32* %369, align 4
  %371 = sub i32 4, %370
  %372 = mul i32 1, %371
  %373 = add i32 0, %372
  %374 = getelementptr %dimension_descriptor, %dimension_descriptor* %368, i32 0, i32 3
  %375 = load i32, i32* %374, align 4
  %376 = mul i32 1, %375
  %377 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %378 = getelementptr [4 x i1], [4 x i1]* %377, i32 0, i32 %373
  %379 = load i1, i1* %378, align 1
  %380 = xor i1 %379, true
  br i1 %380, label %then47, label %else48

then47:                                           ; preds = %ifcont45
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont49

else48:                                           ; preds = %ifcont45
  br label %ifcont49

ifcont49:                                         ; preds = %else48, %then47
  %iftmp50 = phi i32 [ 1, %then47 ], [ 2, %else48 ]
  store i32 0, i32* %i, align 4
  br label %loop.head51

loop.head51:                                      ; preds = %loop.end59, %ifcont49
  %381 = load i32, i32* %i, align 4
  %382 = add i32 %381, 1
  %383 = icmp sle i32 %382, 2
  br i1 %383, label %loop.body52, label %loop.end60

loop.body52:                                      ; preds = %loop.head51
  %384 = load i32, i32* %i, align 4
  %385 = add i32 %384, 1
  store i32 %385, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head53

loop.head53:                                      ; preds = %ifcont57, %loop.body52
  %386 = load i32, i32* %j, align 4
  %387 = add i32 %386, 1
  %388 = icmp sle i32 %387, 2
  br i1 %388, label %loop.body54, label %loop.end59

loop.body54:                                      ; preds = %loop.head53
  %389 = load i32, i32* %j, align 4
  %390 = add i32 %389, 1
  store i32 %390, i32* %j, align 4
  %391 = load i32, i32* %i, align 4
  %392 = load i32, i32* %j, align 4
  %393 = add i32 %391, %392
  %394 = load i32, i32* %i, align 4
  %395 = load i32, i32* %j, align 4
  %396 = add i32 %394, %395
  %397 = udiv i32 %396, 2
  %398 = mul i32 2, %397
  %399 = sub i32 %393, %398
  %400 = icmp eq i32 %399, 1
  br i1 %400, label %then55, label %else56

then55:                                           ; preds = %loop.body54
  %401 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %402 = load i32, i32* %i, align 4
  %403 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %401, i32 0, i32 0
  %404 = getelementptr %dimension_descriptor, %dimension_descriptor* %403, i32 0, i32 1
  %405 = load i32, i32* %404, align 4
  %406 = sub i32 %402, %405
  %407 = mul i32 1, %406
  %408 = add i32 0, %407
  %409 = getelementptr %dimension_descriptor, %dimension_descriptor* %403, i32 0, i32 3
  %410 = load i32, i32* %409, align 4
  %411 = mul i32 1, %410
  %412 = load i32, i32* %j, align 4
  %413 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %401, i32 0, i32 1
  %414 = getelementptr %dimension_descriptor, %dimension_descriptor* %413, i32 0, i32 1
  %415 = load i32, i32* %414, align 4
  %416 = sub i32 %412, %415
  %417 = mul i32 %411, %416
  %418 = add i32 %408, %417
  %419 = getelementptr %dimension_descriptor, %dimension_descriptor* %413, i32 0, i32 3
  %420 = load i32, i32* %419, align 4
  %421 = mul i32 %411, %420
  %422 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %423 = getelementptr [4 x i1], [4 x i1]* %422, i32 0, i32 %418
  store i1 true, i1* %423, align 1
  br label %ifcont57

else56:                                           ; preds = %loop.body54
  %424 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %425 = load i32, i32* %i, align 4
  %426 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %424, i32 0, i32 0
  %427 = getelementptr %dimension_descriptor, %dimension_descriptor* %426, i32 0, i32 1
  %428 = load i32, i32* %427, align 4
  %429 = sub i32 %425, %428
  %430 = mul i32 1, %429
  %431 = add i32 0, %430
  %432 = getelementptr %dimension_descriptor, %dimension_descriptor* %426, i32 0, i32 3
  %433 = load i32, i32* %432, align 4
  %434 = mul i32 1, %433
  %435 = load i32, i32* %j, align 4
  %436 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %424, i32 0, i32 1
  %437 = getelementptr %dimension_descriptor, %dimension_descriptor* %436, i32 0, i32 1
  %438 = load i32, i32* %437, align 4
  %439 = sub i32 %435, %438
  %440 = mul i32 %434, %439
  %441 = add i32 %431, %440
  %442 = getelementptr %dimension_descriptor, %dimension_descriptor* %436, i32 0, i32 3
  %443 = load i32, i32* %442, align 4
  %444 = mul i32 %434, %443
  %445 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %446 = getelementptr [4 x i1], [4 x i1]* %445, i32 0, i32 %441
  store i1 false, i1* %446, align 1
  br label %ifcont57

ifcont57:                                         ; preds = %else56, %then55
  %iftmp58 = phi i32 [ 1, %then55 ], [ 2, %else56 ]
  br label %loop.head53

loop.end59:                                       ; preds = %loop.head53
  br label %loop.head51

loop.end60:                                       ; preds = %loop.head51
  %447 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %448 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %447, i32 0, i32 0
  %449 = getelementptr %dimension_descriptor, %dimension_descriptor* %448, i32 0, i32 1
  %450 = load i32, i32* %449, align 4
  %451 = sub i32 1, %450
  %452 = mul i32 1, %451
  %453 = add i32 0, %452
  %454 = getelementptr %dimension_descriptor, %dimension_descriptor* %448, i32 0, i32 3
  %455 = load i32, i32* %454, align 4
  %456 = mul i32 1, %455
  %457 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %447, i32 0, i32 1
  %458 = getelementptr %dimension_descriptor, %dimension_descriptor* %457, i32 0, i32 1
  %459 = load i32, i32* %458, align 4
  %460 = sub i32 1, %459
  %461 = mul i32 %456, %460
  %462 = add i32 %453, %461
  %463 = getelementptr %dimension_descriptor, %dimension_descriptor* %457, i32 0, i32 3
  %464 = load i32, i32* %463, align 4
  %465 = mul i32 %456, %464
  %466 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %467 = getelementptr [4 x i1], [4 x i1]* %466, i32 0, i32 %462
  %468 = load i1, i1* %467, align 1
  br i1 %468, label %then61, label %else62

then61:                                           ; preds = %loop.end60
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @12, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont63

else62:                                           ; preds = %loop.end60
  br label %ifcont63

ifcont63:                                         ; preds = %else62, %then61
  %iftmp64 = phi i32 [ 1, %then61 ], [ 2, %else62 ]
  %469 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %470 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %469, i32 0, i32 0
  %471 = getelementptr %dimension_descriptor, %dimension_descriptor* %470, i32 0, i32 1
  %472 = load i32, i32* %471, align 4
  %473 = sub i32 1, %472
  %474 = mul i32 1, %473
  %475 = add i32 0, %474
  %476 = getelementptr %dimension_descriptor, %dimension_descriptor* %470, i32 0, i32 3
  %477 = load i32, i32* %476, align 4
  %478 = mul i32 1, %477
  %479 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %469, i32 0, i32 1
  %480 = getelementptr %dimension_descriptor, %dimension_descriptor* %479, i32 0, i32 1
  %481 = load i32, i32* %480, align 4
  %482 = sub i32 2, %481
  %483 = mul i32 %478, %482
  %484 = add i32 %475, %483
  %485 = getelementptr %dimension_descriptor, %dimension_descriptor* %479, i32 0, i32 3
  %486 = load i32, i32* %485, align 4
  %487 = mul i32 %478, %486
  %488 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %489 = getelementptr [4 x i1], [4 x i1]* %488, i32 0, i32 %484
  %490 = load i1, i1* %489, align 1
  %491 = xor i1 %490, true
  br i1 %491, label %then65, label %else66

then65:                                           ; preds = %ifcont63
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @13, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont67

else66:                                           ; preds = %ifcont63
  br label %ifcont67

ifcont67:                                         ; preds = %else66, %then65
  %iftmp68 = phi i32 [ 1, %then65 ], [ 2, %else66 ]
  %492 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %493 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %492, i32 0, i32 0
  %494 = getelementptr %dimension_descriptor, %dimension_descriptor* %493, i32 0, i32 1
  %495 = load i32, i32* %494, align 4
  %496 = sub i32 2, %495
  %497 = mul i32 1, %496
  %498 = add i32 0, %497
  %499 = getelementptr %dimension_descriptor, %dimension_descriptor* %493, i32 0, i32 3
  %500 = load i32, i32* %499, align 4
  %501 = mul i32 1, %500
  %502 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %492, i32 0, i32 1
  %503 = getelementptr %dimension_descriptor, %dimension_descriptor* %502, i32 0, i32 1
  %504 = load i32, i32* %503, align 4
  %505 = sub i32 1, %504
  %506 = mul i32 %501, %505
  %507 = add i32 %498, %506
  %508 = getelementptr %dimension_descriptor, %dimension_descriptor* %502, i32 0, i32 3
  %509 = load i32, i32* %508, align 4
  %510 = mul i32 %501, %509
  %511 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %512 = getelementptr [4 x i1], [4 x i1]* %511, i32 0, i32 %507
  %513 = load i1, i1* %512, align 1
  %514 = xor i1 %513, true
  br i1 %514, label %then69, label %else70

then69:                                           ; preds = %ifcont67
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @14, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont71

else70:                                           ; preds = %ifcont67
  br label %ifcont71

ifcont71:                                         ; preds = %else70, %then69
  %iftmp72 = phi i32 [ 1, %then69 ], [ 2, %else70 ]
  %515 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %516 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %515, i32 0, i32 0
  %517 = getelementptr %dimension_descriptor, %dimension_descriptor* %516, i32 0, i32 1
  %518 = load i32, i32* %517, align 4
  %519 = sub i32 2, %518
  %520 = mul i32 1, %519
  %521 = add i32 0, %520
  %522 = getelementptr %dimension_descriptor, %dimension_descriptor* %516, i32 0, i32 3
  %523 = load i32, i32* %522, align 4
  %524 = mul i32 1, %523
  %525 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %515, i32 0, i32 1
  %526 = getelementptr %dimension_descriptor, %dimension_descriptor* %525, i32 0, i32 1
  %527 = load i32, i32* %526, align 4
  %528 = sub i32 2, %527
  %529 = mul i32 %524, %528
  %530 = add i32 %521, %529
  %531 = getelementptr %dimension_descriptor, %dimension_descriptor* %525, i32 0, i32 3
  %532 = load i32, i32* %531, align 4
  %533 = mul i32 %524, %532
  %534 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %535 = getelementptr [4 x i1], [4 x i1]* %534, i32 0, i32 %530
  %536 = load i1, i1* %535, align 1
  br i1 %536, label %then73, label %else74

then73:                                           ; preds = %ifcont71
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @15, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont75

else74:                                           ; preds = %ifcont71
  br label %ifcont75

ifcont75:                                         ; preds = %else74, %then73
  %iftmp76 = phi i32 [ 1, %then73 ], [ 2, %else74 ]
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)

