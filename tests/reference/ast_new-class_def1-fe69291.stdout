(Module [(ClassDef Person [] [] [(FunctionDef __init__ ([] [(self () ()) (name () ()) (age () ())] [] [] [] [] []) [(Assign [(Tuple [(Attribute (Name self Load) name Store)] Store)] (Name name Load) ()) (Assign [(Tuple [(Attribute (Name self Load) age Store)] Store)] (Name age Load) ())] [] () ()) (FunctionDef print_name ([] [(self () ())] [] [] [] [] []) [(Pass) (Expr (Call (Name print Load) [(BinOp (ConstantStr "Hello my name is " ()) Add (Attribute (Name self Load) name Load))] []))] [] () ())] []) (ClassDef Dog [] [] [(FunctionDef __init__ ([] [(self () ()) (name () ())] [] [] [] [] []) [(Assign [(Tuple [(Attribute (Name self Load) name Store)] Store)] (Name name Load) ()) (Assign [(Tuple [(Attribute (Name self Load) tricks Store)] Store)] (List [] Load) ())] [] () ()) (FunctionDef add_trick ([] [(self () ()) (trick () ())] [] [] [] [] []) [(Expr (Call (Attribute (Attribute (Name self Load) tricks Load) append Load) [(Name trick Load)] []))] [] () ())] []) (ClassDef Mapping [] [] [(FunctionDef __init__ ([] [(self () ()) (iterable () ())] [] [] [] [] []) [(Assign [(Tuple [(Attribute (Name self Load) items_list Store)] Store)] (List [] Load) ()) (Expr (Call (Attribute (Name self Load) __update Load) [(Name iterable Load)] []))] [] () ()) (FunctionDef update ([] [(self () ()) (iterable () ())] [] [] [] [] []) [(For (Name item Store) (Name iterable Load) [(Expr (Call (Attribute (Attribute (Name self Load) items_list Load) append Load) [(Name item Load)] []))] [] ())] [] () ()) (Assign [(Tuple [(Name __update Store)] Store)] (Name update Load) ())] []) (ClassDef MappingSubclass [(Name Mapping Load)] [] [(FunctionDef update ([] [(self () ()) (keys () ()) (values () ())] [] [] [] [] []) [(For (Name item Store) (Call (Name zip Load) [(Name keys Load) (Name values Load)] []) [(Expr (Call (Attribute (Attribute (Name self Load) items_list Load) append Load) [(Name item Load)] []))] [] ())] [] () ())] []) (FunctionDef check ([] [] [] [] [] [] []) [(Assign [(Tuple [(Name p Store)] Store)] (Call (Name Person Load) [(ConstantStr "John" ()) (ConstantInt 36 ())] []) ()) (Assign [(Tuple [(Name d Store)] Store)] (Call (Name Dog Load) [(ConstantStr "Fido" ())] []) ()) (Expr (Call (Attribute (Name d Load) add_trick Load) [(ConstantStr "roll over" ())] [])) (Assign [(Tuple [(Name m Store)] Store)] (Call (Name Mapping Load) [(ConstantStr "x" ())] []) ()) (Expr (Call (Attribute (Name m Load) update Load) [(ConstantStr "y" ())] []))] [] () ()) (Expr (Call (Name check Load) [] []))] [])
