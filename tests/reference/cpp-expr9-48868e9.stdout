#include <iostream>
#include <string>
#include <vector>
#include <cassert>
#include <Kokkos_Core.hpp>
#include <lfortran_intrinsics.h>

template <typename T>
Kokkos::View<T*> from_std_vector(const std::vector<T> &v)
{
    Kokkos::View<T*> r("r", v.size());
    for (size_t i=0; i < v.size(); i++) {
        r(i) = v[i];
    }
    return r;
}

int test_return_1(int a)
{
    int _lpython_return_variable;
    int x;
    x = 5;
    _lpython_return_variable = x;
    return _lpython_return_variable;
}

std::string test_return_2(int a)
{
    std::string _lpython_return_variable;
    std::string x;
    x = "test";
    _lpython_return_variable = x;
    return _lpython_return_variable;
}

int test_return_3(int a)
{
    int _lpython_return_variable;
    a = 3;
    _lpython_return_variable = a;
    return _lpython_return_variable;
}

