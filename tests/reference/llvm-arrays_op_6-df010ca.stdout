; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { i32*, i32, [1 x %dimension_descriptor] }
%dimension_descriptor = type { i32, i32, i32, i32 }
%size_arg = type { %dimension_descriptor*, i32 }
%array_call = type { float*, i32, [3 x %dimension_descriptor] }
%array_call.1 = type { float*, i32, [3 x %dimension_descriptor] }
%array_call.2 = type { float*, i32, [3 x %dimension_descriptor] }
%array_call.4 = type { float*, i32, [3 x %dimension_descriptor] }
%array.0 = type { float*, i32, [3 x %dimension_descriptor] }
%array_call.5 = type { float*, i32, [3 x %dimension_descriptor] }
%array.3 = type { [8 x float], i32, [3 x %dimension_descriptor] }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

declare i32 @__module_lfortran_intrinsic_array_abs(%array*)

declare i1 @__module_lfortran_intrinsic_array_allocated(%array*)

define i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %lbound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %lbound, align 4
  %6 = load i32, i32* %lbound, align 4
  ret i32 %6
}

declare i32 @__module_lfortran_intrinsic_array_max(i32*, i32*)

declare i32 @__module_lfortran_intrinsic_array_maxval(%array*)

declare i32 @__module_lfortran_intrinsic_array_min(i32*, i32*)

declare i32 @__module_lfortran_intrinsic_array_minval(%array*)

declare i32 @__module_lfortran_intrinsic_array_real(%array*, i32*)

define i32 @__module_lfortran_intrinsic_array_size(%size_arg* %x) {
.entry:
  %size = alloca i32, align 4
  %0 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 0
  %1 = load %dimension_descriptor*, %dimension_descriptor** %0, align 8
  %2 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  store i32 1, i32* %size, align 4
  %4 = alloca i32, align 4
  store i32 0, i32* %4, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, %3
  br i1 %6, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %7 = load i32, i32* %4, align 4
  %8 = load i32, i32* %size, align 4
  %9 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 %7
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %8, %11
  store i32 %12, i32* %size, align 4
  %13 = add i32 %7, 1
  store i32 %13, i32* %4, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %14 = load i32, i32* %size, align 4
  ret i32 %14
}

declare i32 @__module_lfortran_intrinsic_array_sum(%array*)

define i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %ubound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %ubound, align 4
  %6 = load i32, i32* %ubound, align 4
  ret i32 %6
}

define void @asquare(%array_call* %a, %array_call.1* %b, %array_call.2* %c, %array_call.4* %d) {
.entry:
  %"1_k" = alloca i32, align 4
  %"2_k" = alloca i32, align 4
  %"3_k" = alloca i32, align 4
  %"~0_bin_op_res" = alloca %array.0, align 8
  %0 = alloca %dimension_descriptor*, align 8
  %1 = getelementptr %array_call, %array_call* %a, i32 0, i32 2
  %2 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1, i32 0, i32 0
  store %dimension_descriptor* %2, %dimension_descriptor** %0, align 8
  %3 = alloca i32, align 4
  store i32 1, i32* %3, align 4
  %4 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %0, i32* %3)
  %5 = alloca %dimension_descriptor*, align 8
  %6 = getelementptr %array_call, %array_call* %a, i32 0, i32 2
  %7 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %6, i32 0, i32 0
  store %dimension_descriptor* %7, %dimension_descriptor** %5, align 8
  %8 = alloca i32, align 4
  store i32 1, i32* %8, align 4
  %9 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %5, i32* %8)
  %10 = alloca %dimension_descriptor*, align 8
  %11 = getelementptr %array_call, %array_call* %a, i32 0, i32 2
  %12 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %11, i32 0, i32 0
  store %dimension_descriptor* %12, %dimension_descriptor** %10, align 8
  %13 = alloca i32, align 4
  store i32 2, i32* %13, align 4
  %14 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %10, i32* %13)
  %15 = alloca %dimension_descriptor*, align 8
  %16 = getelementptr %array_call, %array_call* %a, i32 0, i32 2
  %17 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %16, i32 0, i32 0
  store %dimension_descriptor* %17, %dimension_descriptor** %15, align 8
  %18 = alloca i32, align 4
  store i32 2, i32* %18, align 4
  %19 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %15, i32* %18)
  %20 = alloca %dimension_descriptor*, align 8
  %21 = getelementptr %array_call, %array_call* %a, i32 0, i32 2
  %22 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %21, i32 0, i32 0
  store %dimension_descriptor* %22, %dimension_descriptor** %20, align 8
  %23 = alloca i32, align 4
  store i32 3, i32* %23, align 4
  %24 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %20, i32* %23)
  %25 = alloca %dimension_descriptor*, align 8
  %26 = getelementptr %array_call, %array_call* %a, i32 0, i32 2
  %27 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %26, i32 0, i32 0
  store %dimension_descriptor* %27, %dimension_descriptor** %25, align 8
  %28 = alloca i32, align 4
  store i32 3, i32* %28, align 4
  %29 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %25, i32* %28)
  %30 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 1
  store i32 0, i32* %30, align 4
  %31 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 2
  %32 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %31, i32 0, i32 0
  %33 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 0
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 1
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 2
  %36 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 3
  store i32 1, i32* %33, align 4
  store i32 %4, i32* %34, align 4
  store i32 %9, i32* %35, align 4
  %37 = load i32, i32* %35, align 4
  %38 = load i32, i32* %34, align 4
  %39 = sub i32 %37, %38
  %40 = add i32 %39, 1
  store i32 %40, i32* %36, align 4
  %41 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %31, i32 0, i32 1
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 0
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 1
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 2
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 3
  store i32 1, i32* %42, align 4
  store i32 %14, i32* %43, align 4
  store i32 %19, i32* %44, align 4
  %46 = load i32, i32* %44, align 4
  %47 = load i32, i32* %43, align 4
  %48 = sub i32 %46, %47
  %49 = add i32 %48, 1
  store i32 %49, i32* %45, align 4
  %50 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %31, i32 0, i32 2
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 0
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 1
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 2
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 3
  store i32 1, i32* %51, align 4
  store i32 %24, i32* %52, align 4
  store i32 %29, i32* %53, align 4
  %55 = load i32, i32* %53, align 4
  %56 = load i32, i32* %52, align 4
  %57 = sub i32 %55, %56
  %58 = add i32 %57, 1
  store i32 %58, i32* %54, align 4
  %59 = alloca i32, align 4
  %60 = sub i32 %9, %4
  %61 = add i32 %60, 1
  %62 = mul i32 1, %61
  %63 = sub i32 %19, %14
  %64 = add i32 %63, 1
  %65 = mul i32 %62, %64
  %66 = sub i32 %29, %24
  %67 = add i32 %66, 1
  %68 = mul i32 %65, %67
  store i32 %68, i32* %59, align 4
  %69 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 0
  %70 = load i32, i32* %59, align 4
  %71 = alloca float, i32 %70, align 4
  store float* %71, float** %69, align 8
  %72 = alloca %dimension_descriptor*, align 8
  %73 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 2
  %74 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %73, i32 0, i32 0
  store %dimension_descriptor* %74, %dimension_descriptor** %72, align 8
  %75 = alloca i32, align 4
  store i32 1, i32* %75, align 4
  %76 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %72, i32* %75)
  %77 = sub i32 %76, 1
  store i32 %77, i32* %"1_k", align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %78 = load i32, i32* %"1_k", align 4
  %79 = add i32 %78, 1
  %80 = alloca %dimension_descriptor*, align 8
  %81 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 2
  %82 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %81, i32 0, i32 0
  store %dimension_descriptor* %82, %dimension_descriptor** %80, align 8
  %83 = alloca i32, align 4
  store i32 1, i32* %83, align 4
  %84 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %80, i32* %83)
  %85 = icmp sle i32 %79, %84
  br i1 %85, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %86 = load i32, i32* %"1_k", align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %"1_k", align 4
  %88 = alloca %dimension_descriptor*, align 8
  %89 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 2
  %90 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %89, i32 0, i32 0
  store %dimension_descriptor* %90, %dimension_descriptor** %88, align 8
  %91 = alloca i32, align 4
  store i32 2, i32* %91, align 4
  %92 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %88, i32* %91)
  %93 = sub i32 %92, 1
  store i32 %93, i32* %"2_k", align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %94 = load i32, i32* %"2_k", align 4
  %95 = add i32 %94, 1
  %96 = alloca %dimension_descriptor*, align 8
  %97 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 2
  %98 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %97, i32 0, i32 0
  store %dimension_descriptor* %98, %dimension_descriptor** %96, align 8
  %99 = alloca i32, align 4
  store i32 2, i32* %99, align 4
  %100 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %96, i32* %99)
  %101 = icmp sle i32 %95, %100
  br i1 %101, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %102 = load i32, i32* %"2_k", align 4
  %103 = add i32 %102, 1
  store i32 %103, i32* %"2_k", align 4
  %104 = alloca %dimension_descriptor*, align 8
  %105 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 2
  %106 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %105, i32 0, i32 0
  store %dimension_descriptor* %106, %dimension_descriptor** %104, align 8
  %107 = alloca i32, align 4
  store i32 3, i32* %107, align 4
  %108 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %104, i32* %107)
  %109 = sub i32 %108, 1
  store i32 %109, i32* %"3_k", align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %110 = load i32, i32* %"3_k", align 4
  %111 = add i32 %110, 1
  %112 = alloca %dimension_descriptor*, align 8
  %113 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 2
  %114 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %113, i32 0, i32 0
  store %dimension_descriptor* %114, %dimension_descriptor** %112, align 8
  %115 = alloca i32, align 4
  store i32 3, i32* %115, align 4
  %116 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %112, i32* %115)
  %117 = icmp sle i32 %111, %116
  br i1 %117, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %118 = load i32, i32* %"3_k", align 4
  %119 = add i32 %118, 1
  store i32 %119, i32* %"3_k", align 4
  %120 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 2
  %121 = load i32, i32* %"1_k", align 4
  %122 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %120, i32 0, i32 0
  %123 = getelementptr %dimension_descriptor, %dimension_descriptor* %122, i32 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = sub i32 %121, %124
  %126 = mul i32 1, %125
  %127 = add i32 0, %126
  %128 = getelementptr %dimension_descriptor, %dimension_descriptor* %122, i32 0, i32 3
  %129 = load i32, i32* %128, align 4
  %130 = mul i32 1, %129
  %131 = load i32, i32* %"2_k", align 4
  %132 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %120, i32 0, i32 1
  %133 = getelementptr %dimension_descriptor, %dimension_descriptor* %132, i32 0, i32 1
  %134 = load i32, i32* %133, align 4
  %135 = sub i32 %131, %134
  %136 = mul i32 %130, %135
  %137 = add i32 %127, %136
  %138 = getelementptr %dimension_descriptor, %dimension_descriptor* %132, i32 0, i32 3
  %139 = load i32, i32* %138, align 4
  %140 = mul i32 %130, %139
  %141 = load i32, i32* %"3_k", align 4
  %142 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %120, i32 0, i32 2
  %143 = getelementptr %dimension_descriptor, %dimension_descriptor* %142, i32 0, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = sub i32 %141, %144
  %146 = mul i32 %140, %145
  %147 = add i32 %137, %146
  %148 = getelementptr %dimension_descriptor, %dimension_descriptor* %142, i32 0, i32 3
  %149 = load i32, i32* %148, align 4
  %150 = mul i32 %140, %149
  %151 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 0
  %152 = load float*, float** %151, align 8
  %153 = getelementptr inbounds float, float* %152, i32 %147
  %154 = getelementptr %array_call, %array_call* %a, i32 0, i32 2
  %155 = load i32, i32* %"1_k", align 4
  %156 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %154, i32 0, i32 0
  %157 = getelementptr %dimension_descriptor, %dimension_descriptor* %156, i32 0, i32 1
  %158 = load i32, i32* %157, align 4
  %159 = sub i32 %155, %158
  %160 = mul i32 1, %159
  %161 = add i32 0, %160
  %162 = getelementptr %dimension_descriptor, %dimension_descriptor* %156, i32 0, i32 3
  %163 = load i32, i32* %162, align 4
  %164 = mul i32 1, %163
  %165 = load i32, i32* %"2_k", align 4
  %166 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %154, i32 0, i32 1
  %167 = getelementptr %dimension_descriptor, %dimension_descriptor* %166, i32 0, i32 1
  %168 = load i32, i32* %167, align 4
  %169 = sub i32 %165, %168
  %170 = mul i32 %164, %169
  %171 = add i32 %161, %170
  %172 = getelementptr %dimension_descriptor, %dimension_descriptor* %166, i32 0, i32 3
  %173 = load i32, i32* %172, align 4
  %174 = mul i32 %164, %173
  %175 = load i32, i32* %"3_k", align 4
  %176 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %154, i32 0, i32 2
  %177 = getelementptr %dimension_descriptor, %dimension_descriptor* %176, i32 0, i32 1
  %178 = load i32, i32* %177, align 4
  %179 = sub i32 %175, %178
  %180 = mul i32 %174, %179
  %181 = add i32 %171, %180
  %182 = getelementptr %dimension_descriptor, %dimension_descriptor* %176, i32 0, i32 3
  %183 = load i32, i32* %182, align 4
  %184 = mul i32 %174, %183
  %185 = getelementptr %array_call, %array_call* %a, i32 0, i32 0
  %186 = load float*, float** %185, align 8
  %187 = getelementptr inbounds float, float* %186, i32 %181
  %188 = load float, float* %187, align 4
  %189 = getelementptr %array_call.1, %array_call.1* %b, i32 0, i32 2
  %190 = load i32, i32* %"1_k", align 4
  %191 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %189, i32 0, i32 0
  %192 = getelementptr %dimension_descriptor, %dimension_descriptor* %191, i32 0, i32 1
  %193 = load i32, i32* %192, align 4
  %194 = sub i32 %190, %193
  %195 = mul i32 1, %194
  %196 = add i32 0, %195
  %197 = getelementptr %dimension_descriptor, %dimension_descriptor* %191, i32 0, i32 3
  %198 = load i32, i32* %197, align 4
  %199 = mul i32 1, %198
  %200 = load i32, i32* %"2_k", align 4
  %201 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %189, i32 0, i32 1
  %202 = getelementptr %dimension_descriptor, %dimension_descriptor* %201, i32 0, i32 1
  %203 = load i32, i32* %202, align 4
  %204 = sub i32 %200, %203
  %205 = mul i32 %199, %204
  %206 = add i32 %196, %205
  %207 = getelementptr %dimension_descriptor, %dimension_descriptor* %201, i32 0, i32 3
  %208 = load i32, i32* %207, align 4
  %209 = mul i32 %199, %208
  %210 = load i32, i32* %"3_k", align 4
  %211 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %189, i32 0, i32 2
  %212 = getelementptr %dimension_descriptor, %dimension_descriptor* %211, i32 0, i32 1
  %213 = load i32, i32* %212, align 4
  %214 = sub i32 %210, %213
  %215 = mul i32 %209, %214
  %216 = add i32 %206, %215
  %217 = getelementptr %dimension_descriptor, %dimension_descriptor* %211, i32 0, i32 3
  %218 = load i32, i32* %217, align 4
  %219 = mul i32 %209, %218
  %220 = getelementptr %array_call.1, %array_call.1* %b, i32 0, i32 0
  %221 = load float*, float** %220, align 8
  %222 = getelementptr inbounds float, float* %221, i32 %216
  %223 = load float, float* %222, align 4
  %224 = fadd float %188, %223
  store float %224, float* %153, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  %225 = alloca %dimension_descriptor*, align 8
  %226 = getelementptr %array_call.4, %array_call.4* %d, i32 0, i32 2
  %227 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %226, i32 0, i32 0
  store %dimension_descriptor* %227, %dimension_descriptor** %225, align 8
  %228 = alloca i32, align 4
  store i32 1, i32* %228, align 4
  %229 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %225, i32* %228)
  %230 = sub i32 %229, 1
  store i32 %230, i32* %"1_k", align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.end14, %loop.end6
  %231 = load i32, i32* %"1_k", align 4
  %232 = add i32 %231, 1
  %233 = alloca %dimension_descriptor*, align 8
  %234 = getelementptr %array_call.4, %array_call.4* %d, i32 0, i32 2
  %235 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %234, i32 0, i32 0
  store %dimension_descriptor* %235, %dimension_descriptor** %233, align 8
  %236 = alloca i32, align 4
  store i32 1, i32* %236, align 4
  %237 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %233, i32* %236)
  %238 = icmp sle i32 %232, %237
  br i1 %238, label %loop.body8, label %loop.end15

loop.body8:                                       ; preds = %loop.head7
  %239 = load i32, i32* %"1_k", align 4
  %240 = add i32 %239, 1
  store i32 %240, i32* %"1_k", align 4
  %241 = alloca %dimension_descriptor*, align 8
  %242 = getelementptr %array_call.4, %array_call.4* %d, i32 0, i32 2
  %243 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %242, i32 0, i32 0
  store %dimension_descriptor* %243, %dimension_descriptor** %241, align 8
  %244 = alloca i32, align 4
  store i32 2, i32* %244, align 4
  %245 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %241, i32* %244)
  %246 = sub i32 %245, 1
  store i32 %246, i32* %"2_k", align 4
  br label %loop.head9

loop.head9:                                       ; preds = %loop.end13, %loop.body8
  %247 = load i32, i32* %"2_k", align 4
  %248 = add i32 %247, 1
  %249 = alloca %dimension_descriptor*, align 8
  %250 = getelementptr %array_call.4, %array_call.4* %d, i32 0, i32 2
  %251 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %250, i32 0, i32 0
  store %dimension_descriptor* %251, %dimension_descriptor** %249, align 8
  %252 = alloca i32, align 4
  store i32 2, i32* %252, align 4
  %253 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %249, i32* %252)
  %254 = icmp sle i32 %248, %253
  br i1 %254, label %loop.body10, label %loop.end14

loop.body10:                                      ; preds = %loop.head9
  %255 = load i32, i32* %"2_k", align 4
  %256 = add i32 %255, 1
  store i32 %256, i32* %"2_k", align 4
  %257 = alloca %dimension_descriptor*, align 8
  %258 = getelementptr %array_call.4, %array_call.4* %d, i32 0, i32 2
  %259 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %258, i32 0, i32 0
  store %dimension_descriptor* %259, %dimension_descriptor** %257, align 8
  %260 = alloca i32, align 4
  store i32 3, i32* %260, align 4
  %261 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %257, i32* %260)
  %262 = sub i32 %261, 1
  store i32 %262, i32* %"3_k", align 4
  br label %loop.head11

loop.head11:                                      ; preds = %loop.body12, %loop.body10
  %263 = load i32, i32* %"3_k", align 4
  %264 = add i32 %263, 1
  %265 = alloca %dimension_descriptor*, align 8
  %266 = getelementptr %array_call.4, %array_call.4* %d, i32 0, i32 2
  %267 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %266, i32 0, i32 0
  store %dimension_descriptor* %267, %dimension_descriptor** %265, align 8
  %268 = alloca i32, align 4
  store i32 3, i32* %268, align 4
  %269 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %265, i32* %268)
  %270 = icmp sle i32 %264, %269
  br i1 %270, label %loop.body12, label %loop.end13

loop.body12:                                      ; preds = %loop.head11
  %271 = load i32, i32* %"3_k", align 4
  %272 = add i32 %271, 1
  store i32 %272, i32* %"3_k", align 4
  %273 = getelementptr %array_call.4, %array_call.4* %d, i32 0, i32 2
  %274 = load i32, i32* %"1_k", align 4
  %275 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %273, i32 0, i32 0
  %276 = getelementptr %dimension_descriptor, %dimension_descriptor* %275, i32 0, i32 1
  %277 = load i32, i32* %276, align 4
  %278 = sub i32 %274, %277
  %279 = mul i32 1, %278
  %280 = add i32 0, %279
  %281 = getelementptr %dimension_descriptor, %dimension_descriptor* %275, i32 0, i32 3
  %282 = load i32, i32* %281, align 4
  %283 = mul i32 1, %282
  %284 = load i32, i32* %"2_k", align 4
  %285 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %273, i32 0, i32 1
  %286 = getelementptr %dimension_descriptor, %dimension_descriptor* %285, i32 0, i32 1
  %287 = load i32, i32* %286, align 4
  %288 = sub i32 %284, %287
  %289 = mul i32 %283, %288
  %290 = add i32 %280, %289
  %291 = getelementptr %dimension_descriptor, %dimension_descriptor* %285, i32 0, i32 3
  %292 = load i32, i32* %291, align 4
  %293 = mul i32 %283, %292
  %294 = load i32, i32* %"3_k", align 4
  %295 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %273, i32 0, i32 2
  %296 = getelementptr %dimension_descriptor, %dimension_descriptor* %295, i32 0, i32 1
  %297 = load i32, i32* %296, align 4
  %298 = sub i32 %294, %297
  %299 = mul i32 %293, %298
  %300 = add i32 %290, %299
  %301 = getelementptr %dimension_descriptor, %dimension_descriptor* %295, i32 0, i32 3
  %302 = load i32, i32* %301, align 4
  %303 = mul i32 %293, %302
  %304 = getelementptr %array_call.4, %array_call.4* %d, i32 0, i32 0
  %305 = load float*, float** %304, align 8
  %306 = getelementptr inbounds float, float* %305, i32 %300
  %307 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 2
  %308 = load i32, i32* %"1_k", align 4
  %309 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %307, i32 0, i32 0
  %310 = getelementptr %dimension_descriptor, %dimension_descriptor* %309, i32 0, i32 1
  %311 = load i32, i32* %310, align 4
  %312 = sub i32 %308, %311
  %313 = mul i32 1, %312
  %314 = add i32 0, %313
  %315 = getelementptr %dimension_descriptor, %dimension_descriptor* %309, i32 0, i32 3
  %316 = load i32, i32* %315, align 4
  %317 = mul i32 1, %316
  %318 = load i32, i32* %"2_k", align 4
  %319 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %307, i32 0, i32 1
  %320 = getelementptr %dimension_descriptor, %dimension_descriptor* %319, i32 0, i32 1
  %321 = load i32, i32* %320, align 4
  %322 = sub i32 %318, %321
  %323 = mul i32 %317, %322
  %324 = add i32 %314, %323
  %325 = getelementptr %dimension_descriptor, %dimension_descriptor* %319, i32 0, i32 3
  %326 = load i32, i32* %325, align 4
  %327 = mul i32 %317, %326
  %328 = load i32, i32* %"3_k", align 4
  %329 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %307, i32 0, i32 2
  %330 = getelementptr %dimension_descriptor, %dimension_descriptor* %329, i32 0, i32 1
  %331 = load i32, i32* %330, align 4
  %332 = sub i32 %328, %331
  %333 = mul i32 %327, %332
  %334 = add i32 %324, %333
  %335 = getelementptr %dimension_descriptor, %dimension_descriptor* %329, i32 0, i32 3
  %336 = load i32, i32* %335, align 4
  %337 = mul i32 %327, %336
  %338 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 0
  %339 = load float*, float** %338, align 8
  %340 = getelementptr inbounds float, float* %339, i32 %334
  %341 = load float, float* %340, align 4
  %342 = getelementptr %array_call.2, %array_call.2* %c, i32 0, i32 2
  %343 = load i32, i32* %"1_k", align 4
  %344 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %342, i32 0, i32 0
  %345 = getelementptr %dimension_descriptor, %dimension_descriptor* %344, i32 0, i32 1
  %346 = load i32, i32* %345, align 4
  %347 = sub i32 %343, %346
  %348 = mul i32 1, %347
  %349 = add i32 0, %348
  %350 = getelementptr %dimension_descriptor, %dimension_descriptor* %344, i32 0, i32 3
  %351 = load i32, i32* %350, align 4
  %352 = mul i32 1, %351
  %353 = load i32, i32* %"2_k", align 4
  %354 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %342, i32 0, i32 1
  %355 = getelementptr %dimension_descriptor, %dimension_descriptor* %354, i32 0, i32 1
  %356 = load i32, i32* %355, align 4
  %357 = sub i32 %353, %356
  %358 = mul i32 %352, %357
  %359 = add i32 %349, %358
  %360 = getelementptr %dimension_descriptor, %dimension_descriptor* %354, i32 0, i32 3
  %361 = load i32, i32* %360, align 4
  %362 = mul i32 %352, %361
  %363 = load i32, i32* %"3_k", align 4
  %364 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %342, i32 0, i32 2
  %365 = getelementptr %dimension_descriptor, %dimension_descriptor* %364, i32 0, i32 1
  %366 = load i32, i32* %365, align 4
  %367 = sub i32 %363, %366
  %368 = mul i32 %362, %367
  %369 = add i32 %359, %368
  %370 = getelementptr %dimension_descriptor, %dimension_descriptor* %364, i32 0, i32 3
  %371 = load i32, i32* %370, align 4
  %372 = mul i32 %362, %371
  %373 = getelementptr %array_call.2, %array_call.2* %c, i32 0, i32 0
  %374 = load float*, float** %373, align 8
  %375 = getelementptr inbounds float, float* %374, i32 %369
  %376 = load float, float* %375, align 4
  %377 = fadd float %341, %376
  store float %377, float* %306, align 4
  br label %loop.head11

loop.end13:                                       ; preds = %loop.head11
  br label %loop.head9

loop.end14:                                       ; preds = %loop.head9
  br label %loop.head7

loop.end15:                                       ; preds = %loop.head7
  ret void
}

define void @check(%array_call.5* %c) {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %0 = alloca %dimension_descriptor*, align 8
  %1 = getelementptr %array_call.5, %array_call.5* %c, i32 0, i32 2
  %2 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1, i32 0, i32 0
  store %dimension_descriptor* %2, %dimension_descriptor** %0, align 8
  %3 = alloca i32, align 4
  store i32 1, i32* %3, align 4
  %4 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %0, i32* %3)
  %5 = sub i32 %4, 1
  store i32 %5, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %6 = load i32, i32* %i, align 4
  %7 = add i32 %6, 1
  %8 = alloca %dimension_descriptor*, align 8
  %9 = getelementptr %array_call.5, %array_call.5* %c, i32 0, i32 2
  %10 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %9, i32 0, i32 0
  store %dimension_descriptor* %10, %dimension_descriptor** %8, align 8
  %11 = alloca i32, align 4
  store i32 1, i32* %11, align 4
  %12 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %8, i32* %11)
  %13 = icmp sle i32 %7, %12
  br i1 %13, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %14 = load i32, i32* %i, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %i, align 4
  %16 = alloca %dimension_descriptor*, align 8
  %17 = getelementptr %array_call.5, %array_call.5* %c, i32 0, i32 2
  %18 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %17, i32 0, i32 0
  store %dimension_descriptor* %18, %dimension_descriptor** %16, align 8
  %19 = alloca i32, align 4
  store i32 2, i32* %19, align 4
  %20 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %16, i32* %19)
  %21 = sub i32 %20, 1
  store i32 %21, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %22 = load i32, i32* %j, align 4
  %23 = add i32 %22, 1
  %24 = alloca %dimension_descriptor*, align 8
  %25 = getelementptr %array_call.5, %array_call.5* %c, i32 0, i32 2
  %26 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %25, i32 0, i32 0
  store %dimension_descriptor* %26, %dimension_descriptor** %24, align 8
  %27 = alloca i32, align 4
  store i32 2, i32* %27, align 4
  %28 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %24, i32* %27)
  %29 = icmp sle i32 %23, %28
  br i1 %29, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %30 = load i32, i32* %j, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %j, align 4
  %32 = alloca %dimension_descriptor*, align 8
  %33 = getelementptr %array_call.5, %array_call.5* %c, i32 0, i32 2
  %34 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %33, i32 0, i32 0
  store %dimension_descriptor* %34, %dimension_descriptor** %32, align 8
  %35 = alloca i32, align 4
  store i32 3, i32* %35, align 4
  %36 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %32, i32* %35)
  %37 = sub i32 %36, 1
  store i32 %37, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %ifcont, %loop.body2
  %38 = load i32, i32* %k, align 4
  %39 = add i32 %38, 1
  %40 = alloca %dimension_descriptor*, align 8
  %41 = getelementptr %array_call.5, %array_call.5* %c, i32 0, i32 2
  %42 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %41, i32 0, i32 0
  store %dimension_descriptor* %42, %dimension_descriptor** %40, align 8
  %43 = alloca i32, align 4
  store i32 3, i32* %43, align 4
  %44 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %40, i32* %43)
  %45 = icmp sle i32 %39, %44
  br i1 %45, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %46 = load i32, i32* %k, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %k, align 4
  %48 = getelementptr %array_call.5, %array_call.5* %c, i32 0, i32 2
  %49 = load i32, i32* %i, align 4
  %50 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %48, i32 0, i32 0
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = sub i32 %49, %52
  %54 = mul i32 1, %53
  %55 = add i32 0, %54
  %56 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 3
  %57 = load i32, i32* %56, align 4
  %58 = mul i32 1, %57
  %59 = load i32, i32* %j, align 4
  %60 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %48, i32 0, i32 1
  %61 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = sub i32 %59, %62
  %64 = mul i32 %58, %63
  %65 = add i32 %55, %64
  %66 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 3
  %67 = load i32, i32* %66, align 4
  %68 = mul i32 %58, %67
  %69 = load i32, i32* %k, align 4
  %70 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %48, i32 0, i32 2
  %71 = getelementptr %dimension_descriptor, %dimension_descriptor* %70, i32 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = sub i32 %69, %72
  %74 = mul i32 %68, %73
  %75 = add i32 %65, %74
  %76 = getelementptr %dimension_descriptor, %dimension_descriptor* %70, i32 0, i32 3
  %77 = load i32, i32* %76, align 4
  %78 = mul i32 %68, %77
  %79 = getelementptr %array_call.5, %array_call.5* %c, i32 0, i32 0
  %80 = load float*, float** %79, align 8
  %81 = getelementptr inbounds float, float* %80, i32 %75
  %82 = load float, float* %81, align 4
  %83 = load i32, i32* %i, align 4
  %84 = load i32, i32* %j, align 4
  %85 = add i32 %83, %84
  %86 = load i32, i32* %k, align 4
  %87 = add i32 %85, %86
  %88 = sitofp i32 %87 to float
  %89 = call float @llvm.pow.f32(float %88, float 2.000000e+00)
  %90 = fptosi float %89 to i32
  %91 = sitofp i32 %90 to float
  %92 = fcmp une float %82, %91
  br i1 %92, label %then, label %else

then:                                             ; preds = %loop.body4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.body4
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %iftmp = phi i32 [ 1, %then ], [ 2, %else ]
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  ret void
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.pow.f32(float, float) #0

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)

define i32 @main() {
.entry:
  %a = alloca %array.3, align 8
  %0 = getelementptr %array.3, %array.3* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array.3, %array.3* %a, i32 0, i32 2
  %2 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1, i32 0, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 2
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 3
  store i32 1, i32* %3, align 4
  store i32 1, i32* %4, align 4
  store i32 2, i32* %5, align 4
  %7 = load i32, i32* %5, align 4
  %8 = load i32, i32* %4, align 4
  %9 = sub i32 %7, %8
  %10 = add i32 %9, 1
  store i32 %10, i32* %6, align 4
  %11 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1, i32 0, i32 1
  %12 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 0
  %13 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 1
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 2
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 3
  store i32 1, i32* %12, align 4
  store i32 1, i32* %13, align 4
  store i32 2, i32* %14, align 4
  %16 = load i32, i32* %14, align 4
  %17 = load i32, i32* %13, align 4
  %18 = sub i32 %16, %17
  %19 = add i32 %18, 1
  store i32 %19, i32* %15, align 4
  %20 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1, i32 0, i32 2
  %21 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 0
  %22 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 1
  %23 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 2
  %24 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 3
  store i32 1, i32* %21, align 4
  store i32 1, i32* %22, align 4
  store i32 2, i32* %23, align 4
  %25 = load i32, i32* %23, align 4
  %26 = load i32, i32* %22, align 4
  %27 = sub i32 %25, %26
  %28 = add i32 %27, 1
  store i32 %28, i32* %24, align 4
  %b = alloca %array.3, align 8
  %29 = getelementptr %array.3, %array.3* %b, i32 0, i32 1
  store i32 0, i32* %29, align 4
  %30 = getelementptr %array.3, %array.3* %b, i32 0, i32 2
  %31 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %30, i32 0, i32 0
  %32 = getelementptr %dimension_descriptor, %dimension_descriptor* %31, i32 0, i32 0
  %33 = getelementptr %dimension_descriptor, %dimension_descriptor* %31, i32 0, i32 1
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %31, i32 0, i32 2
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %31, i32 0, i32 3
  store i32 1, i32* %32, align 4
  store i32 1, i32* %33, align 4
  store i32 2, i32* %34, align 4
  %36 = load i32, i32* %34, align 4
  %37 = load i32, i32* %33, align 4
  %38 = sub i32 %36, %37
  %39 = add i32 %38, 1
  store i32 %39, i32* %35, align 4
  %40 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %30, i32 0, i32 1
  %41 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 0
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 1
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 2
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 3
  store i32 1, i32* %41, align 4
  store i32 1, i32* %42, align 4
  store i32 2, i32* %43, align 4
  %45 = load i32, i32* %43, align 4
  %46 = load i32, i32* %42, align 4
  %47 = sub i32 %45, %46
  %48 = add i32 %47, 1
  store i32 %48, i32* %44, align 4
  %49 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %30, i32 0, i32 2
  %50 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 0
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 1
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 2
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 3
  store i32 1, i32* %50, align 4
  store i32 1, i32* %51, align 4
  store i32 2, i32* %52, align 4
  %54 = load i32, i32* %52, align 4
  %55 = load i32, i32* %51, align 4
  %56 = sub i32 %54, %55
  %57 = add i32 %56, 1
  store i32 %57, i32* %53, align 4
  %c = alloca %array.3, align 8
  %58 = getelementptr %array.3, %array.3* %c, i32 0, i32 1
  store i32 0, i32* %58, align 4
  %59 = getelementptr %array.3, %array.3* %c, i32 0, i32 2
  %60 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %59, i32 0, i32 0
  %61 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 0
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 1
  %63 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 2
  %64 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 3
  store i32 1, i32* %61, align 4
  store i32 1, i32* %62, align 4
  store i32 2, i32* %63, align 4
  %65 = load i32, i32* %63, align 4
  %66 = load i32, i32* %62, align 4
  %67 = sub i32 %65, %66
  %68 = add i32 %67, 1
  store i32 %68, i32* %64, align 4
  %69 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %59, i32 0, i32 1
  %70 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 0
  %71 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 1
  %72 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 2
  %73 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 3
  store i32 1, i32* %70, align 4
  store i32 1, i32* %71, align 4
  store i32 2, i32* %72, align 4
  %74 = load i32, i32* %72, align 4
  %75 = load i32, i32* %71, align 4
  %76 = sub i32 %74, %75
  %77 = add i32 %76, 1
  store i32 %77, i32* %73, align 4
  %78 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %59, i32 0, i32 2
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 0
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 1
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 2
  %82 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 3
  store i32 1, i32* %79, align 4
  store i32 1, i32* %80, align 4
  store i32 2, i32* %81, align 4
  %83 = load i32, i32* %81, align 4
  %84 = load i32, i32* %80, align 4
  %85 = sub i32 %83, %84
  %86 = add i32 %85, 1
  store i32 %86, i32* %82, align 4
  %d = alloca %array.3, align 8
  %87 = getelementptr %array.3, %array.3* %d, i32 0, i32 1
  store i32 0, i32* %87, align 4
  %88 = getelementptr %array.3, %array.3* %d, i32 0, i32 2
  %89 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %88, i32 0, i32 0
  %90 = getelementptr %dimension_descriptor, %dimension_descriptor* %89, i32 0, i32 0
  %91 = getelementptr %dimension_descriptor, %dimension_descriptor* %89, i32 0, i32 1
  %92 = getelementptr %dimension_descriptor, %dimension_descriptor* %89, i32 0, i32 2
  %93 = getelementptr %dimension_descriptor, %dimension_descriptor* %89, i32 0, i32 3
  store i32 1, i32* %90, align 4
  store i32 1, i32* %91, align 4
  store i32 2, i32* %92, align 4
  %94 = load i32, i32* %92, align 4
  %95 = load i32, i32* %91, align 4
  %96 = sub i32 %94, %95
  %97 = add i32 %96, 1
  store i32 %97, i32* %93, align 4
  %98 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %88, i32 0, i32 1
  %99 = getelementptr %dimension_descriptor, %dimension_descriptor* %98, i32 0, i32 0
  %100 = getelementptr %dimension_descriptor, %dimension_descriptor* %98, i32 0, i32 1
  %101 = getelementptr %dimension_descriptor, %dimension_descriptor* %98, i32 0, i32 2
  %102 = getelementptr %dimension_descriptor, %dimension_descriptor* %98, i32 0, i32 3
  store i32 1, i32* %99, align 4
  store i32 1, i32* %100, align 4
  store i32 2, i32* %101, align 4
  %103 = load i32, i32* %101, align 4
  %104 = load i32, i32* %100, align 4
  %105 = sub i32 %103, %104
  %106 = add i32 %105, 1
  store i32 %106, i32* %102, align 4
  %107 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %88, i32 0, i32 2
  %108 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 0
  %109 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 1
  %110 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 2
  %111 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 3
  store i32 1, i32* %108, align 4
  store i32 1, i32* %109, align 4
  store i32 2, i32* %110, align 4
  %112 = load i32, i32* %110, align 4
  %113 = load i32, i32* %109, align 4
  %114 = sub i32 %112, %113
  %115 = add i32 %114, 1
  store i32 %115, i32* %111, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %116 = load i32, i32* %i, align 4
  %117 = add i32 %116, 1
  %118 = icmp sle i32 %117, 2
  br i1 %118, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %119 = load i32, i32* %i, align 4
  %120 = add i32 %119, 1
  store i32 %120, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %121 = load i32, i32* %j, align 4
  %122 = add i32 %121, 1
  %123 = icmp sle i32 %122, 2
  br i1 %123, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %124 = load i32, i32* %j, align 4
  %125 = add i32 %124, 1
  store i32 %125, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %126 = load i32, i32* %k, align 4
  %127 = add i32 %126, 1
  %128 = icmp sle i32 %127, 2
  br i1 %128, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %129 = load i32, i32* %k, align 4
  %130 = add i32 %129, 1
  store i32 %130, i32* %k, align 4
  %131 = getelementptr %array.3, %array.3* %a, i32 0, i32 2
  %132 = load i32, i32* %i, align 4
  %133 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %131, i32 0, i32 0
  %134 = getelementptr %dimension_descriptor, %dimension_descriptor* %133, i32 0, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = sub i32 %132, %135
  %137 = mul i32 1, %136
  %138 = add i32 0, %137
  %139 = getelementptr %dimension_descriptor, %dimension_descriptor* %133, i32 0, i32 3
  %140 = load i32, i32* %139, align 4
  %141 = mul i32 1, %140
  %142 = load i32, i32* %j, align 4
  %143 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %131, i32 0, i32 1
  %144 = getelementptr %dimension_descriptor, %dimension_descriptor* %143, i32 0, i32 1
  %145 = load i32, i32* %144, align 4
  %146 = sub i32 %142, %145
  %147 = mul i32 %141, %146
  %148 = add i32 %138, %147
  %149 = getelementptr %dimension_descriptor, %dimension_descriptor* %143, i32 0, i32 3
  %150 = load i32, i32* %149, align 4
  %151 = mul i32 %141, %150
  %152 = load i32, i32* %k, align 4
  %153 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %131, i32 0, i32 2
  %154 = getelementptr %dimension_descriptor, %dimension_descriptor* %153, i32 0, i32 1
  %155 = load i32, i32* %154, align 4
  %156 = sub i32 %152, %155
  %157 = mul i32 %151, %156
  %158 = add i32 %148, %157
  %159 = getelementptr %dimension_descriptor, %dimension_descriptor* %153, i32 0, i32 3
  %160 = load i32, i32* %159, align 4
  %161 = mul i32 %151, %160
  %162 = getelementptr %array.3, %array.3* %a, i32 0, i32 0
  %163 = getelementptr [8 x float], [8 x float]* %162, i32 0, i32 %158
  %164 = load i32, i32* %i, align 4
  %165 = load i32, i32* %i, align 4
  %166 = mul i32 %164, %165
  %167 = load i32, i32* %j, align 4
  %168 = load i32, i32* %j, align 4
  %169 = mul i32 %167, %168
  %170 = add i32 %166, %169
  %171 = load i32, i32* %k, align 4
  %172 = load i32, i32* %k, align 4
  %173 = mul i32 %171, %172
  %174 = add i32 %170, %173
  %175 = sitofp i32 %174 to float
  store float %175, float* %163, align 4
  %176 = getelementptr %array.3, %array.3* %b, i32 0, i32 2
  %177 = load i32, i32* %i, align 4
  %178 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %176, i32 0, i32 0
  %179 = getelementptr %dimension_descriptor, %dimension_descriptor* %178, i32 0, i32 1
  %180 = load i32, i32* %179, align 4
  %181 = sub i32 %177, %180
  %182 = mul i32 1, %181
  %183 = add i32 0, %182
  %184 = getelementptr %dimension_descriptor, %dimension_descriptor* %178, i32 0, i32 3
  %185 = load i32, i32* %184, align 4
  %186 = mul i32 1, %185
  %187 = load i32, i32* %j, align 4
  %188 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %176, i32 0, i32 1
  %189 = getelementptr %dimension_descriptor, %dimension_descriptor* %188, i32 0, i32 1
  %190 = load i32, i32* %189, align 4
  %191 = sub i32 %187, %190
  %192 = mul i32 %186, %191
  %193 = add i32 %183, %192
  %194 = getelementptr %dimension_descriptor, %dimension_descriptor* %188, i32 0, i32 3
  %195 = load i32, i32* %194, align 4
  %196 = mul i32 %186, %195
  %197 = load i32, i32* %k, align 4
  %198 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %176, i32 0, i32 2
  %199 = getelementptr %dimension_descriptor, %dimension_descriptor* %198, i32 0, i32 1
  %200 = load i32, i32* %199, align 4
  %201 = sub i32 %197, %200
  %202 = mul i32 %196, %201
  %203 = add i32 %193, %202
  %204 = getelementptr %dimension_descriptor, %dimension_descriptor* %198, i32 0, i32 3
  %205 = load i32, i32* %204, align 4
  %206 = mul i32 %196, %205
  %207 = getelementptr %array.3, %array.3* %b, i32 0, i32 0
  %208 = getelementptr [8 x float], [8 x float]* %207, i32 0, i32 %203
  %209 = load i32, i32* %i, align 4
  %210 = load i32, i32* %j, align 4
  %211 = mul i32 %209, %210
  %212 = load i32, i32* %j, align 4
  %213 = load i32, i32* %k, align 4
  %214 = mul i32 %212, %213
  %215 = add i32 %211, %214
  %216 = load i32, i32* %i, align 4
  %217 = load i32, i32* %k, align 4
  %218 = mul i32 %216, %217
  %219 = add i32 %215, %218
  %220 = mul i32 2, %219
  %221 = sitofp i32 %220 to float
  store float %221, float* %208, align 4
  %222 = getelementptr %array.3, %array.3* %c, i32 0, i32 2
  %223 = load i32, i32* %i, align 4
  %224 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %222, i32 0, i32 0
  %225 = getelementptr %dimension_descriptor, %dimension_descriptor* %224, i32 0, i32 1
  %226 = load i32, i32* %225, align 4
  %227 = sub i32 %223, %226
  %228 = mul i32 1, %227
  %229 = add i32 0, %228
  %230 = getelementptr %dimension_descriptor, %dimension_descriptor* %224, i32 0, i32 3
  %231 = load i32, i32* %230, align 4
  %232 = mul i32 1, %231
  %233 = load i32, i32* %j, align 4
  %234 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %222, i32 0, i32 1
  %235 = getelementptr %dimension_descriptor, %dimension_descriptor* %234, i32 0, i32 1
  %236 = load i32, i32* %235, align 4
  %237 = sub i32 %233, %236
  %238 = mul i32 %232, %237
  %239 = add i32 %229, %238
  %240 = getelementptr %dimension_descriptor, %dimension_descriptor* %234, i32 0, i32 3
  %241 = load i32, i32* %240, align 4
  %242 = mul i32 %232, %241
  %243 = load i32, i32* %k, align 4
  %244 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %222, i32 0, i32 2
  %245 = getelementptr %dimension_descriptor, %dimension_descriptor* %244, i32 0, i32 1
  %246 = load i32, i32* %245, align 4
  %247 = sub i32 %243, %246
  %248 = mul i32 %242, %247
  %249 = add i32 %239, %248
  %250 = getelementptr %dimension_descriptor, %dimension_descriptor* %244, i32 0, i32 3
  %251 = load i32, i32* %250, align 4
  %252 = mul i32 %242, %251
  %253 = getelementptr %array.3, %array.3* %c, i32 0, i32 0
  %254 = getelementptr [8 x float], [8 x float]* %253, i32 0, i32 %249
  store float 0.000000e+00, float* %254, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  %255 = alloca %array_call, align 8
  %256 = getelementptr %array.3, %array.3* %a, i32 0, i32 0
  %257 = getelementptr [8 x float], [8 x float]* %256, i32 0, i32 0
  %258 = getelementptr %array_call, %array_call* %255, i32 0, i32 0
  store float* %257, float** %258, align 8
  %259 = getelementptr %array.3, %array.3* %a, i32 0, i32 1
  %260 = load i32, i32* %259, align 4
  %261 = getelementptr %array_call, %array_call* %255, i32 0, i32 1
  store i32 %260, i32* %261, align 4
  %262 = getelementptr %array.3, %array.3* %a, i32 0, i32 2
  %263 = load [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %262, align 4
  %264 = getelementptr %array_call, %array_call* %255, i32 0, i32 2
  store [3 x %dimension_descriptor] %263, [3 x %dimension_descriptor]* %264, align 4
  %265 = alloca %array_call.1, align 8
  %266 = getelementptr %array.3, %array.3* %b, i32 0, i32 0
  %267 = getelementptr [8 x float], [8 x float]* %266, i32 0, i32 0
  %268 = getelementptr %array_call.1, %array_call.1* %265, i32 0, i32 0
  store float* %267, float** %268, align 8
  %269 = getelementptr %array.3, %array.3* %b, i32 0, i32 1
  %270 = load i32, i32* %269, align 4
  %271 = getelementptr %array_call.1, %array_call.1* %265, i32 0, i32 1
  store i32 %270, i32* %271, align 4
  %272 = getelementptr %array.3, %array.3* %b, i32 0, i32 2
  %273 = load [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %272, align 4
  %274 = getelementptr %array_call.1, %array_call.1* %265, i32 0, i32 2
  store [3 x %dimension_descriptor] %273, [3 x %dimension_descriptor]* %274, align 4
  %275 = alloca %array_call.2, align 8
  %276 = getelementptr %array.3, %array.3* %c, i32 0, i32 0
  %277 = getelementptr [8 x float], [8 x float]* %276, i32 0, i32 0
  %278 = getelementptr %array_call.2, %array_call.2* %275, i32 0, i32 0
  store float* %277, float** %278, align 8
  %279 = getelementptr %array.3, %array.3* %c, i32 0, i32 1
  %280 = load i32, i32* %279, align 4
  %281 = getelementptr %array_call.2, %array_call.2* %275, i32 0, i32 1
  store i32 %280, i32* %281, align 4
  %282 = getelementptr %array.3, %array.3* %c, i32 0, i32 2
  %283 = load [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %282, align 4
  %284 = getelementptr %array_call.2, %array_call.2* %275, i32 0, i32 2
  store [3 x %dimension_descriptor] %283, [3 x %dimension_descriptor]* %284, align 4
  %285 = alloca %array_call.4, align 8
  %286 = getelementptr %array.3, %array.3* %d, i32 0, i32 0
  %287 = getelementptr [8 x float], [8 x float]* %286, i32 0, i32 0
  %288 = getelementptr %array_call.4, %array_call.4* %285, i32 0, i32 0
  store float* %287, float** %288, align 8
  %289 = getelementptr %array.3, %array.3* %d, i32 0, i32 1
  %290 = load i32, i32* %289, align 4
  %291 = getelementptr %array_call.4, %array_call.4* %285, i32 0, i32 1
  store i32 %290, i32* %291, align 4
  %292 = getelementptr %array.3, %array.3* %d, i32 0, i32 2
  %293 = load [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %292, align 4
  %294 = getelementptr %array_call.4, %array_call.4* %285, i32 0, i32 2
  store [3 x %dimension_descriptor] %293, [3 x %dimension_descriptor]* %294, align 4
  call void @asquare(%array_call* %255, %array_call.1* %265, %array_call.2* %275, %array_call.4* %285)
  %295 = alloca %array_call.5, align 8
  %296 = getelementptr %array.3, %array.3* %d, i32 0, i32 0
  %297 = getelementptr [8 x float], [8 x float]* %296, i32 0, i32 0
  %298 = getelementptr %array_call.5, %array_call.5* %295, i32 0, i32 0
  store float* %297, float** %298, align 8
  %299 = getelementptr %array.3, %array.3* %d, i32 0, i32 1
  %300 = load i32, i32* %299, align 4
  %301 = getelementptr %array_call.5, %array_call.5* %295, i32 0, i32 1
  store i32 %300, i32* %301, align 4
  %302 = getelementptr %array.3, %array.3* %d, i32 0, i32 2
  %303 = load [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %302, align 4
  %304 = getelementptr %array_call.5, %array_call.5* %295, i32 0, i32 2
  store [3 x %dimension_descriptor] %303, [3 x %dimension_descriptor]* %304, align 4
  call void @check(%array_call.5* %295)
  ret i32 0
}

attributes #0 = { nounwind readnone speculatable willreturn }

