#include <iostream>
#include <string>
#include <vector>
#include <cassert>
#include <cmath>
#include <Kokkos_Core.hpp>
#include <lfortran_intrinsics.h>

template <typename T>
Kokkos::View<T*> from_std_vector(const std::vector<T> &v)
{
    Kokkos::View<T*> r("r", v.size());
    for (size_t i=0; i < v.size(); i++) {
        r(i) = v[i];
    }
    return r;
}

int check()
{
    int _lpython_return_variable;
    int a;
    a = test(2, 2);
    _lpython_return_variable = a;
    return _lpython_return_variable;
}

int test(int a, int b)
{
    int _lpython_return_variable;
    _lpython_return_variable = std::pow(a, b);
    return _lpython_return_variable;
}

