(TranslationUnit (SymbolTable 1 {test_factorial_1: (Subroutine (SymbolTable 2 {result: (Variable 2 result Local () () Default (Integer 4 []) Source Public Required .false.), x: (Variable 2 x In () () Default (Integer 4 []) Source Public Required .false.)}) test_factorial_1 [(Var 2 x)] [(If (Compare (Var 2 x) Lt (ConstantInteger 0 (Integer 4 [])) (Logical 4 []) () ()) [(Return)] []) (= (Var 2 result) (ConstantInteger 1 (Integer 4 [])) ()) (WhileLoop (Compare (Var 2 x) Gt (ConstantInteger 0 (Integer 4 [])) (Logical 4 []) () ()) [(= (Var 2 result) (BinOp (Var 2 result) Mul (Var 2 x) (Integer 4 []) () ()) ()) (= (Var 2 x) (BinOp (Var 2 x) Sub (ConstantInteger 1 (Integer 4 [])) (Integer 4 []) () ()) ())]) (Return)] Source Public Implementation () .false. .false.), test_factorial_2: (Subroutine (SymbolTable 3 {i: (Variable 3 i Local () () Default (Integer 4 []) Source Public Required .false.), result: (Variable 3 result Local () () Default (Integer 4 []) Source Public Required .false.), x: (Variable 3 x In () () Default (Integer 4 []) Source Public Required .false.)}) test_factorial_2 [(Var 3 x)] [(= (Var 3 result) (ConstantInteger 1 (Integer 4 [])) ()) (DoLoop ((Var 3 i) (ConstantInteger 1 (Integer 4 [])) (BinOp (BinOp (Var 3 x) Add (ConstantInteger 1 (Integer 4 [])) (Integer 4 []) () ()) Sub (ConstantInteger 1 (Integer 4 [])) (Integer 4 []) () ()) (ConstantInteger 1 (Integer 4 []))) [(= (Var 3 result) (BinOp (Var 3 result) Mul (Var 3 i) (Integer 4 []) () ()) ())]) (Return)] Source Public Implementation () .false. .false.)}) [])
